//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WindowsFormsApplication3 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("accounts_reportsDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class accounts_reportsDataSet : global::System.Data.DataSet {
        
        private bank_brach_codeDataTable tablebank_brach_code;
        
        private bankcodeDataTable tablebankcode;
        
        private bookingsDataTable tablebookings;
        
        private cashier_cashDataTable tablecashier_cash;
        
        private hibernate_sequenceDataTable tablehibernate_sequence;
        
        private tuk_acc_detailDataTable tabletuk_acc_detail;
        
        private tuk_lastbalanceDataTable tabletuk_lastbalance;
        
        private tuk_sp_promoDataTable tabletuk_sp_promo;
        
        private tuk_transferpayment_DateDataTable tabletuk_transferpayment_Date;
        
        private tuk_wallet_hiresDataTable tabletuk_wallet_hires;
        
        private tuk_wallet_paymentDataTable tabletuk_wallet_payment;
        
        private tuk_wallet_paymentsummaryDataTable tabletuk_wallet_paymentsummary;
        
        private achiniDataTable tableachini;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public accounts_reportsDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected accounts_reportsDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["bank_brach_code"] != null)) {
                    base.Tables.Add(new bank_brach_codeDataTable(ds.Tables["bank_brach_code"]));
                }
                if ((ds.Tables["bankcode"] != null)) {
                    base.Tables.Add(new bankcodeDataTable(ds.Tables["bankcode"]));
                }
                if ((ds.Tables["bookings"] != null)) {
                    base.Tables.Add(new bookingsDataTable(ds.Tables["bookings"]));
                }
                if ((ds.Tables["cashier_cash"] != null)) {
                    base.Tables.Add(new cashier_cashDataTable(ds.Tables["cashier_cash"]));
                }
                if ((ds.Tables["hibernate_sequence"] != null)) {
                    base.Tables.Add(new hibernate_sequenceDataTable(ds.Tables["hibernate_sequence"]));
                }
                if ((ds.Tables["tuk_acc_detail"] != null)) {
                    base.Tables.Add(new tuk_acc_detailDataTable(ds.Tables["tuk_acc_detail"]));
                }
                if ((ds.Tables["tuk_lastbalance"] != null)) {
                    base.Tables.Add(new tuk_lastbalanceDataTable(ds.Tables["tuk_lastbalance"]));
                }
                if ((ds.Tables["tuk_sp_promo"] != null)) {
                    base.Tables.Add(new tuk_sp_promoDataTable(ds.Tables["tuk_sp_promo"]));
                }
                if ((ds.Tables["tuk_transferpayment_Date"] != null)) {
                    base.Tables.Add(new tuk_transferpayment_DateDataTable(ds.Tables["tuk_transferpayment_Date"]));
                }
                if ((ds.Tables["tuk_wallet_hires"] != null)) {
                    base.Tables.Add(new tuk_wallet_hiresDataTable(ds.Tables["tuk_wallet_hires"]));
                }
                if ((ds.Tables["tuk_wallet_payment"] != null)) {
                    base.Tables.Add(new tuk_wallet_paymentDataTable(ds.Tables["tuk_wallet_payment"]));
                }
                if ((ds.Tables["tuk_wallet_paymentsummary"] != null)) {
                    base.Tables.Add(new tuk_wallet_paymentsummaryDataTable(ds.Tables["tuk_wallet_paymentsummary"]));
                }
                if ((ds.Tables["achini"] != null)) {
                    base.Tables.Add(new achiniDataTable(ds.Tables["achini"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public bank_brach_codeDataTable bank_brach_code {
            get {
                return this.tablebank_brach_code;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public bankcodeDataTable bankcode {
            get {
                return this.tablebankcode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public bookingsDataTable bookings {
            get {
                return this.tablebookings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public cashier_cashDataTable cashier_cash {
            get {
                return this.tablecashier_cash;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public hibernate_sequenceDataTable hibernate_sequence {
            get {
                return this.tablehibernate_sequence;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tuk_acc_detailDataTable tuk_acc_detail {
            get {
                return this.tabletuk_acc_detail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tuk_lastbalanceDataTable tuk_lastbalance {
            get {
                return this.tabletuk_lastbalance;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tuk_sp_promoDataTable tuk_sp_promo {
            get {
                return this.tabletuk_sp_promo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tuk_transferpayment_DateDataTable tuk_transferpayment_Date {
            get {
                return this.tabletuk_transferpayment_Date;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tuk_wallet_hiresDataTable tuk_wallet_hires {
            get {
                return this.tabletuk_wallet_hires;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tuk_wallet_paymentDataTable tuk_wallet_payment {
            get {
                return this.tabletuk_wallet_payment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tuk_wallet_paymentsummaryDataTable tuk_wallet_paymentsummary {
            get {
                return this.tabletuk_wallet_paymentsummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public achiniDataTable achini {
            get {
                return this.tableachini;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            accounts_reportsDataSet cln = ((accounts_reportsDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["bank_brach_code"] != null)) {
                    base.Tables.Add(new bank_brach_codeDataTable(ds.Tables["bank_brach_code"]));
                }
                if ((ds.Tables["bankcode"] != null)) {
                    base.Tables.Add(new bankcodeDataTable(ds.Tables["bankcode"]));
                }
                if ((ds.Tables["bookings"] != null)) {
                    base.Tables.Add(new bookingsDataTable(ds.Tables["bookings"]));
                }
                if ((ds.Tables["cashier_cash"] != null)) {
                    base.Tables.Add(new cashier_cashDataTable(ds.Tables["cashier_cash"]));
                }
                if ((ds.Tables["hibernate_sequence"] != null)) {
                    base.Tables.Add(new hibernate_sequenceDataTable(ds.Tables["hibernate_sequence"]));
                }
                if ((ds.Tables["tuk_acc_detail"] != null)) {
                    base.Tables.Add(new tuk_acc_detailDataTable(ds.Tables["tuk_acc_detail"]));
                }
                if ((ds.Tables["tuk_lastbalance"] != null)) {
                    base.Tables.Add(new tuk_lastbalanceDataTable(ds.Tables["tuk_lastbalance"]));
                }
                if ((ds.Tables["tuk_sp_promo"] != null)) {
                    base.Tables.Add(new tuk_sp_promoDataTable(ds.Tables["tuk_sp_promo"]));
                }
                if ((ds.Tables["tuk_transferpayment_Date"] != null)) {
                    base.Tables.Add(new tuk_transferpayment_DateDataTable(ds.Tables["tuk_transferpayment_Date"]));
                }
                if ((ds.Tables["tuk_wallet_hires"] != null)) {
                    base.Tables.Add(new tuk_wallet_hiresDataTable(ds.Tables["tuk_wallet_hires"]));
                }
                if ((ds.Tables["tuk_wallet_payment"] != null)) {
                    base.Tables.Add(new tuk_wallet_paymentDataTable(ds.Tables["tuk_wallet_payment"]));
                }
                if ((ds.Tables["tuk_wallet_paymentsummary"] != null)) {
                    base.Tables.Add(new tuk_wallet_paymentsummaryDataTable(ds.Tables["tuk_wallet_paymentsummary"]));
                }
                if ((ds.Tables["achini"] != null)) {
                    base.Tables.Add(new achiniDataTable(ds.Tables["achini"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablebank_brach_code = ((bank_brach_codeDataTable)(base.Tables["bank_brach_code"]));
            if ((initTable == true)) {
                if ((this.tablebank_brach_code != null)) {
                    this.tablebank_brach_code.InitVars();
                }
            }
            this.tablebankcode = ((bankcodeDataTable)(base.Tables["bankcode"]));
            if ((initTable == true)) {
                if ((this.tablebankcode != null)) {
                    this.tablebankcode.InitVars();
                }
            }
            this.tablebookings = ((bookingsDataTable)(base.Tables["bookings"]));
            if ((initTable == true)) {
                if ((this.tablebookings != null)) {
                    this.tablebookings.InitVars();
                }
            }
            this.tablecashier_cash = ((cashier_cashDataTable)(base.Tables["cashier_cash"]));
            if ((initTable == true)) {
                if ((this.tablecashier_cash != null)) {
                    this.tablecashier_cash.InitVars();
                }
            }
            this.tablehibernate_sequence = ((hibernate_sequenceDataTable)(base.Tables["hibernate_sequence"]));
            if ((initTable == true)) {
                if ((this.tablehibernate_sequence != null)) {
                    this.tablehibernate_sequence.InitVars();
                }
            }
            this.tabletuk_acc_detail = ((tuk_acc_detailDataTable)(base.Tables["tuk_acc_detail"]));
            if ((initTable == true)) {
                if ((this.tabletuk_acc_detail != null)) {
                    this.tabletuk_acc_detail.InitVars();
                }
            }
            this.tabletuk_lastbalance = ((tuk_lastbalanceDataTable)(base.Tables["tuk_lastbalance"]));
            if ((initTable == true)) {
                if ((this.tabletuk_lastbalance != null)) {
                    this.tabletuk_lastbalance.InitVars();
                }
            }
            this.tabletuk_sp_promo = ((tuk_sp_promoDataTable)(base.Tables["tuk_sp_promo"]));
            if ((initTable == true)) {
                if ((this.tabletuk_sp_promo != null)) {
                    this.tabletuk_sp_promo.InitVars();
                }
            }
            this.tabletuk_transferpayment_Date = ((tuk_transferpayment_DateDataTable)(base.Tables["tuk_transferpayment_Date"]));
            if ((initTable == true)) {
                if ((this.tabletuk_transferpayment_Date != null)) {
                    this.tabletuk_transferpayment_Date.InitVars();
                }
            }
            this.tabletuk_wallet_hires = ((tuk_wallet_hiresDataTable)(base.Tables["tuk_wallet_hires"]));
            if ((initTable == true)) {
                if ((this.tabletuk_wallet_hires != null)) {
                    this.tabletuk_wallet_hires.InitVars();
                }
            }
            this.tabletuk_wallet_payment = ((tuk_wallet_paymentDataTable)(base.Tables["tuk_wallet_payment"]));
            if ((initTable == true)) {
                if ((this.tabletuk_wallet_payment != null)) {
                    this.tabletuk_wallet_payment.InitVars();
                }
            }
            this.tabletuk_wallet_paymentsummary = ((tuk_wallet_paymentsummaryDataTable)(base.Tables["tuk_wallet_paymentsummary"]));
            if ((initTable == true)) {
                if ((this.tabletuk_wallet_paymentsummary != null)) {
                    this.tabletuk_wallet_paymentsummary.InitVars();
                }
            }
            this.tableachini = ((achiniDataTable)(base.Tables["achini"]));
            if ((initTable == true)) {
                if ((this.tableachini != null)) {
                    this.tableachini.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "accounts_reportsDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/accounts_reportsDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablebank_brach_code = new bank_brach_codeDataTable();
            base.Tables.Add(this.tablebank_brach_code);
            this.tablebankcode = new bankcodeDataTable();
            base.Tables.Add(this.tablebankcode);
            this.tablebookings = new bookingsDataTable();
            base.Tables.Add(this.tablebookings);
            this.tablecashier_cash = new cashier_cashDataTable();
            base.Tables.Add(this.tablecashier_cash);
            this.tablehibernate_sequence = new hibernate_sequenceDataTable();
            base.Tables.Add(this.tablehibernate_sequence);
            this.tabletuk_acc_detail = new tuk_acc_detailDataTable();
            base.Tables.Add(this.tabletuk_acc_detail);
            this.tabletuk_lastbalance = new tuk_lastbalanceDataTable();
            base.Tables.Add(this.tabletuk_lastbalance);
            this.tabletuk_sp_promo = new tuk_sp_promoDataTable();
            base.Tables.Add(this.tabletuk_sp_promo);
            this.tabletuk_transferpayment_Date = new tuk_transferpayment_DateDataTable();
            base.Tables.Add(this.tabletuk_transferpayment_Date);
            this.tabletuk_wallet_hires = new tuk_wallet_hiresDataTable();
            base.Tables.Add(this.tabletuk_wallet_hires);
            this.tabletuk_wallet_payment = new tuk_wallet_paymentDataTable();
            base.Tables.Add(this.tabletuk_wallet_payment);
            this.tabletuk_wallet_paymentsummary = new tuk_wallet_paymentsummaryDataTable();
            base.Tables.Add(this.tabletuk_wallet_paymentsummary);
            this.tableachini = new achiniDataTable();
            base.Tables.Add(this.tableachini);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializebank_brach_code() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializebankcode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializebookings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecashier_cash() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializehibernate_sequence() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetuk_acc_detail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetuk_lastbalance() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetuk_sp_promo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetuk_transferpayment_Date() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetuk_wallet_hires() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetuk_wallet_payment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetuk_wallet_paymentsummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeachini() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            accounts_reportsDataSet ds = new accounts_reportsDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void bank_brach_codeRowChangeEventHandler(object sender, bank_brach_codeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void bankcodeRowChangeEventHandler(object sender, bankcodeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void bookingsRowChangeEventHandler(object sender, bookingsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void cashier_cashRowChangeEventHandler(object sender, cashier_cashRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void hibernate_sequenceRowChangeEventHandler(object sender, hibernate_sequenceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tuk_acc_detailRowChangeEventHandler(object sender, tuk_acc_detailRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tuk_lastbalanceRowChangeEventHandler(object sender, tuk_lastbalanceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tuk_sp_promoRowChangeEventHandler(object sender, tuk_sp_promoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tuk_transferpayment_DateRowChangeEventHandler(object sender, tuk_transferpayment_DateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tuk_wallet_hiresRowChangeEventHandler(object sender, tuk_wallet_hiresRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tuk_wallet_paymentRowChangeEventHandler(object sender, tuk_wallet_paymentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tuk_wallet_paymentsummaryRowChangeEventHandler(object sender, tuk_wallet_paymentsummaryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void achiniRowChangeEventHandler(object sender, achiniRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class bank_brach_codeDataTable : global::System.Data.TypedTableBase<bank_brach_codeRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnbank_name;
            
            private global::System.Data.DataColumn columnbank_code;
            
            private global::System.Data.DataColumn columnbranch_code;
            
            private global::System.Data.DataColumn columnbranch_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bank_brach_codeDataTable() {
                this.TableName = "bank_brach_code";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal bank_brach_codeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected bank_brach_codeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bank_nameColumn {
                get {
                    return this.columnbank_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bank_codeColumn {
                get {
                    return this.columnbank_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn branch_codeColumn {
                get {
                    return this.columnbranch_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn branch_nameColumn {
                get {
                    return this.columnbranch_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bank_brach_codeRow this[int index] {
                get {
                    return ((bank_brach_codeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bank_brach_codeRowChangeEventHandler bank_brach_codeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bank_brach_codeRowChangeEventHandler bank_brach_codeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bank_brach_codeRowChangeEventHandler bank_brach_codeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bank_brach_codeRowChangeEventHandler bank_brach_codeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addbank_brach_codeRow(bank_brach_codeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bank_brach_codeRow Addbank_brach_codeRow(string bank_name, string bank_code, string branch_code, string branch_name) {
                bank_brach_codeRow rowbank_brach_codeRow = ((bank_brach_codeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        bank_name,
                        bank_code,
                        branch_code,
                        branch_name};
                rowbank_brach_codeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbank_brach_codeRow);
                return rowbank_brach_codeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bank_brach_codeRow FindByid(int id) {
                return ((bank_brach_codeRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                bank_brach_codeDataTable cln = ((bank_brach_codeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new bank_brach_codeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnbank_name = base.Columns["bank_name"];
                this.columnbank_code = base.Columns["bank_code"];
                this.columnbranch_code = base.Columns["branch_code"];
                this.columnbranch_name = base.Columns["branch_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnbank_name = new global::System.Data.DataColumn("bank_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbank_name);
                this.columnbank_code = new global::System.Data.DataColumn("bank_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbank_code);
                this.columnbranch_code = new global::System.Data.DataColumn("branch_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbranch_code);
                this.columnbranch_name = new global::System.Data.DataColumn("branch_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbranch_name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnbank_name.AllowDBNull = false;
                this.columnbank_name.MaxLength = 200;
                this.columnbank_code.AllowDBNull = false;
                this.columnbank_code.MaxLength = 10;
                this.columnbranch_code.AllowDBNull = false;
                this.columnbranch_code.MaxLength = 10;
                this.columnbranch_name.AllowDBNull = false;
                this.columnbranch_name.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bank_brach_codeRow Newbank_brach_codeRow() {
                return ((bank_brach_codeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new bank_brach_codeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(bank_brach_codeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.bank_brach_codeRowChanged != null)) {
                    this.bank_brach_codeRowChanged(this, new bank_brach_codeRowChangeEvent(((bank_brach_codeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.bank_brach_codeRowChanging != null)) {
                    this.bank_brach_codeRowChanging(this, new bank_brach_codeRowChangeEvent(((bank_brach_codeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.bank_brach_codeRowDeleted != null)) {
                    this.bank_brach_codeRowDeleted(this, new bank_brach_codeRowChangeEvent(((bank_brach_codeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.bank_brach_codeRowDeleting != null)) {
                    this.bank_brach_codeRowDeleting(this, new bank_brach_codeRowChangeEvent(((bank_brach_codeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removebank_brach_codeRow(bank_brach_codeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                accounts_reportsDataSet ds = new accounts_reportsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "bank_brach_codeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class bankcodeDataTable : global::System.Data.TypedTableBase<bankcodeRow> {
            
            private global::System.Data.DataColumn columnbank_code;
            
            private global::System.Data.DataColumn columnbank;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bankcodeDataTable() {
                this.TableName = "bankcode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal bankcodeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected bankcodeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bank_codeColumn {
                get {
                    return this.columnbank_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bankColumn {
                get {
                    return this.columnbank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bankcodeRow this[int index] {
                get {
                    return ((bankcodeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bankcodeRowChangeEventHandler bankcodeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bankcodeRowChangeEventHandler bankcodeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bankcodeRowChangeEventHandler bankcodeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bankcodeRowChangeEventHandler bankcodeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddbankcodeRow(bankcodeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bankcodeRow AddbankcodeRow(int bank_code, string bank) {
                bankcodeRow rowbankcodeRow = ((bankcodeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        bank_code,
                        bank};
                rowbankcodeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbankcodeRow);
                return rowbankcodeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bankcodeRow FindBybank_code(int bank_code) {
                return ((bankcodeRow)(this.Rows.Find(new object[] {
                            bank_code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                bankcodeDataTable cln = ((bankcodeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new bankcodeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnbank_code = base.Columns["bank_code"];
                this.columnbank = base.Columns["bank"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnbank_code = new global::System.Data.DataColumn("bank_code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbank_code);
                this.columnbank = new global::System.Data.DataColumn("bank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbank);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnbank_code}, true));
                this.columnbank_code.AllowDBNull = false;
                this.columnbank_code.Unique = true;
                this.columnbank.AllowDBNull = false;
                this.columnbank.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bankcodeRow NewbankcodeRow() {
                return ((bankcodeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new bankcodeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(bankcodeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.bankcodeRowChanged != null)) {
                    this.bankcodeRowChanged(this, new bankcodeRowChangeEvent(((bankcodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.bankcodeRowChanging != null)) {
                    this.bankcodeRowChanging(this, new bankcodeRowChangeEvent(((bankcodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.bankcodeRowDeleted != null)) {
                    this.bankcodeRowDeleted(this, new bankcodeRowChangeEvent(((bankcodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.bankcodeRowDeleting != null)) {
                    this.bankcodeRowDeleting(this, new bankcodeRowChangeEvent(((bankcodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovebankcodeRow(bankcodeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                accounts_reportsDataSet ds = new accounts_reportsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "bankcodeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class bookingsDataTable : global::System.Data.TypedTableBase<bookingsRow> {
            
            private global::System.Data.DataColumn columnrefID;
            
            private global::System.Data.DataColumn columncabNo;
            
            private global::System.Data.DataColumn columnuserID;
            
            private global::System.Data.DataColumn columnuser_no;
            
            private global::System.Data.DataColumn columnbookingType;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columnvehicularType;
            
            private global::System.Data.DataColumn columnpaymentMethod;
            
            private global::System.Data.DataColumn columncustomerFirstName;
            
            private global::System.Data.DataColumn columncustomerLastName;
            
            private global::System.Data.DataColumn columnpickUpAddress;
            
            private global::System.Data.DataColumn columndropOffAddress;
            
            private global::System.Data.DataColumn columnpromoCode;
            
            private global::System.Data.DataColumn columnrequestedTime;
            
            private global::System.Data.DataColumn columnpackageID;
            
            private global::System.Data.DataColumn columncallUpCharge;
            
            private global::System.Data.DataColumn columnisUnmarked;
            
            private global::System.Data.DataColumn columnisGuestCarrier;
            
            private global::System.Data.DataColumn columnisAutoDispatch;
            
            private global::System.Data.DataColumn columnrequiredCabNo;
            
            private global::System.Data.DataColumn columnoutsidePickUp;
            
            private global::System.Data.DataColumn columnpackageType;
            
            private global::System.Data.DataColumn columnvoucherNumber;
            
            private global::System.Data.DataColumn columnstartTime;
            
            private global::System.Data.DataColumn columndriverAcceptTime;
            
            private global::System.Data.DataColumn columndriverArriveTime;
            
            private global::System.Data.DataColumn columnendTime;
            
            private global::System.Data.DataColumn columnpaidTime;
            
            private global::System.Data.DataColumn columndistance;
            
            private global::System.Data.DataColumn columnwaitingTime;
            
            private global::System.Data.DataColumn columnbaseFare;
            
            private global::System.Data.DataColumn columndistanceFare;
            
            private global::System.Data.DataColumn columnwaitingFare;
            
            private global::System.Data.DataColumn columntotalFare;
            
            private global::System.Data.DataColumn columndiscount;
            
            private global::System.Data.DataColumn columnbaseKm;
            
            private global::System.Data.DataColumn columndispatchedTime;
            
            private global::System.Data.DataColumn columndriverAppVersion;
            
            private global::System.Data.DataColumn columnmaskedCard;
            
            private global::System.Data.DataColumn columncustomPackage;
            
            private global::System.Data.DataColumn columnpackage_detail;
            
            private global::System.Data.DataColumn columncorporatePaymentToken;
            
            private global::System.Data.DataColumn columnisCheckedCorporate;
            
            private global::System.Data.DataColumn columnpickUpLat;
            
            private global::System.Data.DataColumn columnpickUpLng;
            
            private global::System.Data.DataColumn columninitialDropOffLat;
            
            private global::System.Data.DataColumn columninitialDropOffLng;
            
            private global::System.Data.DataColumn columndriverID;
            
            private global::System.Data.DataColumn columncountryCode;
            
            private global::System.Data.DataColumn columncontactNumber;
            
            private global::System.Data.DataColumn columnlandmarks;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columncustomPackageBaseKm;
            
            private global::System.Data.DataColumn columncustomPackageRate;
            
            private global::System.Data.DataColumn columncustomPackageBaseRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bookingsDataTable() {
                this.TableName = "bookings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal bookingsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected bookingsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn refIDColumn {
                get {
                    return this.columnrefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cabNoColumn {
                get {
                    return this.columncabNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userIDColumn {
                get {
                    return this.columnuserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn user_noColumn {
                get {
                    return this.columnuser_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bookingTypeColumn {
                get {
                    return this.columnbookingType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn vehicularTypeColumn {
                get {
                    return this.columnvehicularType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn paymentMethodColumn {
                get {
                    return this.columnpaymentMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn customerFirstNameColumn {
                get {
                    return this.columncustomerFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn customerLastNameColumn {
                get {
                    return this.columncustomerLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pickUpAddressColumn {
                get {
                    return this.columnpickUpAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dropOffAddressColumn {
                get {
                    return this.columndropOffAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn promoCodeColumn {
                get {
                    return this.columnpromoCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn requestedTimeColumn {
                get {
                    return this.columnrequestedTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn packageIDColumn {
                get {
                    return this.columnpackageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn callUpChargeColumn {
                get {
                    return this.columncallUpCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isUnmarkedColumn {
                get {
                    return this.columnisUnmarked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isGuestCarrierColumn {
                get {
                    return this.columnisGuestCarrier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isAutoDispatchColumn {
                get {
                    return this.columnisAutoDispatch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn requiredCabNoColumn {
                get {
                    return this.columnrequiredCabNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn outsidePickUpColumn {
                get {
                    return this.columnoutsidePickUp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn packageTypeColumn {
                get {
                    return this.columnpackageType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn voucherNumberColumn {
                get {
                    return this.columnvoucherNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn startTimeColumn {
                get {
                    return this.columnstartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn driverAcceptTimeColumn {
                get {
                    return this.columndriverAcceptTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn driverArriveTimeColumn {
                get {
                    return this.columndriverArriveTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn endTimeColumn {
                get {
                    return this.columnendTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn paidTimeColumn {
                get {
                    return this.columnpaidTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn distanceColumn {
                get {
                    return this.columndistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn waitingTimeColumn {
                get {
                    return this.columnwaitingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn baseFareColumn {
                get {
                    return this.columnbaseFare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn distanceFareColumn {
                get {
                    return this.columndistanceFare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn waitingFareColumn {
                get {
                    return this.columnwaitingFare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn totalFareColumn {
                get {
                    return this.columntotalFare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn discountColumn {
                get {
                    return this.columndiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn baseKmColumn {
                get {
                    return this.columnbaseKm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dispatchedTimeColumn {
                get {
                    return this.columndispatchedTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn driverAppVersionColumn {
                get {
                    return this.columndriverAppVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn maskedCardColumn {
                get {
                    return this.columnmaskedCard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn customPackageColumn {
                get {
                    return this.columncustomPackage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn package_detailColumn {
                get {
                    return this.columnpackage_detail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn corporatePaymentTokenColumn {
                get {
                    return this.columncorporatePaymentToken;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isCheckedCorporateColumn {
                get {
                    return this.columnisCheckedCorporate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pickUpLatColumn {
                get {
                    return this.columnpickUpLat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pickUpLngColumn {
                get {
                    return this.columnpickUpLng;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn initialDropOffLatColumn {
                get {
                    return this.columninitialDropOffLat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn initialDropOffLngColumn {
                get {
                    return this.columninitialDropOffLng;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn driverIDColumn {
                get {
                    return this.columndriverID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn countryCodeColumn {
                get {
                    return this.columncountryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn contactNumberColumn {
                get {
                    return this.columncontactNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn landmarksColumn {
                get {
                    return this.columnlandmarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn customPackageBaseKmColumn {
                get {
                    return this.columncustomPackageBaseKm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn customPackageRateColumn {
                get {
                    return this.columncustomPackageRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn customPackageBaseRateColumn {
                get {
                    return this.columncustomPackageBaseRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bookingsRow this[int index] {
                get {
                    return ((bookingsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bookingsRowChangeEventHandler bookingsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bookingsRowChangeEventHandler bookingsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bookingsRowChangeEventHandler bookingsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event bookingsRowChangeEventHandler bookingsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddbookingsRow(bookingsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bookingsRow AddbookingsRow(
                        string refID, 
                        string cabNo, 
                        string userID, 
                        string user_no, 
                        string bookingType, 
                        string status, 
                        string type, 
                        string vehicularType, 
                        string paymentMethod, 
                        string customerFirstName, 
                        string customerLastName, 
                        string pickUpAddress, 
                        string dropOffAddress, 
                        string promoCode, 
                        System.DateTime requestedTime, 
                        string packageID, 
                        double callUpCharge, 
                        bool isUnmarked, 
                        bool isGuestCarrier, 
                        bool isAutoDispatch, 
                        string requiredCabNo, 
                        bool outsidePickUp, 
                        string packageType, 
                        string voucherNumber, 
                        System.DateTime startTime, 
                        System.DateTime driverAcceptTime, 
                        System.DateTime driverArriveTime, 
                        System.DateTime endTime, 
                        System.DateTime paidTime, 
                        double distance, 
                        double waitingTime, 
                        double baseFare, 
                        double distanceFare, 
                        double waitingFare, 
                        double totalFare, 
                        double discount, 
                        int baseKm, 
                        System.DateTime dispatchedTime, 
                        string driverAppVersion, 
                        string maskedCard, 
                        string customPackage, 
                        string package_detail, 
                        string corporatePaymentToken, 
                        ulong isCheckedCorporate, 
                        double pickUpLat, 
                        double pickUpLng, 
                        double initialDropOffLat, 
                        double initialDropOffLng, 
                        int driverID, 
                        string countryCode, 
                        string contactNumber, 
                        string landmarks, 
                        string email, 
                        int customPackageBaseKm, 
                        int customPackageRate, 
                        string customPackageBaseRate) {
                bookingsRow rowbookingsRow = ((bookingsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        refID,
                        cabNo,
                        userID,
                        user_no,
                        bookingType,
                        status,
                        type,
                        vehicularType,
                        paymentMethod,
                        customerFirstName,
                        customerLastName,
                        pickUpAddress,
                        dropOffAddress,
                        promoCode,
                        requestedTime,
                        packageID,
                        callUpCharge,
                        isUnmarked,
                        isGuestCarrier,
                        isAutoDispatch,
                        requiredCabNo,
                        outsidePickUp,
                        packageType,
                        voucherNumber,
                        startTime,
                        driverAcceptTime,
                        driverArriveTime,
                        endTime,
                        paidTime,
                        distance,
                        waitingTime,
                        baseFare,
                        distanceFare,
                        waitingFare,
                        totalFare,
                        discount,
                        baseKm,
                        dispatchedTime,
                        driverAppVersion,
                        maskedCard,
                        customPackage,
                        package_detail,
                        corporatePaymentToken,
                        isCheckedCorporate,
                        pickUpLat,
                        pickUpLng,
                        initialDropOffLat,
                        initialDropOffLng,
                        driverID,
                        countryCode,
                        contactNumber,
                        landmarks,
                        email,
                        customPackageBaseKm,
                        customPackageRate,
                        customPackageBaseRate};
                rowbookingsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbookingsRow);
                return rowbookingsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bookingsRow FindByrefID(string refID) {
                return ((bookingsRow)(this.Rows.Find(new object[] {
                            refID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                bookingsDataTable cln = ((bookingsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new bookingsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnrefID = base.Columns["refID"];
                this.columncabNo = base.Columns["cabNo"];
                this.columnuserID = base.Columns["userID"];
                this.columnuser_no = base.Columns["user_no"];
                this.columnbookingType = base.Columns["bookingType"];
                this.columnstatus = base.Columns["status"];
                this.columntype = base.Columns["type"];
                this.columnvehicularType = base.Columns["vehicularType"];
                this.columnpaymentMethod = base.Columns["paymentMethod"];
                this.columncustomerFirstName = base.Columns["customerFirstName"];
                this.columncustomerLastName = base.Columns["customerLastName"];
                this.columnpickUpAddress = base.Columns["pickUpAddress"];
                this.columndropOffAddress = base.Columns["dropOffAddress"];
                this.columnpromoCode = base.Columns["promoCode"];
                this.columnrequestedTime = base.Columns["requestedTime"];
                this.columnpackageID = base.Columns["packageID"];
                this.columncallUpCharge = base.Columns["callUpCharge"];
                this.columnisUnmarked = base.Columns["isUnmarked"];
                this.columnisGuestCarrier = base.Columns["isGuestCarrier"];
                this.columnisAutoDispatch = base.Columns["isAutoDispatch"];
                this.columnrequiredCabNo = base.Columns["requiredCabNo"];
                this.columnoutsidePickUp = base.Columns["outsidePickUp"];
                this.columnpackageType = base.Columns["packageType"];
                this.columnvoucherNumber = base.Columns["voucherNumber"];
                this.columnstartTime = base.Columns["startTime"];
                this.columndriverAcceptTime = base.Columns["driverAcceptTime"];
                this.columndriverArriveTime = base.Columns["driverArriveTime"];
                this.columnendTime = base.Columns["endTime"];
                this.columnpaidTime = base.Columns["paidTime"];
                this.columndistance = base.Columns["distance"];
                this.columnwaitingTime = base.Columns["waitingTime"];
                this.columnbaseFare = base.Columns["baseFare"];
                this.columndistanceFare = base.Columns["distanceFare"];
                this.columnwaitingFare = base.Columns["waitingFare"];
                this.columntotalFare = base.Columns["totalFare"];
                this.columndiscount = base.Columns["discount"];
                this.columnbaseKm = base.Columns["baseKm"];
                this.columndispatchedTime = base.Columns["dispatchedTime"];
                this.columndriverAppVersion = base.Columns["driverAppVersion"];
                this.columnmaskedCard = base.Columns["maskedCard"];
                this.columncustomPackage = base.Columns["customPackage"];
                this.columnpackage_detail = base.Columns["package_detail"];
                this.columncorporatePaymentToken = base.Columns["corporatePaymentToken"];
                this.columnisCheckedCorporate = base.Columns["isCheckedCorporate"];
                this.columnpickUpLat = base.Columns["pickUpLat"];
                this.columnpickUpLng = base.Columns["pickUpLng"];
                this.columninitialDropOffLat = base.Columns["initialDropOffLat"];
                this.columninitialDropOffLng = base.Columns["initialDropOffLng"];
                this.columndriverID = base.Columns["driverID"];
                this.columncountryCode = base.Columns["countryCode"];
                this.columncontactNumber = base.Columns["contactNumber"];
                this.columnlandmarks = base.Columns["landmarks"];
                this.columnemail = base.Columns["email"];
                this.columncustomPackageBaseKm = base.Columns["customPackageBaseKm"];
                this.columncustomPackageRate = base.Columns["customPackageRate"];
                this.columncustomPackageBaseRate = base.Columns["customPackageBaseRate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnrefID = new global::System.Data.DataColumn("refID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefID);
                this.columncabNo = new global::System.Data.DataColumn("cabNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncabNo);
                this.columnuserID = new global::System.Data.DataColumn("userID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserID);
                this.columnuser_no = new global::System.Data.DataColumn("user_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_no);
                this.columnbookingType = new global::System.Data.DataColumn("bookingType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbookingType);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columntype = new global::System.Data.DataColumn("type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnvehicularType = new global::System.Data.DataColumn("vehicularType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehicularType);
                this.columnpaymentMethod = new global::System.Data.DataColumn("paymentMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaymentMethod);
                this.columncustomerFirstName = new global::System.Data.DataColumn("customerFirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomerFirstName);
                this.columncustomerLastName = new global::System.Data.DataColumn("customerLastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomerLastName);
                this.columnpickUpAddress = new global::System.Data.DataColumn("pickUpAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpickUpAddress);
                this.columndropOffAddress = new global::System.Data.DataColumn("dropOffAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndropOffAddress);
                this.columnpromoCode = new global::System.Data.DataColumn("promoCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpromoCode);
                this.columnrequestedTime = new global::System.Data.DataColumn("requestedTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrequestedTime);
                this.columnpackageID = new global::System.Data.DataColumn("packageID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpackageID);
                this.columncallUpCharge = new global::System.Data.DataColumn("callUpCharge", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncallUpCharge);
                this.columnisUnmarked = new global::System.Data.DataColumn("isUnmarked", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisUnmarked);
                this.columnisGuestCarrier = new global::System.Data.DataColumn("isGuestCarrier", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisGuestCarrier);
                this.columnisAutoDispatch = new global::System.Data.DataColumn("isAutoDispatch", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisAutoDispatch);
                this.columnrequiredCabNo = new global::System.Data.DataColumn("requiredCabNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrequiredCabNo);
                this.columnoutsidePickUp = new global::System.Data.DataColumn("outsidePickUp", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoutsidePickUp);
                this.columnpackageType = new global::System.Data.DataColumn("packageType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpackageType);
                this.columnvoucherNumber = new global::System.Data.DataColumn("voucherNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvoucherNumber);
                this.columnstartTime = new global::System.Data.DataColumn("startTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartTime);
                this.columndriverAcceptTime = new global::System.Data.DataColumn("driverAcceptTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriverAcceptTime);
                this.columndriverArriveTime = new global::System.Data.DataColumn("driverArriveTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriverArriveTime);
                this.columnendTime = new global::System.Data.DataColumn("endTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnendTime);
                this.columnpaidTime = new global::System.Data.DataColumn("paidTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaidTime);
                this.columndistance = new global::System.Data.DataColumn("distance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndistance);
                this.columnwaitingTime = new global::System.Data.DataColumn("waitingTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwaitingTime);
                this.columnbaseFare = new global::System.Data.DataColumn("baseFare", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbaseFare);
                this.columndistanceFare = new global::System.Data.DataColumn("distanceFare", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndistanceFare);
                this.columnwaitingFare = new global::System.Data.DataColumn("waitingFare", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwaitingFare);
                this.columntotalFare = new global::System.Data.DataColumn("totalFare", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalFare);
                this.columndiscount = new global::System.Data.DataColumn("discount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscount);
                this.columnbaseKm = new global::System.Data.DataColumn("baseKm", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbaseKm);
                this.columndispatchedTime = new global::System.Data.DataColumn("dispatchedTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndispatchedTime);
                this.columndriverAppVersion = new global::System.Data.DataColumn("driverAppVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriverAppVersion);
                this.columnmaskedCard = new global::System.Data.DataColumn("maskedCard", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaskedCard);
                this.columncustomPackage = new global::System.Data.DataColumn("customPackage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomPackage);
                this.columnpackage_detail = new global::System.Data.DataColumn("package_detail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpackage_detail);
                this.columncorporatePaymentToken = new global::System.Data.DataColumn("corporatePaymentToken", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncorporatePaymentToken);
                this.columnisCheckedCorporate = new global::System.Data.DataColumn("isCheckedCorporate", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisCheckedCorporate);
                this.columnpickUpLat = new global::System.Data.DataColumn("pickUpLat", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpickUpLat);
                this.columnpickUpLng = new global::System.Data.DataColumn("pickUpLng", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpickUpLng);
                this.columninitialDropOffLat = new global::System.Data.DataColumn("initialDropOffLat", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninitialDropOffLat);
                this.columninitialDropOffLng = new global::System.Data.DataColumn("initialDropOffLng", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninitialDropOffLng);
                this.columndriverID = new global::System.Data.DataColumn("driverID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriverID);
                this.columncountryCode = new global::System.Data.DataColumn("countryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncountryCode);
                this.columncontactNumber = new global::System.Data.DataColumn("contactNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontactNumber);
                this.columnlandmarks = new global::System.Data.DataColumn("landmarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlandmarks);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columncustomPackageBaseKm = new global::System.Data.DataColumn("customPackageBaseKm", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomPackageBaseKm);
                this.columncustomPackageRate = new global::System.Data.DataColumn("customPackageRate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomPackageRate);
                this.columncustomPackageBaseRate = new global::System.Data.DataColumn("customPackageBaseRate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomPackageBaseRate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnrefID}, true));
                this.columnrefID.AllowDBNull = false;
                this.columnrefID.Unique = true;
                this.columnrefID.MaxLength = 15;
                this.columncabNo.MaxLength = 4;
                this.columnuserID.AllowDBNull = false;
                this.columnuserID.MaxLength = 10;
                this.columnuser_no.AllowDBNull = false;
                this.columnuser_no.MaxLength = 10;
                this.columnbookingType.AllowDBNull = false;
                this.columnbookingType.MaxLength = 50;
                this.columnstatus.AllowDBNull = false;
                this.columnstatus.MaxLength = 20;
                this.columntype.AllowDBNull = false;
                this.columntype.MaxLength = 50;
                this.columnvehicularType.AllowDBNull = false;
                this.columnvehicularType.MaxLength = 20;
                this.columnpaymentMethod.AllowDBNull = false;
                this.columnpaymentMethod.MaxLength = 20;
                this.columncustomerFirstName.AllowDBNull = false;
                this.columncustomerFirstName.MaxLength = 100;
                this.columncustomerLastName.AllowDBNull = false;
                this.columncustomerLastName.MaxLength = 100;
                this.columnpickUpAddress.AllowDBNull = false;
                this.columnpickUpAddress.MaxLength = 500;
                this.columndropOffAddress.MaxLength = 100;
                this.columnpromoCode.MaxLength = 10;
                this.columnrequestedTime.AllowDBNull = false;
                this.columnpackageID.MaxLength = 12;
                this.columncallUpCharge.AllowDBNull = false;
                this.columnisUnmarked.AllowDBNull = false;
                this.columnisGuestCarrier.AllowDBNull = false;
                this.columnisAutoDispatch.AllowDBNull = false;
                this.columnrequiredCabNo.MaxLength = 4;
                this.columnoutsidePickUp.AllowDBNull = false;
                this.columnpackageType.AllowDBNull = false;
                this.columnpackageType.MaxLength = 100;
                this.columnvoucherNumber.MaxLength = 10;
                this.columndriverAcceptTime.AllowDBNull = false;
                this.columndriverArriveTime.AllowDBNull = false;
                this.columnendTime.AllowDBNull = false;
                this.columnpaidTime.AllowDBNull = false;
                this.columndistance.AllowDBNull = false;
                this.columnwaitingTime.AllowDBNull = false;
                this.columnbaseFare.AllowDBNull = false;
                this.columndistanceFare.AllowDBNull = false;
                this.columnwaitingFare.AllowDBNull = false;
                this.columntotalFare.AllowDBNull = false;
                this.columndiscount.AllowDBNull = false;
                this.columnbaseKm.AllowDBNull = false;
                this.columndispatchedTime.AllowDBNull = false;
                this.columndriverAppVersion.AllowDBNull = false;
                this.columndriverAppVersion.MaxLength = 10;
                this.columnmaskedCard.AllowDBNull = false;
                this.columnmaskedCard.MaxLength = 100;
                this.columncustomPackage.AllowDBNull = false;
                this.columncustomPackage.MaxLength = 200;
                this.columnpackage_detail.AllowDBNull = false;
                this.columnpackage_detail.MaxLength = 100;
                this.columncorporatePaymentToken.AllowDBNull = false;
                this.columncorporatePaymentToken.MaxLength = 50;
                this.columnpickUpLat.AllowDBNull = false;
                this.columnpickUpLng.AllowDBNull = false;
                this.columninitialDropOffLat.AllowDBNull = false;
                this.columninitialDropOffLng.AllowDBNull = false;
                this.columndriverID.AllowDBNull = false;
                this.columncountryCode.AllowDBNull = false;
                this.columncountryCode.MaxLength = 5;
                this.columncontactNumber.AllowDBNull = false;
                this.columncontactNumber.MaxLength = 15;
                this.columnlandmarks.AllowDBNull = false;
                this.columnlandmarks.MaxLength = 100;
                this.columnemail.AllowDBNull = false;
                this.columnemail.MaxLength = 100;
                this.columncustomPackageBaseKm.AllowDBNull = false;
                this.columncustomPackageRate.AllowDBNull = false;
                this.columncustomPackageBaseRate.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bookingsRow NewbookingsRow() {
                return ((bookingsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new bookingsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(bookingsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.bookingsRowChanged != null)) {
                    this.bookingsRowChanged(this, new bookingsRowChangeEvent(((bookingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.bookingsRowChanging != null)) {
                    this.bookingsRowChanging(this, new bookingsRowChangeEvent(((bookingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.bookingsRowDeleted != null)) {
                    this.bookingsRowDeleted(this, new bookingsRowChangeEvent(((bookingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.bookingsRowDeleting != null)) {
                    this.bookingsRowDeleting(this, new bookingsRowChangeEvent(((bookingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovebookingsRow(bookingsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                accounts_reportsDataSet ds = new accounts_reportsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "bookingsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class cashier_cashDataTable : global::System.Data.TypedTableBase<cashier_cashRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columncashier;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnlogdate;
            
            private global::System.Data.DataColumn columndate;
            
            private global::System.Data.DataColumn columnenter_by;
            
            private global::System.Data.DataColumn columndipartment;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnnon_active;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public cashier_cashDataTable() {
                this.TableName = "cashier_cash";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal cashier_cashDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected cashier_cashDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cashierColumn {
                get {
                    return this.columncashier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn logdateColumn {
                get {
                    return this.columnlogdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dateColumn {
                get {
                    return this.columndate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn enter_byColumn {
                get {
                    return this.columnenter_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dipartmentColumn {
                get {
                    return this.columndipartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn non_activeColumn {
                get {
                    return this.columnnon_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public cashier_cashRow this[int index] {
                get {
                    return ((cashier_cashRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event cashier_cashRowChangeEventHandler cashier_cashRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event cashier_cashRowChangeEventHandler cashier_cashRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event cashier_cashRowChangeEventHandler cashier_cashRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event cashier_cashRowChangeEventHandler cashier_cashRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addcashier_cashRow(cashier_cashRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public cashier_cashRow Addcashier_cashRow(string cashier, double amount, System.DateTime logdate, System.DateTime date, string enter_by, string dipartment, string status, string non_active) {
                cashier_cashRow rowcashier_cashRow = ((cashier_cashRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        cashier,
                        amount,
                        logdate,
                        date,
                        enter_by,
                        dipartment,
                        status,
                        non_active};
                rowcashier_cashRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcashier_cashRow);
                return rowcashier_cashRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public cashier_cashRow FindByid(int id) {
                return ((cashier_cashRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                cashier_cashDataTable cln = ((cashier_cashDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new cashier_cashDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columncashier = base.Columns["cashier"];
                this.columnamount = base.Columns["amount"];
                this.columnlogdate = base.Columns["logdate"];
                this.columndate = base.Columns["date"];
                this.columnenter_by = base.Columns["enter_by"];
                this.columndipartment = base.Columns["dipartment"];
                this.columnstatus = base.Columns["status"];
                this.columnnon_active = base.Columns["non_active"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columncashier = new global::System.Data.DataColumn("cashier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncashier);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnlogdate = new global::System.Data.DataColumn("logdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogdate);
                this.columndate = new global::System.Data.DataColumn("date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate);
                this.columnenter_by = new global::System.Data.DataColumn("enter_by", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenter_by);
                this.columndipartment = new global::System.Data.DataColumn("dipartment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndipartment);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnnon_active = new global::System.Data.DataColumn("non_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnon_active);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columncashier.AllowDBNull = false;
                this.columncashier.MaxLength = 10;
                this.columnamount.AllowDBNull = false;
                this.columnlogdate.AllowDBNull = false;
                this.columndate.AllowDBNull = false;
                this.columnenter_by.AllowDBNull = false;
                this.columnenter_by.MaxLength = 15;
                this.columndipartment.AllowDBNull = false;
                this.columndipartment.MaxLength = 7;
                this.columnstatus.AllowDBNull = false;
                this.columnstatus.MaxLength = 20;
                this.columnnon_active.AllowDBNull = false;
                this.columnnon_active.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public cashier_cashRow Newcashier_cashRow() {
                return ((cashier_cashRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new cashier_cashRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(cashier_cashRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.cashier_cashRowChanged != null)) {
                    this.cashier_cashRowChanged(this, new cashier_cashRowChangeEvent(((cashier_cashRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.cashier_cashRowChanging != null)) {
                    this.cashier_cashRowChanging(this, new cashier_cashRowChangeEvent(((cashier_cashRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.cashier_cashRowDeleted != null)) {
                    this.cashier_cashRowDeleted(this, new cashier_cashRowChangeEvent(((cashier_cashRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.cashier_cashRowDeleting != null)) {
                    this.cashier_cashRowDeleting(this, new cashier_cashRowChangeEvent(((cashier_cashRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removecashier_cashRow(cashier_cashRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                accounts_reportsDataSet ds = new accounts_reportsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "cashier_cashDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class hibernate_sequenceDataTable : global::System.Data.TypedTableBase<hibernate_sequenceRow> {
            
            private global::System.Data.DataColumn columnnext_val;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hibernate_sequenceDataTable() {
                this.TableName = "hibernate_sequence";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal hibernate_sequenceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected hibernate_sequenceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn next_valColumn {
                get {
                    return this.columnnext_val;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hibernate_sequenceRow this[int index] {
                get {
                    return ((hibernate_sequenceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event hibernate_sequenceRowChangeEventHandler hibernate_sequenceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event hibernate_sequenceRowChangeEventHandler hibernate_sequenceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event hibernate_sequenceRowChangeEventHandler hibernate_sequenceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event hibernate_sequenceRowChangeEventHandler hibernate_sequenceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addhibernate_sequenceRow(hibernate_sequenceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hibernate_sequenceRow Addhibernate_sequenceRow(long next_val) {
                hibernate_sequenceRow rowhibernate_sequenceRow = ((hibernate_sequenceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        next_val};
                rowhibernate_sequenceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowhibernate_sequenceRow);
                return rowhibernate_sequenceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                hibernate_sequenceDataTable cln = ((hibernate_sequenceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new hibernate_sequenceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnnext_val = base.Columns["next_val"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnnext_val = new global::System.Data.DataColumn("next_val", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnext_val);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hibernate_sequenceRow Newhibernate_sequenceRow() {
                return ((hibernate_sequenceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new hibernate_sequenceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(hibernate_sequenceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.hibernate_sequenceRowChanged != null)) {
                    this.hibernate_sequenceRowChanged(this, new hibernate_sequenceRowChangeEvent(((hibernate_sequenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.hibernate_sequenceRowChanging != null)) {
                    this.hibernate_sequenceRowChanging(this, new hibernate_sequenceRowChangeEvent(((hibernate_sequenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.hibernate_sequenceRowDeleted != null)) {
                    this.hibernate_sequenceRowDeleted(this, new hibernate_sequenceRowChangeEvent(((hibernate_sequenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.hibernate_sequenceRowDeleting != null)) {
                    this.hibernate_sequenceRowDeleting(this, new hibernate_sequenceRowChangeEvent(((hibernate_sequenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removehibernate_sequenceRow(hibernate_sequenceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                accounts_reportsDataSet ds = new accounts_reportsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "hibernate_sequenceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tuk_acc_detailDataTable : global::System.Data.TypedTableBase<tuk_acc_detailRow> {
            
            private global::System.Data.DataColumn columncabno;
            
            private global::System.Data.DataColumn columnacc_number;
            
            private global::System.Data.DataColumn columnacc_name;
            
            private global::System.Data.DataColumn columnbank;
            
            private global::System.Data.DataColumn columnbank_code;
            
            private global::System.Data.DataColumn columnbranch_name;
            
            private global::System.Data.DataColumn columnbranch_code;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_acc_detailDataTable() {
                this.TableName = "tuk_acc_detail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tuk_acc_detailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tuk_acc_detailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cabnoColumn {
                get {
                    return this.columncabno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn acc_numberColumn {
                get {
                    return this.columnacc_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn acc_nameColumn {
                get {
                    return this.columnacc_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bankColumn {
                get {
                    return this.columnbank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bank_codeColumn {
                get {
                    return this.columnbank_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn branch_nameColumn {
                get {
                    return this.columnbranch_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn branch_codeColumn {
                get {
                    return this.columnbranch_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_acc_detailRow this[int index] {
                get {
                    return ((tuk_acc_detailRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_acc_detailRowChangeEventHandler tuk_acc_detailRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_acc_detailRowChangeEventHandler tuk_acc_detailRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_acc_detailRowChangeEventHandler tuk_acc_detailRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_acc_detailRowChangeEventHandler tuk_acc_detailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addtuk_acc_detailRow(tuk_acc_detailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_acc_detailRow Addtuk_acc_detailRow(string cabno, string acc_number, string acc_name, string bank, string bank_code, string branch_name, string branch_code) {
                tuk_acc_detailRow rowtuk_acc_detailRow = ((tuk_acc_detailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cabno,
                        acc_number,
                        acc_name,
                        bank,
                        bank_code,
                        branch_name,
                        branch_code};
                rowtuk_acc_detailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtuk_acc_detailRow);
                return rowtuk_acc_detailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_acc_detailRow FindBycabno(string cabno) {
                return ((tuk_acc_detailRow)(this.Rows.Find(new object[] {
                            cabno})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tuk_acc_detailDataTable cln = ((tuk_acc_detailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tuk_acc_detailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncabno = base.Columns["cabno"];
                this.columnacc_number = base.Columns["acc_number"];
                this.columnacc_name = base.Columns["acc_name"];
                this.columnbank = base.Columns["bank"];
                this.columnbank_code = base.Columns["bank_code"];
                this.columnbranch_name = base.Columns["branch_name"];
                this.columnbranch_code = base.Columns["branch_code"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncabno = new global::System.Data.DataColumn("cabno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncabno);
                this.columnacc_number = new global::System.Data.DataColumn("acc_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnacc_number);
                this.columnacc_name = new global::System.Data.DataColumn("acc_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnacc_name);
                this.columnbank = new global::System.Data.DataColumn("bank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbank);
                this.columnbank_code = new global::System.Data.DataColumn("bank_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbank_code);
                this.columnbranch_name = new global::System.Data.DataColumn("branch_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbranch_name);
                this.columnbranch_code = new global::System.Data.DataColumn("branch_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbranch_code);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncabno}, true));
                this.columncabno.AllowDBNull = false;
                this.columncabno.Unique = true;
                this.columncabno.MaxLength = 10;
                this.columnacc_number.AllowDBNull = false;
                this.columnacc_number.MaxLength = 12;
                this.columnacc_name.AllowDBNull = false;
                this.columnacc_name.MaxLength = 100;
                this.columnbank.AllowDBNull = false;
                this.columnbank.MaxLength = 100;
                this.columnbank_code.AllowDBNull = false;
                this.columnbank_code.MaxLength = 10;
                this.columnbranch_name.AllowDBNull = false;
                this.columnbranch_name.MaxLength = 100;
                this.columnbranch_code.AllowDBNull = false;
                this.columnbranch_code.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_acc_detailRow Newtuk_acc_detailRow() {
                return ((tuk_acc_detailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tuk_acc_detailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tuk_acc_detailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tuk_acc_detailRowChanged != null)) {
                    this.tuk_acc_detailRowChanged(this, new tuk_acc_detailRowChangeEvent(((tuk_acc_detailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tuk_acc_detailRowChanging != null)) {
                    this.tuk_acc_detailRowChanging(this, new tuk_acc_detailRowChangeEvent(((tuk_acc_detailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tuk_acc_detailRowDeleted != null)) {
                    this.tuk_acc_detailRowDeleted(this, new tuk_acc_detailRowChangeEvent(((tuk_acc_detailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tuk_acc_detailRowDeleting != null)) {
                    this.tuk_acc_detailRowDeleting(this, new tuk_acc_detailRowChangeEvent(((tuk_acc_detailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removetuk_acc_detailRow(tuk_acc_detailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                accounts_reportsDataSet ds = new accounts_reportsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tuk_acc_detailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tuk_lastbalanceDataTable : global::System.Data.TypedTableBase<tuk_lastbalanceRow> {
            
            private global::System.Data.DataColumn columncabno;
            
            private global::System.Data.DataColumn columnpayment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_lastbalanceDataTable() {
                this.TableName = "tuk_lastbalance";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tuk_lastbalanceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tuk_lastbalanceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cabnoColumn {
                get {
                    return this.columncabno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn paymentColumn {
                get {
                    return this.columnpayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_lastbalanceRow this[int index] {
                get {
                    return ((tuk_lastbalanceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_lastbalanceRowChangeEventHandler tuk_lastbalanceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_lastbalanceRowChangeEventHandler tuk_lastbalanceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_lastbalanceRowChangeEventHandler tuk_lastbalanceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_lastbalanceRowChangeEventHandler tuk_lastbalanceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addtuk_lastbalanceRow(tuk_lastbalanceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_lastbalanceRow Addtuk_lastbalanceRow(string cabno, double payment) {
                tuk_lastbalanceRow rowtuk_lastbalanceRow = ((tuk_lastbalanceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cabno,
                        payment};
                rowtuk_lastbalanceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtuk_lastbalanceRow);
                return rowtuk_lastbalanceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_lastbalanceRow FindBycabno(string cabno) {
                return ((tuk_lastbalanceRow)(this.Rows.Find(new object[] {
                            cabno})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tuk_lastbalanceDataTable cln = ((tuk_lastbalanceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tuk_lastbalanceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncabno = base.Columns["cabno"];
                this.columnpayment = base.Columns["payment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncabno = new global::System.Data.DataColumn("cabno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncabno);
                this.columnpayment = new global::System.Data.DataColumn("payment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpayment);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncabno}, true));
                this.columncabno.AllowDBNull = false;
                this.columncabno.Unique = true;
                this.columncabno.MaxLength = 10;
                this.columnpayment.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_lastbalanceRow Newtuk_lastbalanceRow() {
                return ((tuk_lastbalanceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tuk_lastbalanceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tuk_lastbalanceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tuk_lastbalanceRowChanged != null)) {
                    this.tuk_lastbalanceRowChanged(this, new tuk_lastbalanceRowChangeEvent(((tuk_lastbalanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tuk_lastbalanceRowChanging != null)) {
                    this.tuk_lastbalanceRowChanging(this, new tuk_lastbalanceRowChangeEvent(((tuk_lastbalanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tuk_lastbalanceRowDeleted != null)) {
                    this.tuk_lastbalanceRowDeleted(this, new tuk_lastbalanceRowChangeEvent(((tuk_lastbalanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tuk_lastbalanceRowDeleting != null)) {
                    this.tuk_lastbalanceRowDeleting(this, new tuk_lastbalanceRowChangeEvent(((tuk_lastbalanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removetuk_lastbalanceRow(tuk_lastbalanceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                accounts_reportsDataSet ds = new accounts_reportsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tuk_lastbalanceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tuk_sp_promoDataTable : global::System.Data.TypedTableBase<tuk_sp_promoRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columncabno;
            
            private global::System.Data.DataColumn columnno_hires;
            
            private global::System.Data.DataColumn columnpayment;
            
            private global::System.Data.DataColumn columnhire_date;
            
            private global::System.Data.DataColumn columntransfer_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_sp_promoDataTable() {
                this.TableName = "tuk_sp_promo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tuk_sp_promoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tuk_sp_promoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cabnoColumn {
                get {
                    return this.columncabno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn no_hiresColumn {
                get {
                    return this.columnno_hires;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn paymentColumn {
                get {
                    return this.columnpayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn hire_dateColumn {
                get {
                    return this.columnhire_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn transfer_dateColumn {
                get {
                    return this.columntransfer_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_sp_promoRow this[int index] {
                get {
                    return ((tuk_sp_promoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_sp_promoRowChangeEventHandler tuk_sp_promoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_sp_promoRowChangeEventHandler tuk_sp_promoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_sp_promoRowChangeEventHandler tuk_sp_promoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_sp_promoRowChangeEventHandler tuk_sp_promoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addtuk_sp_promoRow(tuk_sp_promoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_sp_promoRow Addtuk_sp_promoRow(string cabno, int no_hires, double payment, System.DateTime hire_date, System.DateTime transfer_date) {
                tuk_sp_promoRow rowtuk_sp_promoRow = ((tuk_sp_promoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        cabno,
                        no_hires,
                        payment,
                        hire_date,
                        transfer_date};
                rowtuk_sp_promoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtuk_sp_promoRow);
                return rowtuk_sp_promoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_sp_promoRow FindByid(int id) {
                return ((tuk_sp_promoRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tuk_sp_promoDataTable cln = ((tuk_sp_promoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tuk_sp_promoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columncabno = base.Columns["cabno"];
                this.columnno_hires = base.Columns["no_hires"];
                this.columnpayment = base.Columns["payment"];
                this.columnhire_date = base.Columns["hire_date"];
                this.columntransfer_date = base.Columns["transfer_date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columncabno = new global::System.Data.DataColumn("cabno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncabno);
                this.columnno_hires = new global::System.Data.DataColumn("no_hires", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnno_hires);
                this.columnpayment = new global::System.Data.DataColumn("payment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpayment);
                this.columnhire_date = new global::System.Data.DataColumn("hire_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhire_date);
                this.columntransfer_date = new global::System.Data.DataColumn("transfer_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransfer_date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columncabno.AllowDBNull = false;
                this.columncabno.MaxLength = 10;
                this.columnno_hires.AllowDBNull = false;
                this.columnpayment.AllowDBNull = false;
                this.columnhire_date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_sp_promoRow Newtuk_sp_promoRow() {
                return ((tuk_sp_promoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tuk_sp_promoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tuk_sp_promoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tuk_sp_promoRowChanged != null)) {
                    this.tuk_sp_promoRowChanged(this, new tuk_sp_promoRowChangeEvent(((tuk_sp_promoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tuk_sp_promoRowChanging != null)) {
                    this.tuk_sp_promoRowChanging(this, new tuk_sp_promoRowChangeEvent(((tuk_sp_promoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tuk_sp_promoRowDeleted != null)) {
                    this.tuk_sp_promoRowDeleted(this, new tuk_sp_promoRowChangeEvent(((tuk_sp_promoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tuk_sp_promoRowDeleting != null)) {
                    this.tuk_sp_promoRowDeleting(this, new tuk_sp_promoRowChangeEvent(((tuk_sp_promoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removetuk_sp_promoRow(tuk_sp_promoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                accounts_reportsDataSet ds = new accounts_reportsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tuk_sp_promoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tuk_transferpayment_DateDataTable : global::System.Data.TypedTableBase<tuk_transferpayment_DateRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columndate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_transferpayment_DateDataTable() {
                this.TableName = "tuk_transferpayment_Date";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tuk_transferpayment_DateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tuk_transferpayment_DateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dateColumn {
                get {
                    return this.columndate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_transferpayment_DateRow this[int index] {
                get {
                    return ((tuk_transferpayment_DateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_transferpayment_DateRowChangeEventHandler tuk_transferpayment_DateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_transferpayment_DateRowChangeEventHandler tuk_transferpayment_DateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_transferpayment_DateRowChangeEventHandler tuk_transferpayment_DateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_transferpayment_DateRowChangeEventHandler tuk_transferpayment_DateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addtuk_transferpayment_DateRow(tuk_transferpayment_DateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_transferpayment_DateRow Addtuk_transferpayment_DateRow(System.DateTime date) {
                tuk_transferpayment_DateRow rowtuk_transferpayment_DateRow = ((tuk_transferpayment_DateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        date};
                rowtuk_transferpayment_DateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtuk_transferpayment_DateRow);
                return rowtuk_transferpayment_DateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_transferpayment_DateRow FindByid(int id) {
                return ((tuk_transferpayment_DateRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tuk_transferpayment_DateDataTable cln = ((tuk_transferpayment_DateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tuk_transferpayment_DateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columndate = base.Columns["date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columndate = new global::System.Data.DataColumn("date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columndate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_transferpayment_DateRow Newtuk_transferpayment_DateRow() {
                return ((tuk_transferpayment_DateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tuk_transferpayment_DateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tuk_transferpayment_DateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tuk_transferpayment_DateRowChanged != null)) {
                    this.tuk_transferpayment_DateRowChanged(this, new tuk_transferpayment_DateRowChangeEvent(((tuk_transferpayment_DateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tuk_transferpayment_DateRowChanging != null)) {
                    this.tuk_transferpayment_DateRowChanging(this, new tuk_transferpayment_DateRowChangeEvent(((tuk_transferpayment_DateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tuk_transferpayment_DateRowDeleted != null)) {
                    this.tuk_transferpayment_DateRowDeleted(this, new tuk_transferpayment_DateRowChangeEvent(((tuk_transferpayment_DateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tuk_transferpayment_DateRowDeleting != null)) {
                    this.tuk_transferpayment_DateRowDeleting(this, new tuk_transferpayment_DateRowChangeEvent(((tuk_transferpayment_DateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removetuk_transferpayment_DateRow(tuk_transferpayment_DateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                accounts_reportsDataSet ds = new accounts_reportsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tuk_transferpayment_DateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tuk_wallet_hiresDataTable : global::System.Data.TypedTableBase<tuk_wallet_hiresRow> {
            
            private global::System.Data.DataColumn columnref_no;
            
            private global::System.Data.DataColumn columncabno;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columndiscount;
            
            private global::System.Data.DataColumn columntotal;
            
            private global::System.Data.DataColumn columndiscount_payed;
            
            private global::System.Data.DataColumn columntouch_payed;
            
            private global::System.Data.DataColumn columncredit_cardpayed;
            
            private global::System.Data.DataColumn columncredit_transferdate;
            
            private global::System.Data.DataColumn columndiscount_transferdate;
            
            private global::System.Data.DataColumn columntouch_transferdate;
            
            private global::System.Data.DataColumn columnb_type;
            
            private global::System.Data.DataColumn columnsp_promodate;
            
            private global::System.Data.DataColumn columnsp_amount;
            
            private global::System.Data.DataColumn columnsp_up;
            
            private global::System.Data.DataColumn columnpaymentMethod;
            
            private global::System.Data.DataColumn columncom_commission;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_hiresDataTable() {
                this.TableName = "tuk_wallet_hires";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tuk_wallet_hiresDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tuk_wallet_hiresDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ref_noColumn {
                get {
                    return this.columnref_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cabnoColumn {
                get {
                    return this.columncabno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn discountColumn {
                get {
                    return this.columndiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn totalColumn {
                get {
                    return this.columntotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn discount_payedColumn {
                get {
                    return this.columndiscount_payed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn touch_payedColumn {
                get {
                    return this.columntouch_payed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn credit_cardpayedColumn {
                get {
                    return this.columncredit_cardpayed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn credit_transferdateColumn {
                get {
                    return this.columncredit_transferdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn discount_transferdateColumn {
                get {
                    return this.columndiscount_transferdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn touch_transferdateColumn {
                get {
                    return this.columntouch_transferdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn b_typeColumn {
                get {
                    return this.columnb_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sp_promodateColumn {
                get {
                    return this.columnsp_promodate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sp_amountColumn {
                get {
                    return this.columnsp_amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sp_upColumn {
                get {
                    return this.columnsp_up;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn paymentMethodColumn {
                get {
                    return this.columnpaymentMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn com_commissionColumn {
                get {
                    return this.columncom_commission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_hiresRow this[int index] {
                get {
                    return ((tuk_wallet_hiresRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_wallet_hiresRowChangeEventHandler tuk_wallet_hiresRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_wallet_hiresRowChangeEventHandler tuk_wallet_hiresRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_wallet_hiresRowChangeEventHandler tuk_wallet_hiresRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_wallet_hiresRowChangeEventHandler tuk_wallet_hiresRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addtuk_wallet_hiresRow(tuk_wallet_hiresRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_hiresRow Addtuk_wallet_hiresRow(
                        string ref_no, 
                        string cabno, 
                        System.DateTime start_date, 
                        string status, 
                        double discount, 
                        double total, 
                        string discount_payed, 
                        string touch_payed, 
                        string credit_cardpayed, 
                        System.DateTime credit_transferdate, 
                        System.DateTime discount_transferdate, 
                        System.DateTime touch_transferdate, 
                        string b_type, 
                        System.DateTime sp_promodate, 
                        double sp_amount, 
                        string sp_up, 
                        string paymentMethod, 
                        double com_commission) {
                tuk_wallet_hiresRow rowtuk_wallet_hiresRow = ((tuk_wallet_hiresRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ref_no,
                        cabno,
                        start_date,
                        status,
                        discount,
                        total,
                        discount_payed,
                        touch_payed,
                        credit_cardpayed,
                        credit_transferdate,
                        discount_transferdate,
                        touch_transferdate,
                        b_type,
                        sp_promodate,
                        sp_amount,
                        sp_up,
                        paymentMethod,
                        com_commission};
                rowtuk_wallet_hiresRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtuk_wallet_hiresRow);
                return rowtuk_wallet_hiresRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_hiresRow FindByref_no(string ref_no) {
                return ((tuk_wallet_hiresRow)(this.Rows.Find(new object[] {
                            ref_no})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tuk_wallet_hiresDataTable cln = ((tuk_wallet_hiresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tuk_wallet_hiresDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnref_no = base.Columns["ref_no"];
                this.columncabno = base.Columns["cabno"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnstatus = base.Columns["status"];
                this.columndiscount = base.Columns["discount"];
                this.columntotal = base.Columns["total"];
                this.columndiscount_payed = base.Columns["discount_payed"];
                this.columntouch_payed = base.Columns["touch_payed"];
                this.columncredit_cardpayed = base.Columns["credit_cardpayed"];
                this.columncredit_transferdate = base.Columns["credit_transferdate"];
                this.columndiscount_transferdate = base.Columns["discount_transferdate"];
                this.columntouch_transferdate = base.Columns["touch_transferdate"];
                this.columnb_type = base.Columns["b_type"];
                this.columnsp_promodate = base.Columns["sp_promodate"];
                this.columnsp_amount = base.Columns["sp_amount"];
                this.columnsp_up = base.Columns["sp_up"];
                this.columnpaymentMethod = base.Columns["paymentMethod"];
                this.columncom_commission = base.Columns["com_commission"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnref_no = new global::System.Data.DataColumn("ref_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnref_no);
                this.columncabno = new global::System.Data.DataColumn("cabno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncabno);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columndiscount = new global::System.Data.DataColumn("discount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscount);
                this.columntotal = new global::System.Data.DataColumn("total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal);
                this.columndiscount_payed = new global::System.Data.DataColumn("discount_payed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscount_payed);
                this.columntouch_payed = new global::System.Data.DataColumn("touch_payed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntouch_payed);
                this.columncredit_cardpayed = new global::System.Data.DataColumn("credit_cardpayed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncredit_cardpayed);
                this.columncredit_transferdate = new global::System.Data.DataColumn("credit_transferdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncredit_transferdate);
                this.columndiscount_transferdate = new global::System.Data.DataColumn("discount_transferdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscount_transferdate);
                this.columntouch_transferdate = new global::System.Data.DataColumn("touch_transferdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntouch_transferdate);
                this.columnb_type = new global::System.Data.DataColumn("b_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnb_type);
                this.columnsp_promodate = new global::System.Data.DataColumn("sp_promodate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsp_promodate);
                this.columnsp_amount = new global::System.Data.DataColumn("sp_amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsp_amount);
                this.columnsp_up = new global::System.Data.DataColumn("sp_up", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsp_up);
                this.columnpaymentMethod = new global::System.Data.DataColumn("paymentMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaymentMethod);
                this.columncom_commission = new global::System.Data.DataColumn("com_commission", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncom_commission);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnref_no}, true));
                this.columnref_no.AllowDBNull = false;
                this.columnref_no.Unique = true;
                this.columnref_no.MaxLength = 10;
                this.columncabno.AllowDBNull = false;
                this.columncabno.MaxLength = 10;
                this.columnstart_date.AllowDBNull = false;
                this.columnstatus.AllowDBNull = false;
                this.columnstatus.MaxLength = 50;
                this.columndiscount.AllowDBNull = false;
                this.columntotal.AllowDBNull = false;
                this.columndiscount_payed.AllowDBNull = false;
                this.columndiscount_payed.MaxLength = 10;
                this.columntouch_payed.AllowDBNull = false;
                this.columntouch_payed.MaxLength = 1;
                this.columncredit_cardpayed.AllowDBNull = false;
                this.columncredit_cardpayed.MaxLength = 10;
                this.columnb_type.AllowDBNull = false;
                this.columnb_type.MaxLength = 50;
                this.columnsp_amount.AllowDBNull = false;
                this.columnsp_up.AllowDBNull = false;
                this.columnsp_up.MaxLength = 1;
                this.columnpaymentMethod.AllowDBNull = false;
                this.columnpaymentMethod.MaxLength = 15;
                this.columncom_commission.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_hiresRow Newtuk_wallet_hiresRow() {
                return ((tuk_wallet_hiresRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tuk_wallet_hiresRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tuk_wallet_hiresRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tuk_wallet_hiresRowChanged != null)) {
                    this.tuk_wallet_hiresRowChanged(this, new tuk_wallet_hiresRowChangeEvent(((tuk_wallet_hiresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tuk_wallet_hiresRowChanging != null)) {
                    this.tuk_wallet_hiresRowChanging(this, new tuk_wallet_hiresRowChangeEvent(((tuk_wallet_hiresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tuk_wallet_hiresRowDeleted != null)) {
                    this.tuk_wallet_hiresRowDeleted(this, new tuk_wallet_hiresRowChangeEvent(((tuk_wallet_hiresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tuk_wallet_hiresRowDeleting != null)) {
                    this.tuk_wallet_hiresRowDeleting(this, new tuk_wallet_hiresRowChangeEvent(((tuk_wallet_hiresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removetuk_wallet_hiresRow(tuk_wallet_hiresRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                accounts_reportsDataSet ds = new accounts_reportsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tuk_wallet_hiresDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tuk_wallet_paymentDataTable : global::System.Data.TypedTableBase<tuk_wallet_paymentRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columncabno;
            
            private global::System.Data.DataColumn columncreditcard;
            
            private global::System.Data.DataColumn columnpromopayment;
            
            private global::System.Data.DataColumn columntouch;
            
            private global::System.Data.DataColumn columnhpromo;
            
            private global::System.Data.DataColumn columncomcomission;
            
            private global::System.Data.DataColumn columnlbalance;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columndate;
            
            private global::System.Data.DataColumn columntransfer_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_paymentDataTable() {
                this.TableName = "tuk_wallet_payment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tuk_wallet_paymentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tuk_wallet_paymentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cabnoColumn {
                get {
                    return this.columncabno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn creditcardColumn {
                get {
                    return this.columncreditcard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn promopaymentColumn {
                get {
                    return this.columnpromopayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn touchColumn {
                get {
                    return this.columntouch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn hpromoColumn {
                get {
                    return this.columnhpromo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn comcomissionColumn {
                get {
                    return this.columncomcomission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn lbalanceColumn {
                get {
                    return this.columnlbalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dateColumn {
                get {
                    return this.columndate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn transfer_dateColumn {
                get {
                    return this.columntransfer_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_paymentRow this[int index] {
                get {
                    return ((tuk_wallet_paymentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_wallet_paymentRowChangeEventHandler tuk_wallet_paymentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_wallet_paymentRowChangeEventHandler tuk_wallet_paymentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_wallet_paymentRowChangeEventHandler tuk_wallet_paymentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_wallet_paymentRowChangeEventHandler tuk_wallet_paymentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addtuk_wallet_paymentRow(tuk_wallet_paymentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_paymentRow Addtuk_wallet_paymentRow(string cabno, double creditcard, double promopayment, double touch, double hpromo, double comcomission, double lbalance, double amount, System.DateTime date, System.DateTime transfer_date) {
                tuk_wallet_paymentRow rowtuk_wallet_paymentRow = ((tuk_wallet_paymentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        cabno,
                        creditcard,
                        promopayment,
                        touch,
                        hpromo,
                        comcomission,
                        lbalance,
                        amount,
                        date,
                        transfer_date};
                rowtuk_wallet_paymentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtuk_wallet_paymentRow);
                return rowtuk_wallet_paymentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_paymentRow FindByid(int id) {
                return ((tuk_wallet_paymentRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tuk_wallet_paymentDataTable cln = ((tuk_wallet_paymentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tuk_wallet_paymentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columncabno = base.Columns["cabno"];
                this.columncreditcard = base.Columns["creditcard"];
                this.columnpromopayment = base.Columns["promopayment"];
                this.columntouch = base.Columns["touch"];
                this.columnhpromo = base.Columns["hpromo"];
                this.columncomcomission = base.Columns["comcomission"];
                this.columnlbalance = base.Columns["lbalance"];
                this.columnamount = base.Columns["amount"];
                this.columndate = base.Columns["date"];
                this.columntransfer_date = base.Columns["transfer_date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columncabno = new global::System.Data.DataColumn("cabno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncabno);
                this.columncreditcard = new global::System.Data.DataColumn("creditcard", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreditcard);
                this.columnpromopayment = new global::System.Data.DataColumn("promopayment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpromopayment);
                this.columntouch = new global::System.Data.DataColumn("touch", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntouch);
                this.columnhpromo = new global::System.Data.DataColumn("hpromo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhpromo);
                this.columncomcomission = new global::System.Data.DataColumn("comcomission", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomcomission);
                this.columnlbalance = new global::System.Data.DataColumn("lbalance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlbalance);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columndate = new global::System.Data.DataColumn("date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate);
                this.columntransfer_date = new global::System.Data.DataColumn("transfer_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransfer_date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columncabno.AllowDBNull = false;
                this.columncabno.MaxLength = 10;
                this.columncreditcard.AllowDBNull = false;
                this.columnpromopayment.AllowDBNull = false;
                this.columntouch.AllowDBNull = false;
                this.columnhpromo.AllowDBNull = false;
                this.columncomcomission.AllowDBNull = false;
                this.columnlbalance.AllowDBNull = false;
                this.columnamount.AllowDBNull = false;
                this.columndate.AllowDBNull = false;
                this.columntransfer_date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_paymentRow Newtuk_wallet_paymentRow() {
                return ((tuk_wallet_paymentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tuk_wallet_paymentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tuk_wallet_paymentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tuk_wallet_paymentRowChanged != null)) {
                    this.tuk_wallet_paymentRowChanged(this, new tuk_wallet_paymentRowChangeEvent(((tuk_wallet_paymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tuk_wallet_paymentRowChanging != null)) {
                    this.tuk_wallet_paymentRowChanging(this, new tuk_wallet_paymentRowChangeEvent(((tuk_wallet_paymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tuk_wallet_paymentRowDeleted != null)) {
                    this.tuk_wallet_paymentRowDeleted(this, new tuk_wallet_paymentRowChangeEvent(((tuk_wallet_paymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tuk_wallet_paymentRowDeleting != null)) {
                    this.tuk_wallet_paymentRowDeleting(this, new tuk_wallet_paymentRowChangeEvent(((tuk_wallet_paymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removetuk_wallet_paymentRow(tuk_wallet_paymentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                accounts_reportsDataSet ds = new accounts_reportsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tuk_wallet_paymentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tuk_wallet_paymentsummaryDataTable : global::System.Data.TypedTableBase<tuk_wallet_paymentsummaryRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columncabno;
            
            private global::System.Data.DataColumn columnapp;
            
            private global::System.Data.DataColumn columnccenter;
            
            private global::System.Data.DataColumn columnrpick;
            
            private global::System.Data.DataColumn columncorporate;
            
            private global::System.Data.DataColumn columnweb;
            
            private global::System.Data.DataColumn columntotal_income;
            
            private global::System.Data.DataColumn columncreditcard;
            
            private global::System.Data.DataColumn columnpromopayment;
            
            private global::System.Data.DataColumn columntouch;
            
            private global::System.Data.DataColumn columnhpromo;
            
            private global::System.Data.DataColumn columncomcomission;
            
            private global::System.Data.DataColumn columnlbalance;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columndate;
            
            private global::System.Data.DataColumn columntransfer_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_paymentsummaryDataTable() {
                this.TableName = "tuk_wallet_paymentsummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tuk_wallet_paymentsummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tuk_wallet_paymentsummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cabnoColumn {
                get {
                    return this.columncabno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appColumn {
                get {
                    return this.columnapp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ccenterColumn {
                get {
                    return this.columnccenter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn rpickColumn {
                get {
                    return this.columnrpick;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn corporateColumn {
                get {
                    return this.columncorporate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn webColumn {
                get {
                    return this.columnweb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn total_incomeColumn {
                get {
                    return this.columntotal_income;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn creditcardColumn {
                get {
                    return this.columncreditcard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn promopaymentColumn {
                get {
                    return this.columnpromopayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn touchColumn {
                get {
                    return this.columntouch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn hpromoColumn {
                get {
                    return this.columnhpromo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn comcomissionColumn {
                get {
                    return this.columncomcomission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn lbalanceColumn {
                get {
                    return this.columnlbalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dateColumn {
                get {
                    return this.columndate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn transfer_dateColumn {
                get {
                    return this.columntransfer_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_paymentsummaryRow this[int index] {
                get {
                    return ((tuk_wallet_paymentsummaryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_wallet_paymentsummaryRowChangeEventHandler tuk_wallet_paymentsummaryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_wallet_paymentsummaryRowChangeEventHandler tuk_wallet_paymentsummaryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_wallet_paymentsummaryRowChangeEventHandler tuk_wallet_paymentsummaryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tuk_wallet_paymentsummaryRowChangeEventHandler tuk_wallet_paymentsummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addtuk_wallet_paymentsummaryRow(tuk_wallet_paymentsummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_paymentsummaryRow Addtuk_wallet_paymentsummaryRow(
                        string cabno, 
                        double app, 
                        double ccenter, 
                        double rpick, 
                        double corporate, 
                        double web, 
                        double total_income, 
                        double creditcard, 
                        double promopayment, 
                        double touch, 
                        double hpromo, 
                        double comcomission, 
                        double lbalance, 
                        double amount, 
                        System.DateTime date, 
                        System.DateTime transfer_date) {
                tuk_wallet_paymentsummaryRow rowtuk_wallet_paymentsummaryRow = ((tuk_wallet_paymentsummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        cabno,
                        app,
                        ccenter,
                        rpick,
                        corporate,
                        web,
                        total_income,
                        creditcard,
                        promopayment,
                        touch,
                        hpromo,
                        comcomission,
                        lbalance,
                        amount,
                        date,
                        transfer_date};
                rowtuk_wallet_paymentsummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtuk_wallet_paymentsummaryRow);
                return rowtuk_wallet_paymentsummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_paymentsummaryRow FindByid(int id) {
                return ((tuk_wallet_paymentsummaryRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tuk_wallet_paymentsummaryDataTable cln = ((tuk_wallet_paymentsummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tuk_wallet_paymentsummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columncabno = base.Columns["cabno"];
                this.columnapp = base.Columns["app"];
                this.columnccenter = base.Columns["ccenter"];
                this.columnrpick = base.Columns["rpick"];
                this.columncorporate = base.Columns["corporate"];
                this.columnweb = base.Columns["web"];
                this.columntotal_income = base.Columns["total_income"];
                this.columncreditcard = base.Columns["creditcard"];
                this.columnpromopayment = base.Columns["promopayment"];
                this.columntouch = base.Columns["touch"];
                this.columnhpromo = base.Columns["hpromo"];
                this.columncomcomission = base.Columns["comcomission"];
                this.columnlbalance = base.Columns["lbalance"];
                this.columnamount = base.Columns["amount"];
                this.columndate = base.Columns["date"];
                this.columntransfer_date = base.Columns["transfer_date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columncabno = new global::System.Data.DataColumn("cabno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncabno);
                this.columnapp = new global::System.Data.DataColumn("app", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapp);
                this.columnccenter = new global::System.Data.DataColumn("ccenter", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnccenter);
                this.columnrpick = new global::System.Data.DataColumn("rpick", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrpick);
                this.columncorporate = new global::System.Data.DataColumn("corporate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncorporate);
                this.columnweb = new global::System.Data.DataColumn("web", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweb);
                this.columntotal_income = new global::System.Data.DataColumn("total_income", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_income);
                this.columncreditcard = new global::System.Data.DataColumn("creditcard", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreditcard);
                this.columnpromopayment = new global::System.Data.DataColumn("promopayment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpromopayment);
                this.columntouch = new global::System.Data.DataColumn("touch", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntouch);
                this.columnhpromo = new global::System.Data.DataColumn("hpromo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhpromo);
                this.columncomcomission = new global::System.Data.DataColumn("comcomission", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomcomission);
                this.columnlbalance = new global::System.Data.DataColumn("lbalance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlbalance);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columndate = new global::System.Data.DataColumn("date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate);
                this.columntransfer_date = new global::System.Data.DataColumn("transfer_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransfer_date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columncabno.AllowDBNull = false;
                this.columncabno.MaxLength = 10;
                this.columnapp.AllowDBNull = false;
                this.columnccenter.AllowDBNull = false;
                this.columnrpick.AllowDBNull = false;
                this.columncorporate.AllowDBNull = false;
                this.columnweb.AllowDBNull = false;
                this.columntotal_income.AllowDBNull = false;
                this.columncreditcard.AllowDBNull = false;
                this.columnpromopayment.AllowDBNull = false;
                this.columntouch.AllowDBNull = false;
                this.columnhpromo.AllowDBNull = false;
                this.columncomcomission.AllowDBNull = false;
                this.columnlbalance.AllowDBNull = false;
                this.columnamount.AllowDBNull = false;
                this.columndate.AllowDBNull = false;
                this.columntransfer_date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_paymentsummaryRow Newtuk_wallet_paymentsummaryRow() {
                return ((tuk_wallet_paymentsummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tuk_wallet_paymentsummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tuk_wallet_paymentsummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tuk_wallet_paymentsummaryRowChanged != null)) {
                    this.tuk_wallet_paymentsummaryRowChanged(this, new tuk_wallet_paymentsummaryRowChangeEvent(((tuk_wallet_paymentsummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tuk_wallet_paymentsummaryRowChanging != null)) {
                    this.tuk_wallet_paymentsummaryRowChanging(this, new tuk_wallet_paymentsummaryRowChangeEvent(((tuk_wallet_paymentsummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tuk_wallet_paymentsummaryRowDeleted != null)) {
                    this.tuk_wallet_paymentsummaryRowDeleted(this, new tuk_wallet_paymentsummaryRowChangeEvent(((tuk_wallet_paymentsummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tuk_wallet_paymentsummaryRowDeleting != null)) {
                    this.tuk_wallet_paymentsummaryRowDeleting(this, new tuk_wallet_paymentsummaryRowChangeEvent(((tuk_wallet_paymentsummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removetuk_wallet_paymentsummaryRow(tuk_wallet_paymentsummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                accounts_reportsDataSet ds = new accounts_reportsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tuk_wallet_paymentsummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class achiniDataTable : global::System.Data.TypedTableBase<achiniRow> {
            
            private global::System.Data.DataColumn columncabno;
            
            private global::System.Data.DataColumn _columnSum__total__;
            
            private global::System.Data.DataColumn columncredit_transferdate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public achiniDataTable() {
                this.TableName = "achini";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal achiniDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected achiniDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cabnoColumn {
                get {
                    return this.columncabno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _Sum__total__Column {
                get {
                    return this._columnSum__total__;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn credit_transferdateColumn {
                get {
                    return this.columncredit_transferdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public achiniRow this[int index] {
                get {
                    return ((achiniRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event achiniRowChangeEventHandler achiniRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event achiniRowChangeEventHandler achiniRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event achiniRowChangeEventHandler achiniRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event achiniRowChangeEventHandler achiniRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddachiniRow(achiniRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public achiniRow AddachiniRow(string cabno, double _Sum__total__, System.DateTime credit_transferdate) {
                achiniRow rowachiniRow = ((achiniRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cabno,
                        _Sum__total__,
                        credit_transferdate};
                rowachiniRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowachiniRow);
                return rowachiniRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                achiniDataTable cln = ((achiniDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new achiniDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncabno = base.Columns["cabno"];
                this._columnSum__total__ = base.Columns["Sum(`total`)"];
                this.columncredit_transferdate = base.Columns["credit_transferdate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncabno = new global::System.Data.DataColumn("cabno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncabno);
                this._columnSum__total__ = new global::System.Data.DataColumn("Sum(`total`)", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnSum__total__.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSum__total__");
                this._columnSum__total__.ExtendedProperties.Add("Generator_UserColumnName", "Sum(`total`)");
                base.Columns.Add(this._columnSum__total__);
                this.columncredit_transferdate = new global::System.Data.DataColumn("credit_transferdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncredit_transferdate);
                this.columncabno.AllowDBNull = false;
                this.columncabno.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public achiniRow NewachiniRow() {
                return ((achiniRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new achiniRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(achiniRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.achiniRowChanged != null)) {
                    this.achiniRowChanged(this, new achiniRowChangeEvent(((achiniRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.achiniRowChanging != null)) {
                    this.achiniRowChanging(this, new achiniRowChangeEvent(((achiniRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.achiniRowDeleted != null)) {
                    this.achiniRowDeleted(this, new achiniRowChangeEvent(((achiniRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.achiniRowDeleting != null)) {
                    this.achiniRowDeleting(this, new achiniRowChangeEvent(((achiniRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveachiniRow(achiniRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                accounts_reportsDataSet ds = new accounts_reportsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "achiniDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class bank_brach_codeRow : global::System.Data.DataRow {
            
            private bank_brach_codeDataTable tablebank_brach_code;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal bank_brach_codeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebank_brach_code = ((bank_brach_codeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablebank_brach_code.idColumn]));
                }
                set {
                    this[this.tablebank_brach_code.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string bank_name {
                get {
                    return ((string)(this[this.tablebank_brach_code.bank_nameColumn]));
                }
                set {
                    this[this.tablebank_brach_code.bank_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string bank_code {
                get {
                    return ((string)(this[this.tablebank_brach_code.bank_codeColumn]));
                }
                set {
                    this[this.tablebank_brach_code.bank_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string branch_code {
                get {
                    return ((string)(this[this.tablebank_brach_code.branch_codeColumn]));
                }
                set {
                    this[this.tablebank_brach_code.branch_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string branch_name {
                get {
                    return ((string)(this[this.tablebank_brach_code.branch_nameColumn]));
                }
                set {
                    this[this.tablebank_brach_code.branch_nameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class bankcodeRow : global::System.Data.DataRow {
            
            private bankcodeDataTable tablebankcode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal bankcodeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebankcode = ((bankcodeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int bank_code {
                get {
                    return ((int)(this[this.tablebankcode.bank_codeColumn]));
                }
                set {
                    this[this.tablebankcode.bank_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string bank {
                get {
                    return ((string)(this[this.tablebankcode.bankColumn]));
                }
                set {
                    this[this.tablebankcode.bankColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class bookingsRow : global::System.Data.DataRow {
            
            private bookingsDataTable tablebookings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal bookingsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebookings = ((bookingsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string refID {
                get {
                    return ((string)(this[this.tablebookings.refIDColumn]));
                }
                set {
                    this[this.tablebookings.refIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cabNo {
                get {
                    try {
                        return ((string)(this[this.tablebookings.cabNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cabNo\' in table \'bookings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebookings.cabNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string userID {
                get {
                    return ((string)(this[this.tablebookings.userIDColumn]));
                }
                set {
                    this[this.tablebookings.userIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string user_no {
                get {
                    return ((string)(this[this.tablebookings.user_noColumn]));
                }
                set {
                    this[this.tablebookings.user_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string bookingType {
                get {
                    return ((string)(this[this.tablebookings.bookingTypeColumn]));
                }
                set {
                    this[this.tablebookings.bookingTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string status {
                get {
                    return ((string)(this[this.tablebookings.statusColumn]));
                }
                set {
                    this[this.tablebookings.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string type {
                get {
                    return ((string)(this[this.tablebookings.typeColumn]));
                }
                set {
                    this[this.tablebookings.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string vehicularType {
                get {
                    return ((string)(this[this.tablebookings.vehicularTypeColumn]));
                }
                set {
                    this[this.tablebookings.vehicularTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string paymentMethod {
                get {
                    return ((string)(this[this.tablebookings.paymentMethodColumn]));
                }
                set {
                    this[this.tablebookings.paymentMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string customerFirstName {
                get {
                    return ((string)(this[this.tablebookings.customerFirstNameColumn]));
                }
                set {
                    this[this.tablebookings.customerFirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string customerLastName {
                get {
                    return ((string)(this[this.tablebookings.customerLastNameColumn]));
                }
                set {
                    this[this.tablebookings.customerLastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pickUpAddress {
                get {
                    return ((string)(this[this.tablebookings.pickUpAddressColumn]));
                }
                set {
                    this[this.tablebookings.pickUpAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dropOffAddress {
                get {
                    try {
                        return ((string)(this[this.tablebookings.dropOffAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dropOffAddress\' in table \'bookings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebookings.dropOffAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string promoCode {
                get {
                    try {
                        return ((string)(this[this.tablebookings.promoCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'promoCode\' in table \'bookings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebookings.promoCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime requestedTime {
                get {
                    return ((global::System.DateTime)(this[this.tablebookings.requestedTimeColumn]));
                }
                set {
                    this[this.tablebookings.requestedTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string packageID {
                get {
                    try {
                        return ((string)(this[this.tablebookings.packageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'packageID\' in table \'bookings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebookings.packageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double callUpCharge {
                get {
                    return ((double)(this[this.tablebookings.callUpChargeColumn]));
                }
                set {
                    this[this.tablebookings.callUpChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isUnmarked {
                get {
                    return ((bool)(this[this.tablebookings.isUnmarkedColumn]));
                }
                set {
                    this[this.tablebookings.isUnmarkedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isGuestCarrier {
                get {
                    return ((bool)(this[this.tablebookings.isGuestCarrierColumn]));
                }
                set {
                    this[this.tablebookings.isGuestCarrierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isAutoDispatch {
                get {
                    return ((bool)(this[this.tablebookings.isAutoDispatchColumn]));
                }
                set {
                    this[this.tablebookings.isAutoDispatchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string requiredCabNo {
                get {
                    try {
                        return ((string)(this[this.tablebookings.requiredCabNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'requiredCabNo\' in table \'bookings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebookings.requiredCabNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool outsidePickUp {
                get {
                    return ((bool)(this[this.tablebookings.outsidePickUpColumn]));
                }
                set {
                    this[this.tablebookings.outsidePickUpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string packageType {
                get {
                    return ((string)(this[this.tablebookings.packageTypeColumn]));
                }
                set {
                    this[this.tablebookings.packageTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string voucherNumber {
                get {
                    try {
                        return ((string)(this[this.tablebookings.voucherNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'voucherNumber\' in table \'bookings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebookings.voucherNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime startTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablebookings.startTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'startTime\' in table \'bookings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebookings.startTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime driverAcceptTime {
                get {
                    return ((global::System.DateTime)(this[this.tablebookings.driverAcceptTimeColumn]));
                }
                set {
                    this[this.tablebookings.driverAcceptTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime driverArriveTime {
                get {
                    return ((global::System.DateTime)(this[this.tablebookings.driverArriveTimeColumn]));
                }
                set {
                    this[this.tablebookings.driverArriveTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime endTime {
                get {
                    return ((global::System.DateTime)(this[this.tablebookings.endTimeColumn]));
                }
                set {
                    this[this.tablebookings.endTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime paidTime {
                get {
                    return ((global::System.DateTime)(this[this.tablebookings.paidTimeColumn]));
                }
                set {
                    this[this.tablebookings.paidTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double distance {
                get {
                    return ((double)(this[this.tablebookings.distanceColumn]));
                }
                set {
                    this[this.tablebookings.distanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double waitingTime {
                get {
                    return ((double)(this[this.tablebookings.waitingTimeColumn]));
                }
                set {
                    this[this.tablebookings.waitingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double baseFare {
                get {
                    return ((double)(this[this.tablebookings.baseFareColumn]));
                }
                set {
                    this[this.tablebookings.baseFareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double distanceFare {
                get {
                    return ((double)(this[this.tablebookings.distanceFareColumn]));
                }
                set {
                    this[this.tablebookings.distanceFareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double waitingFare {
                get {
                    return ((double)(this[this.tablebookings.waitingFareColumn]));
                }
                set {
                    this[this.tablebookings.waitingFareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double totalFare {
                get {
                    return ((double)(this[this.tablebookings.totalFareColumn]));
                }
                set {
                    this[this.tablebookings.totalFareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double discount {
                get {
                    return ((double)(this[this.tablebookings.discountColumn]));
                }
                set {
                    this[this.tablebookings.discountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int baseKm {
                get {
                    return ((int)(this[this.tablebookings.baseKmColumn]));
                }
                set {
                    this[this.tablebookings.baseKmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dispatchedTime {
                get {
                    return ((global::System.DateTime)(this[this.tablebookings.dispatchedTimeColumn]));
                }
                set {
                    this[this.tablebookings.dispatchedTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string driverAppVersion {
                get {
                    return ((string)(this[this.tablebookings.driverAppVersionColumn]));
                }
                set {
                    this[this.tablebookings.driverAppVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string maskedCard {
                get {
                    return ((string)(this[this.tablebookings.maskedCardColumn]));
                }
                set {
                    this[this.tablebookings.maskedCardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string customPackage {
                get {
                    return ((string)(this[this.tablebookings.customPackageColumn]));
                }
                set {
                    this[this.tablebookings.customPackageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string package_detail {
                get {
                    return ((string)(this[this.tablebookings.package_detailColumn]));
                }
                set {
                    this[this.tablebookings.package_detailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string corporatePaymentToken {
                get {
                    return ((string)(this[this.tablebookings.corporatePaymentTokenColumn]));
                }
                set {
                    this[this.tablebookings.corporatePaymentTokenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong isCheckedCorporate {
                get {
                    try {
                        return ((ulong)(this[this.tablebookings.isCheckedCorporateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isCheckedCorporate\' in table \'bookings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebookings.isCheckedCorporateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double pickUpLat {
                get {
                    return ((double)(this[this.tablebookings.pickUpLatColumn]));
                }
                set {
                    this[this.tablebookings.pickUpLatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double pickUpLng {
                get {
                    return ((double)(this[this.tablebookings.pickUpLngColumn]));
                }
                set {
                    this[this.tablebookings.pickUpLngColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double initialDropOffLat {
                get {
                    return ((double)(this[this.tablebookings.initialDropOffLatColumn]));
                }
                set {
                    this[this.tablebookings.initialDropOffLatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double initialDropOffLng {
                get {
                    return ((double)(this[this.tablebookings.initialDropOffLngColumn]));
                }
                set {
                    this[this.tablebookings.initialDropOffLngColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int driverID {
                get {
                    return ((int)(this[this.tablebookings.driverIDColumn]));
                }
                set {
                    this[this.tablebookings.driverIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string countryCode {
                get {
                    return ((string)(this[this.tablebookings.countryCodeColumn]));
                }
                set {
                    this[this.tablebookings.countryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string contactNumber {
                get {
                    return ((string)(this[this.tablebookings.contactNumberColumn]));
                }
                set {
                    this[this.tablebookings.contactNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string landmarks {
                get {
                    return ((string)(this[this.tablebookings.landmarksColumn]));
                }
                set {
                    this[this.tablebookings.landmarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string email {
                get {
                    return ((string)(this[this.tablebookings.emailColumn]));
                }
                set {
                    this[this.tablebookings.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int customPackageBaseKm {
                get {
                    return ((int)(this[this.tablebookings.customPackageBaseKmColumn]));
                }
                set {
                    this[this.tablebookings.customPackageBaseKmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int customPackageRate {
                get {
                    return ((int)(this[this.tablebookings.customPackageRateColumn]));
                }
                set {
                    this[this.tablebookings.customPackageRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string customPackageBaseRate {
                get {
                    try {
                        return ((string)(this[this.tablebookings.customPackageBaseRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'customPackageBaseRate\' in table \'bookings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebookings.customPackageBaseRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscabNoNull() {
                return this.IsNull(this.tablebookings.cabNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcabNoNull() {
                this[this.tablebookings.cabNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdropOffAddressNull() {
                return this.IsNull(this.tablebookings.dropOffAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdropOffAddressNull() {
                this[this.tablebookings.dropOffAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspromoCodeNull() {
                return this.IsNull(this.tablebookings.promoCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpromoCodeNull() {
                this[this.tablebookings.promoCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspackageIDNull() {
                return this.IsNull(this.tablebookings.packageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpackageIDNull() {
                this[this.tablebookings.packageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrequiredCabNoNull() {
                return this.IsNull(this.tablebookings.requiredCabNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrequiredCabNoNull() {
                this[this.tablebookings.requiredCabNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsvoucherNumberNull() {
                return this.IsNull(this.tablebookings.voucherNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetvoucherNumberNull() {
                this[this.tablebookings.voucherNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstartTimeNull() {
                return this.IsNull(this.tablebookings.startTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstartTimeNull() {
                this[this.tablebookings.startTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisCheckedCorporateNull() {
                return this.IsNull(this.tablebookings.isCheckedCorporateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisCheckedCorporateNull() {
                this[this.tablebookings.isCheckedCorporateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscustomPackageBaseRateNull() {
                return this.IsNull(this.tablebookings.customPackageBaseRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcustomPackageBaseRateNull() {
                this[this.tablebookings.customPackageBaseRateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class cashier_cashRow : global::System.Data.DataRow {
            
            private cashier_cashDataTable tablecashier_cash;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal cashier_cashRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecashier_cash = ((cashier_cashDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablecashier_cash.idColumn]));
                }
                set {
                    this[this.tablecashier_cash.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cashier {
                get {
                    return ((string)(this[this.tablecashier_cash.cashierColumn]));
                }
                set {
                    this[this.tablecashier_cash.cashierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double amount {
                get {
                    return ((double)(this[this.tablecashier_cash.amountColumn]));
                }
                set {
                    this[this.tablecashier_cash.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime logdate {
                get {
                    return ((global::System.DateTime)(this[this.tablecashier_cash.logdateColumn]));
                }
                set {
                    this[this.tablecashier_cash.logdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime date {
                get {
                    return ((global::System.DateTime)(this[this.tablecashier_cash.dateColumn]));
                }
                set {
                    this[this.tablecashier_cash.dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string enter_by {
                get {
                    return ((string)(this[this.tablecashier_cash.enter_byColumn]));
                }
                set {
                    this[this.tablecashier_cash.enter_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dipartment {
                get {
                    return ((string)(this[this.tablecashier_cash.dipartmentColumn]));
                }
                set {
                    this[this.tablecashier_cash.dipartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string status {
                get {
                    return ((string)(this[this.tablecashier_cash.statusColumn]));
                }
                set {
                    this[this.tablecashier_cash.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string non_active {
                get {
                    return ((string)(this[this.tablecashier_cash.non_activeColumn]));
                }
                set {
                    this[this.tablecashier_cash.non_activeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class hibernate_sequenceRow : global::System.Data.DataRow {
            
            private hibernate_sequenceDataTable tablehibernate_sequence;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal hibernate_sequenceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablehibernate_sequence = ((hibernate_sequenceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long next_val {
                get {
                    try {
                        return ((long)(this[this.tablehibernate_sequence.next_valColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'next_val\' in table \'hibernate_sequence\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehibernate_sequence.next_valColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isnext_valNull() {
                return this.IsNull(this.tablehibernate_sequence.next_valColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setnext_valNull() {
                this[this.tablehibernate_sequence.next_valColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tuk_acc_detailRow : global::System.Data.DataRow {
            
            private tuk_acc_detailDataTable tabletuk_acc_detail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tuk_acc_detailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletuk_acc_detail = ((tuk_acc_detailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cabno {
                get {
                    return ((string)(this[this.tabletuk_acc_detail.cabnoColumn]));
                }
                set {
                    this[this.tabletuk_acc_detail.cabnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string acc_number {
                get {
                    return ((string)(this[this.tabletuk_acc_detail.acc_numberColumn]));
                }
                set {
                    this[this.tabletuk_acc_detail.acc_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string acc_name {
                get {
                    return ((string)(this[this.tabletuk_acc_detail.acc_nameColumn]));
                }
                set {
                    this[this.tabletuk_acc_detail.acc_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string bank {
                get {
                    return ((string)(this[this.tabletuk_acc_detail.bankColumn]));
                }
                set {
                    this[this.tabletuk_acc_detail.bankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string bank_code {
                get {
                    return ((string)(this[this.tabletuk_acc_detail.bank_codeColumn]));
                }
                set {
                    this[this.tabletuk_acc_detail.bank_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string branch_name {
                get {
                    return ((string)(this[this.tabletuk_acc_detail.branch_nameColumn]));
                }
                set {
                    this[this.tabletuk_acc_detail.branch_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string branch_code {
                get {
                    return ((string)(this[this.tabletuk_acc_detail.branch_codeColumn]));
                }
                set {
                    this[this.tabletuk_acc_detail.branch_codeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tuk_lastbalanceRow : global::System.Data.DataRow {
            
            private tuk_lastbalanceDataTable tabletuk_lastbalance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tuk_lastbalanceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletuk_lastbalance = ((tuk_lastbalanceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cabno {
                get {
                    return ((string)(this[this.tabletuk_lastbalance.cabnoColumn]));
                }
                set {
                    this[this.tabletuk_lastbalance.cabnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double payment {
                get {
                    return ((double)(this[this.tabletuk_lastbalance.paymentColumn]));
                }
                set {
                    this[this.tabletuk_lastbalance.paymentColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tuk_sp_promoRow : global::System.Data.DataRow {
            
            private tuk_sp_promoDataTable tabletuk_sp_promo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tuk_sp_promoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletuk_sp_promo = ((tuk_sp_promoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tabletuk_sp_promo.idColumn]));
                }
                set {
                    this[this.tabletuk_sp_promo.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cabno {
                get {
                    return ((string)(this[this.tabletuk_sp_promo.cabnoColumn]));
                }
                set {
                    this[this.tabletuk_sp_promo.cabnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int no_hires {
                get {
                    return ((int)(this[this.tabletuk_sp_promo.no_hiresColumn]));
                }
                set {
                    this[this.tabletuk_sp_promo.no_hiresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double payment {
                get {
                    return ((double)(this[this.tabletuk_sp_promo.paymentColumn]));
                }
                set {
                    this[this.tabletuk_sp_promo.paymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime hire_date {
                get {
                    return ((global::System.DateTime)(this[this.tabletuk_sp_promo.hire_dateColumn]));
                }
                set {
                    this[this.tabletuk_sp_promo.hire_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime transfer_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletuk_sp_promo.transfer_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'transfer_date\' in table \'tuk_sp_promo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletuk_sp_promo.transfer_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Istransfer_dateNull() {
                return this.IsNull(this.tabletuk_sp_promo.transfer_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settransfer_dateNull() {
                this[this.tabletuk_sp_promo.transfer_dateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tuk_transferpayment_DateRow : global::System.Data.DataRow {
            
            private tuk_transferpayment_DateDataTable tabletuk_transferpayment_Date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tuk_transferpayment_DateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletuk_transferpayment_Date = ((tuk_transferpayment_DateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tabletuk_transferpayment_Date.idColumn]));
                }
                set {
                    this[this.tabletuk_transferpayment_Date.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime date {
                get {
                    return ((global::System.DateTime)(this[this.tabletuk_transferpayment_Date.dateColumn]));
                }
                set {
                    this[this.tabletuk_transferpayment_Date.dateColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tuk_wallet_hiresRow : global::System.Data.DataRow {
            
            private tuk_wallet_hiresDataTable tabletuk_wallet_hires;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tuk_wallet_hiresRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletuk_wallet_hires = ((tuk_wallet_hiresDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ref_no {
                get {
                    return ((string)(this[this.tabletuk_wallet_hires.ref_noColumn]));
                }
                set {
                    this[this.tabletuk_wallet_hires.ref_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cabno {
                get {
                    return ((string)(this[this.tabletuk_wallet_hires.cabnoColumn]));
                }
                set {
                    this[this.tabletuk_wallet_hires.cabnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime start_date {
                get {
                    return ((global::System.DateTime)(this[this.tabletuk_wallet_hires.start_dateColumn]));
                }
                set {
                    this[this.tabletuk_wallet_hires.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string status {
                get {
                    return ((string)(this[this.tabletuk_wallet_hires.statusColumn]));
                }
                set {
                    this[this.tabletuk_wallet_hires.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double discount {
                get {
                    return ((double)(this[this.tabletuk_wallet_hires.discountColumn]));
                }
                set {
                    this[this.tabletuk_wallet_hires.discountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double total {
                get {
                    return ((double)(this[this.tabletuk_wallet_hires.totalColumn]));
                }
                set {
                    this[this.tabletuk_wallet_hires.totalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string discount_payed {
                get {
                    return ((string)(this[this.tabletuk_wallet_hires.discount_payedColumn]));
                }
                set {
                    this[this.tabletuk_wallet_hires.discount_payedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string touch_payed {
                get {
                    return ((string)(this[this.tabletuk_wallet_hires.touch_payedColumn]));
                }
                set {
                    this[this.tabletuk_wallet_hires.touch_payedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string credit_cardpayed {
                get {
                    return ((string)(this[this.tabletuk_wallet_hires.credit_cardpayedColumn]));
                }
                set {
                    this[this.tabletuk_wallet_hires.credit_cardpayedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime credit_transferdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletuk_wallet_hires.credit_transferdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'credit_transferdate\' in table \'tuk_wallet_hires\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletuk_wallet_hires.credit_transferdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime discount_transferdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletuk_wallet_hires.discount_transferdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'discount_transferdate\' in table \'tuk_wallet_hires\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabletuk_wallet_hires.discount_transferdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime touch_transferdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletuk_wallet_hires.touch_transferdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'touch_transferdate\' in table \'tuk_wallet_hires\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletuk_wallet_hires.touch_transferdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string b_type {
                get {
                    return ((string)(this[this.tabletuk_wallet_hires.b_typeColumn]));
                }
                set {
                    this[this.tabletuk_wallet_hires.b_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime sp_promodate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletuk_wallet_hires.sp_promodateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sp_promodate\' in table \'tuk_wallet_hires\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletuk_wallet_hires.sp_promodateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double sp_amount {
                get {
                    return ((double)(this[this.tabletuk_wallet_hires.sp_amountColumn]));
                }
                set {
                    this[this.tabletuk_wallet_hires.sp_amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sp_up {
                get {
                    return ((string)(this[this.tabletuk_wallet_hires.sp_upColumn]));
                }
                set {
                    this[this.tabletuk_wallet_hires.sp_upColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string paymentMethod {
                get {
                    return ((string)(this[this.tabletuk_wallet_hires.paymentMethodColumn]));
                }
                set {
                    this[this.tabletuk_wallet_hires.paymentMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double com_commission {
                get {
                    return ((double)(this[this.tabletuk_wallet_hires.com_commissionColumn]));
                }
                set {
                    this[this.tabletuk_wallet_hires.com_commissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscredit_transferdateNull() {
                return this.IsNull(this.tabletuk_wallet_hires.credit_transferdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcredit_transferdateNull() {
                this[this.tabletuk_wallet_hires.credit_transferdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdiscount_transferdateNull() {
                return this.IsNull(this.tabletuk_wallet_hires.discount_transferdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdiscount_transferdateNull() {
                this[this.tabletuk_wallet_hires.discount_transferdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Istouch_transferdateNull() {
                return this.IsNull(this.tabletuk_wallet_hires.touch_transferdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settouch_transferdateNull() {
                this[this.tabletuk_wallet_hires.touch_transferdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issp_promodateNull() {
                return this.IsNull(this.tabletuk_wallet_hires.sp_promodateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsp_promodateNull() {
                this[this.tabletuk_wallet_hires.sp_promodateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tuk_wallet_paymentRow : global::System.Data.DataRow {
            
            private tuk_wallet_paymentDataTable tabletuk_wallet_payment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tuk_wallet_paymentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletuk_wallet_payment = ((tuk_wallet_paymentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tabletuk_wallet_payment.idColumn]));
                }
                set {
                    this[this.tabletuk_wallet_payment.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cabno {
                get {
                    return ((string)(this[this.tabletuk_wallet_payment.cabnoColumn]));
                }
                set {
                    this[this.tabletuk_wallet_payment.cabnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double creditcard {
                get {
                    return ((double)(this[this.tabletuk_wallet_payment.creditcardColumn]));
                }
                set {
                    this[this.tabletuk_wallet_payment.creditcardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double promopayment {
                get {
                    return ((double)(this[this.tabletuk_wallet_payment.promopaymentColumn]));
                }
                set {
                    this[this.tabletuk_wallet_payment.promopaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double touch {
                get {
                    return ((double)(this[this.tabletuk_wallet_payment.touchColumn]));
                }
                set {
                    this[this.tabletuk_wallet_payment.touchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double hpromo {
                get {
                    return ((double)(this[this.tabletuk_wallet_payment.hpromoColumn]));
                }
                set {
                    this[this.tabletuk_wallet_payment.hpromoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double comcomission {
                get {
                    return ((double)(this[this.tabletuk_wallet_payment.comcomissionColumn]));
                }
                set {
                    this[this.tabletuk_wallet_payment.comcomissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double lbalance {
                get {
                    return ((double)(this[this.tabletuk_wallet_payment.lbalanceColumn]));
                }
                set {
                    this[this.tabletuk_wallet_payment.lbalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double amount {
                get {
                    return ((double)(this[this.tabletuk_wallet_payment.amountColumn]));
                }
                set {
                    this[this.tabletuk_wallet_payment.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime date {
                get {
                    return ((global::System.DateTime)(this[this.tabletuk_wallet_payment.dateColumn]));
                }
                set {
                    this[this.tabletuk_wallet_payment.dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime transfer_date {
                get {
                    return ((global::System.DateTime)(this[this.tabletuk_wallet_payment.transfer_dateColumn]));
                }
                set {
                    this[this.tabletuk_wallet_payment.transfer_dateColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tuk_wallet_paymentsummaryRow : global::System.Data.DataRow {
            
            private tuk_wallet_paymentsummaryDataTable tabletuk_wallet_paymentsummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tuk_wallet_paymentsummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletuk_wallet_paymentsummary = ((tuk_wallet_paymentsummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tabletuk_wallet_paymentsummary.idColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cabno {
                get {
                    return ((string)(this[this.tabletuk_wallet_paymentsummary.cabnoColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.cabnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double app {
                get {
                    return ((double)(this[this.tabletuk_wallet_paymentsummary.appColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.appColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ccenter {
                get {
                    return ((double)(this[this.tabletuk_wallet_paymentsummary.ccenterColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.ccenterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double rpick {
                get {
                    return ((double)(this[this.tabletuk_wallet_paymentsummary.rpickColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.rpickColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double corporate {
                get {
                    return ((double)(this[this.tabletuk_wallet_paymentsummary.corporateColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.corporateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double web {
                get {
                    return ((double)(this[this.tabletuk_wallet_paymentsummary.webColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.webColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double total_income {
                get {
                    return ((double)(this[this.tabletuk_wallet_paymentsummary.total_incomeColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.total_incomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double creditcard {
                get {
                    return ((double)(this[this.tabletuk_wallet_paymentsummary.creditcardColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.creditcardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double promopayment {
                get {
                    return ((double)(this[this.tabletuk_wallet_paymentsummary.promopaymentColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.promopaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double touch {
                get {
                    return ((double)(this[this.tabletuk_wallet_paymentsummary.touchColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.touchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double hpromo {
                get {
                    return ((double)(this[this.tabletuk_wallet_paymentsummary.hpromoColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.hpromoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double comcomission {
                get {
                    return ((double)(this[this.tabletuk_wallet_paymentsummary.comcomissionColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.comcomissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double lbalance {
                get {
                    return ((double)(this[this.tabletuk_wallet_paymentsummary.lbalanceColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.lbalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double amount {
                get {
                    return ((double)(this[this.tabletuk_wallet_paymentsummary.amountColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime date {
                get {
                    return ((global::System.DateTime)(this[this.tabletuk_wallet_paymentsummary.dateColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime transfer_date {
                get {
                    return ((global::System.DateTime)(this[this.tabletuk_wallet_paymentsummary.transfer_dateColumn]));
                }
                set {
                    this[this.tabletuk_wallet_paymentsummary.transfer_dateColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class achiniRow : global::System.Data.DataRow {
            
            private achiniDataTable tableachini;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal achiniRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableachini = ((achiniDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cabno {
                get {
                    return ((string)(this[this.tableachini.cabnoColumn]));
                }
                set {
                    this[this.tableachini.cabnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double _Sum__total__ {
                get {
                    try {
                        return ((double)(this[this.tableachini._Sum__total__Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sum(`total`)\' in table \'achini\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableachini._Sum__total__Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime credit_transferdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableachini.credit_transferdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'credit_transferdate\' in table \'achini\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableachini.credit_transferdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_Sum__total__Null() {
                return this.IsNull(this.tableachini._Sum__total__Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_Sum__total__Null() {
                this[this.tableachini._Sum__total__Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscredit_transferdateNull() {
                return this.IsNull(this.tableachini.credit_transferdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcredit_transferdateNull() {
                this[this.tableachini.credit_transferdateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class bank_brach_codeRowChangeEvent : global::System.EventArgs {
            
            private bank_brach_codeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bank_brach_codeRowChangeEvent(bank_brach_codeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bank_brach_codeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class bankcodeRowChangeEvent : global::System.EventArgs {
            
            private bankcodeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bankcodeRowChangeEvent(bankcodeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bankcodeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class bookingsRowChangeEvent : global::System.EventArgs {
            
            private bookingsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bookingsRowChangeEvent(bookingsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bookingsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class cashier_cashRowChangeEvent : global::System.EventArgs {
            
            private cashier_cashRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public cashier_cashRowChangeEvent(cashier_cashRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public cashier_cashRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class hibernate_sequenceRowChangeEvent : global::System.EventArgs {
            
            private hibernate_sequenceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hibernate_sequenceRowChangeEvent(hibernate_sequenceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hibernate_sequenceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tuk_acc_detailRowChangeEvent : global::System.EventArgs {
            
            private tuk_acc_detailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_acc_detailRowChangeEvent(tuk_acc_detailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_acc_detailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tuk_lastbalanceRowChangeEvent : global::System.EventArgs {
            
            private tuk_lastbalanceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_lastbalanceRowChangeEvent(tuk_lastbalanceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_lastbalanceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tuk_sp_promoRowChangeEvent : global::System.EventArgs {
            
            private tuk_sp_promoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_sp_promoRowChangeEvent(tuk_sp_promoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_sp_promoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tuk_transferpayment_DateRowChangeEvent : global::System.EventArgs {
            
            private tuk_transferpayment_DateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_transferpayment_DateRowChangeEvent(tuk_transferpayment_DateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_transferpayment_DateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tuk_wallet_hiresRowChangeEvent : global::System.EventArgs {
            
            private tuk_wallet_hiresRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_hiresRowChangeEvent(tuk_wallet_hiresRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_hiresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tuk_wallet_paymentRowChangeEvent : global::System.EventArgs {
            
            private tuk_wallet_paymentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_paymentRowChangeEvent(tuk_wallet_paymentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_paymentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tuk_wallet_paymentsummaryRowChangeEvent : global::System.EventArgs {
            
            private tuk_wallet_paymentsummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_paymentsummaryRowChangeEvent(tuk_wallet_paymentsummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tuk_wallet_paymentsummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class achiniRowChangeEvent : global::System.EventArgs {
            
            private achiniRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public achiniRowChangeEvent(achiniRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public achiniRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WindowsFormsApplication3.accounts_reportsDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class bank_brach_codeTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bank_brach_codeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "bank_brach_code";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("bank_name", "bank_name");
            tableMapping.ColumnMappings.Add("bank_code", "bank_code");
            tableMapping.ColumnMappings.Add("branch_code", "branch_code");
            tableMapping.ColumnMappings.Add("branch_name", "branch_name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `bank_brach_code` WHERE ((`id` = @Original_id) AND (`bank_name` = @Or" +
                "iginal_bank_name) AND (`bank_code` = @Original_bank_code) AND (`branch_code` = @" +
                "Original_branch_code) AND (`branch_name` = @Original_branch_name))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_bank_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_bank_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_branch_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "branch_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_branch_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "branch_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `bank_brach_code` (`bank_name`, `bank_code`, `branch_code`, `branch_n" +
                "ame`) VALUES (@bank_name, @bank_code, @branch_code, @branch_name)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@bank_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank_name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@bank_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@branch_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "branch_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@branch_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "branch_name";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `bank_brach_code` SET `bank_name` = @bank_name, `bank_code` = @bank_code, `branch_code` = @branch_code, `branch_name` = @branch_name WHERE ((`id` = @Original_id) AND (`bank_name` = @Original_bank_name) AND (`bank_code` = @Original_bank_code) AND (`branch_code` = @Original_branch_code) AND (`branch_name` = @Original_branch_name))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@bank_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank_name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@bank_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@branch_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "branch_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@branch_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "branch_name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_bank_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_bank_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_branch_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "branch_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_branch_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "branch_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.accounts_reportsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `id`, `bank_name`, `bank_code`, `branch_code`, `branch_name` FROM `bank_br" +
                "ach_code`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(accounts_reportsDataSet.bank_brach_codeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual accounts_reportsDataSet.bank_brach_codeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            accounts_reportsDataSet.bank_brach_codeDataTable dataTable = new accounts_reportsDataSet.bank_brach_codeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet.bank_brach_codeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "bank_brach_code");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_bank_name, string Original_bank_code, string Original_branch_code, string Original_branch_name) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_bank_name == null)) {
                throw new global::System.ArgumentNullException("Original_bank_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_bank_name));
            }
            if ((Original_bank_code == null)) {
                throw new global::System.ArgumentNullException("Original_bank_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_bank_code));
            }
            if ((Original_branch_code == null)) {
                throw new global::System.ArgumentNullException("Original_branch_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_branch_code));
            }
            if ((Original_branch_name == null)) {
                throw new global::System.ArgumentNullException("Original_branch_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_branch_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string bank_name, string bank_code, string branch_code, string branch_name) {
            if ((bank_name == null)) {
                throw new global::System.ArgumentNullException("bank_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(bank_name));
            }
            if ((bank_code == null)) {
                throw new global::System.ArgumentNullException("bank_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(bank_code));
            }
            if ((branch_code == null)) {
                throw new global::System.ArgumentNullException("branch_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(branch_code));
            }
            if ((branch_name == null)) {
                throw new global::System.ArgumentNullException("branch_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(branch_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string bank_name, string bank_code, string branch_code, string branch_name, int Original_id, string Original_bank_name, string Original_bank_code, string Original_branch_code, string Original_branch_name) {
            if ((bank_name == null)) {
                throw new global::System.ArgumentNullException("bank_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(bank_name));
            }
            if ((bank_code == null)) {
                throw new global::System.ArgumentNullException("bank_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(bank_code));
            }
            if ((branch_code == null)) {
                throw new global::System.ArgumentNullException("branch_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(branch_code));
            }
            if ((branch_name == null)) {
                throw new global::System.ArgumentNullException("branch_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(branch_name));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_id));
            if ((Original_bank_name == null)) {
                throw new global::System.ArgumentNullException("Original_bank_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_bank_name));
            }
            if ((Original_bank_code == null)) {
                throw new global::System.ArgumentNullException("Original_bank_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_bank_code));
            }
            if ((Original_branch_code == null)) {
                throw new global::System.ArgumentNullException("Original_branch_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_branch_code));
            }
            if ((Original_branch_name == null)) {
                throw new global::System.ArgumentNullException("Original_branch_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_branch_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class bankcodeTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bankcodeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "bankcode";
            tableMapping.ColumnMappings.Add("bank_code", "bank_code");
            tableMapping.ColumnMappings.Add("bank", "bank");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `bankcode` WHERE ((`bank_code` = @Original_bank_code) AND (`bank` = @" +
                "Original_bank))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_bank_code";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "bank_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_bank";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `bankcode` (`bank_code`, `bank`) VALUES (@bank_code, @bank)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@bank_code";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "bank_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@bank";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `bankcode` SET `bank_code` = @bank_code, `bank` = @bank WHERE ((`bank_code" +
                "` = @Original_bank_code) AND (`bank` = @Original_bank))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@bank_code";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "bank_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@bank";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_bank_code";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "bank_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_bank";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.accounts_reportsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `bank_code`, `bank` FROM `bankcode`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(accounts_reportsDataSet.bankcodeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual accounts_reportsDataSet.bankcodeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            accounts_reportsDataSet.bankcodeDataTable dataTable = new accounts_reportsDataSet.bankcodeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet.bankcodeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "bankcode");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_bank_code, string Original_bank) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_bank_code));
            if ((Original_bank == null)) {
                throw new global::System.ArgumentNullException("Original_bank");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_bank));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int bank_code, string bank) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(bank_code));
            if ((bank == null)) {
                throw new global::System.ArgumentNullException("bank");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(bank));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int bank_code, string bank, int Original_bank_code, string Original_bank) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(bank_code));
            if ((bank == null)) {
                throw new global::System.ArgumentNullException("bank");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(bank));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_bank_code));
            if ((Original_bank == null)) {
                throw new global::System.ArgumentNullException("Original_bank");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_bank));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string bank, int Original_bank_code, string Original_bank) {
            return this.Update(Original_bank_code, bank, Original_bank_code, Original_bank);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class bookingsTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bookingsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "bookings";
            tableMapping.ColumnMappings.Add("refID", "refID");
            tableMapping.ColumnMappings.Add("cabNo", "cabNo");
            tableMapping.ColumnMappings.Add("userID", "userID");
            tableMapping.ColumnMappings.Add("user_no", "user_no");
            tableMapping.ColumnMappings.Add("bookingType", "bookingType");
            tableMapping.ColumnMappings.Add("status", "status");
            tableMapping.ColumnMappings.Add("type", "type");
            tableMapping.ColumnMappings.Add("vehicularType", "vehicularType");
            tableMapping.ColumnMappings.Add("paymentMethod", "paymentMethod");
            tableMapping.ColumnMappings.Add("customerFirstName", "customerFirstName");
            tableMapping.ColumnMappings.Add("customerLastName", "customerLastName");
            tableMapping.ColumnMappings.Add("pickUpAddress", "pickUpAddress");
            tableMapping.ColumnMappings.Add("dropOffAddress", "dropOffAddress");
            tableMapping.ColumnMappings.Add("promoCode", "promoCode");
            tableMapping.ColumnMappings.Add("requestedTime", "requestedTime");
            tableMapping.ColumnMappings.Add("packageID", "packageID");
            tableMapping.ColumnMappings.Add("callUpCharge", "callUpCharge");
            tableMapping.ColumnMappings.Add("isUnmarked", "isUnmarked");
            tableMapping.ColumnMappings.Add("isGuestCarrier", "isGuestCarrier");
            tableMapping.ColumnMappings.Add("isAutoDispatch", "isAutoDispatch");
            tableMapping.ColumnMappings.Add("requiredCabNo", "requiredCabNo");
            tableMapping.ColumnMappings.Add("outsidePickUp", "outsidePickUp");
            tableMapping.ColumnMappings.Add("packageType", "packageType");
            tableMapping.ColumnMappings.Add("voucherNumber", "voucherNumber");
            tableMapping.ColumnMappings.Add("startTime", "startTime");
            tableMapping.ColumnMappings.Add("driverAcceptTime", "driverAcceptTime");
            tableMapping.ColumnMappings.Add("driverArriveTime", "driverArriveTime");
            tableMapping.ColumnMappings.Add("endTime", "endTime");
            tableMapping.ColumnMappings.Add("paidTime", "paidTime");
            tableMapping.ColumnMappings.Add("distance", "distance");
            tableMapping.ColumnMappings.Add("waitingTime", "waitingTime");
            tableMapping.ColumnMappings.Add("baseFare", "baseFare");
            tableMapping.ColumnMappings.Add("distanceFare", "distanceFare");
            tableMapping.ColumnMappings.Add("waitingFare", "waitingFare");
            tableMapping.ColumnMappings.Add("totalFare", "totalFare");
            tableMapping.ColumnMappings.Add("discount", "discount");
            tableMapping.ColumnMappings.Add("baseKm", "baseKm");
            tableMapping.ColumnMappings.Add("dispatchedTime", "dispatchedTime");
            tableMapping.ColumnMappings.Add("driverAppVersion", "driverAppVersion");
            tableMapping.ColumnMappings.Add("maskedCard", "maskedCard");
            tableMapping.ColumnMappings.Add("customPackage", "customPackage");
            tableMapping.ColumnMappings.Add("package_detail", "package_detail");
            tableMapping.ColumnMappings.Add("corporatePaymentToken", "corporatePaymentToken");
            tableMapping.ColumnMappings.Add("isCheckedCorporate", "isCheckedCorporate");
            tableMapping.ColumnMappings.Add("pickUpLat", "pickUpLat");
            tableMapping.ColumnMappings.Add("pickUpLng", "pickUpLng");
            tableMapping.ColumnMappings.Add("initialDropOffLat", "initialDropOffLat");
            tableMapping.ColumnMappings.Add("initialDropOffLng", "initialDropOffLng");
            tableMapping.ColumnMappings.Add("driverID", "driverID");
            tableMapping.ColumnMappings.Add("countryCode", "countryCode");
            tableMapping.ColumnMappings.Add("contactNumber", "contactNumber");
            tableMapping.ColumnMappings.Add("landmarks", "landmarks");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("customPackageBaseKm", "customPackageBaseKm");
            tableMapping.ColumnMappings.Add("customPackageRate", "customPackageRate");
            tableMapping.ColumnMappings.Add("customPackageBaseRate", "customPackageBaseRate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `bookings` WHERE ((`refID` = @Original_refID) AND ((@IsNull_cabNo = 1" +
                " AND `cabNo` IS NULL) OR (`cabNo` = @Original_cabNo)) AND (`userID` = @Original_" +
                "userID) AND (`user_no` = @Original_user_no) AND (`bookingType` = @Original_booki" +
                "ngType) AND (`status` = @Original_status) AND (`type` = @Original_type) AND (`ve" +
                "hicularType` = @Original_vehicularType) AND (`paymentMethod` = @Original_payment" +
                "Method) AND (`customerFirstName` = @Original_customerFirstName) AND (`customerLa" +
                "stName` = @Original_customerLastName) AND (`pickUpAddress` = @Original_pickUpAdd" +
                "ress) AND ((@IsNull_dropOffAddress = 1 AND `dropOffAddress` IS NULL) OR (`dropOf" +
                "fAddress` = @Original_dropOffAddress)) AND ((@IsNull_promoCode = 1 AND `promoCod" +
                "e` IS NULL) OR (`promoCode` = @Original_promoCode)) AND (`requestedTime` = @Orig" +
                "inal_requestedTime) AND ((@IsNull_packageID = 1 AND `packageID` IS NULL) OR (`pa" +
                "ckageID` = @Original_packageID)) AND (`callUpCharge` = @Original_callUpCharge) A" +
                "ND (`isUnmarked` = @Original_isUnmarked) AND (`isGuestCarrier` = @Original_isGue" +
                "stCarrier) AND (`isAutoDispatch` = @Original_isAutoDispatch) AND ((@IsNull_requi" +
                "redCabNo = 1 AND `requiredCabNo` IS NULL) OR (`requiredCabNo` = @Original_requir" +
                "edCabNo)) AND (`outsidePickUp` = @Original_outsidePickUp) AND (`packageType` = @" +
                "Original_packageType) AND ((@IsNull_voucherNumber = 1 AND `voucherNumber` IS NUL" +
                "L) OR (`voucherNumber` = @Original_voucherNumber)) AND ((@IsNull_startTime = 1 A" +
                "ND `startTime` IS NULL) OR (`startTime` = @Original_startTime)) AND (`driverAcce" +
                "ptTime` = @Original_driverAcceptTime) AND (`driverArriveTime` = @Original_driver" +
                "ArriveTime) AND (`endTime` = @Original_endTime) AND (`paidTime` = @Original_paid" +
                "Time) AND (`distance` = @Original_distance) AND (`waitingTime` = @Original_waiti" +
                "ngTime) AND (`baseFare` = @Original_baseFare) AND (`distanceFare` = @Original_di" +
                "stanceFare) AND (`waitingFare` = @Original_waitingFare) AND (`totalFare` = @Orig" +
                "inal_totalFare) AND (`discount` = @Original_discount) AND (`baseKm` = @Original_" +
                "baseKm) AND (`dispatchedTime` = @Original_dispatchedTime) AND (`driverAppVersion" +
                "` = @Original_driverAppVersion) AND (`maskedCard` = @Original_maskedCard) AND (`" +
                "customPackage` = @Original_customPackage) AND (`package_detail` = @Original_pack" +
                "age_detail) AND (`corporatePaymentToken` = @Original_corporatePaymentToken) AND " +
                "((@IsNull_isCheckedCorporate = 1 AND `isCheckedCorporate` IS NULL) OR (`isChecke" +
                "dCorporate` = @Original_isCheckedCorporate)) AND (`pickUpLat` = @Original_pickUp" +
                "Lat) AND (`pickUpLng` = @Original_pickUpLng) AND (`initialDropOffLat` = @Origina" +
                "l_initialDropOffLat) AND (`initialDropOffLng` = @Original_initialDropOffLng) AND" +
                " (`driverID` = @Original_driverID) AND (`countryCode` = @Original_countryCode) A" +
                "ND (`contactNumber` = @Original_contactNumber) AND (`landmarks` = @Original_land" +
                "marks) AND (`email` = @Original_email) AND (`customPackageBaseKm` = @Original_cu" +
                "stomPackageBaseKm) AND (`customPackageRate` = @Original_customPackageRate) AND (" +
                "(@IsNull_customPackageBaseRate = 1 AND `customPackageBaseRate` IS NULL) OR (`cus" +
                "tomPackageBaseRate` = @Original_customPackageBaseRate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_refID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "refID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cabNo";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cabNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cabNo";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "cabNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_user_no";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "user_no";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_bookingType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bookingType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_status";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "status";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_type";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_vehicularType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "vehicularType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_paymentMethod";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "paymentMethod";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_customerFirstName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "customerFirstName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_customerLastName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "customerLastName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pickUpAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pickUpAddress";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_dropOffAddress";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dropOffAddress";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dropOffAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dropOffAddress";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_promoCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "promoCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_promoCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "promoCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_requestedTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "requestedTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_packageID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "packageID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_packageID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "packageID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_callUpCharge";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "callUpCharge";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_isUnmarked";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "isUnmarked";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_isGuestCarrier";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "isGuestCarrier";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_isAutoDispatch";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "isAutoDispatch";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_requiredCabNo";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "requiredCabNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_requiredCabNo";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "requiredCabNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_outsidePickUp";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "outsidePickUp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_packageType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "packageType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_voucherNumber";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "voucherNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_voucherNumber";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "voucherNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_startTime";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "startTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_startTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "startTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driverAcceptTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "driverAcceptTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driverArriveTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "driverArriveTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_endTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "endTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_paidTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "paidTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_distance";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "distance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_waitingTime";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "waitingTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_baseFare";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "baseFare";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_distanceFare";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "distanceFare";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_waitingFare";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "waitingFare";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_totalFare";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "totalFare";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_discount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "discount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_baseKm";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "baseKm";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dispatchedTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dispatchedTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driverAppVersion";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driverAppVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_maskedCard";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "maskedCard";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_customPackage";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "customPackage";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_package_detail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "package_detail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_corporatePaymentToken";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "corporatePaymentToken";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_isCheckedCorporate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "isCheckedCorporate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_isCheckedCorporate";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "isCheckedCorporate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pickUpLat";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pickUpLat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pickUpLng";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pickUpLng";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_initialDropOffLat";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "initialDropOffLat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_initialDropOffLng";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "initialDropOffLng";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driverID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "driverID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_countryCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "countryCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_contactNumber";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "contactNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_landmarks";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "landmarks";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_email";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_customPackageBaseKm";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "customPackageBaseKm";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_customPackageRate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "customPackageRate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_customPackageBaseRate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "customPackageBaseRate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_customPackageBaseRate";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "customPackageBaseRate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `bookings` (`refID`, `cabNo`, `userID`, `user_no`, `bookingType`, `st" +
                "atus`, `type`, `vehicularType`, `paymentMethod`, `customerFirstName`, `customerL" +
                "astName`, `pickUpAddress`, `dropOffAddress`, `promoCode`, `requestedTime`, `pack" +
                "ageID`, `callUpCharge`, `isUnmarked`, `isGuestCarrier`, `isAutoDispatch`, `requi" +
                "redCabNo`, `outsidePickUp`, `packageType`, `voucherNumber`, `startTime`, `driver" +
                "AcceptTime`, `driverArriveTime`, `endTime`, `paidTime`, `distance`, `waitingTime" +
                "`, `baseFare`, `distanceFare`, `waitingFare`, `totalFare`, `discount`, `baseKm`," +
                " `dispatchedTime`, `driverAppVersion`, `maskedCard`, `customPackage`, `package_d" +
                "etail`, `corporatePaymentToken`, `isCheckedCorporate`, `pickUpLat`, `pickUpLng`," +
                " `initialDropOffLat`, `initialDropOffLng`, `driverID`, `countryCode`, `contactNu" +
                "mber`, `landmarks`, `email`, `customPackageBaseKm`, `customPackageRate`, `custom" +
                "PackageBaseRate`) VALUES (@refID, @cabNo, @userID, @user_no, @bookingType, @stat" +
                "us, @type, @vehicularType, @paymentMethod, @customerFirstName, @customerLastName" +
                ", @pickUpAddress, @dropOffAddress, @promoCode, @requestedTime, @packageID, @call" +
                "UpCharge, @isUnmarked, @isGuestCarrier, @isAutoDispatch, @requiredCabNo, @outsid" +
                "ePickUp, @packageType, @voucherNumber, @startTime, @driverAcceptTime, @driverArr" +
                "iveTime, @endTime, @paidTime, @distance, @waitingTime, @baseFare, @distanceFare," +
                " @waitingFare, @totalFare, @discount, @baseKm, @dispatchedTime, @driverAppVersio" +
                "n, @maskedCard, @customPackage, @package_detail, @corporatePaymentToken, @isChec" +
                "kedCorporate, @pickUpLat, @pickUpLng, @initialDropOffLat, @initialDropOffLng, @d" +
                "riverID, @countryCode, @contactNumber, @landmarks, @email, @customPackageBaseKm," +
                " @customPackageRate, @customPackageBaseRate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@refID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "refID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cabNo";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "cabNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@user_no";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "user_no";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@bookingType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bookingType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@status";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "status";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@type";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "type";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@vehicularType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "vehicularType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@paymentMethod";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "paymentMethod";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@customerFirstName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "customerFirstName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@customerLastName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "customerLastName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pickUpAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pickUpAddress";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dropOffAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dropOffAddress";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@promoCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "promoCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@requestedTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "requestedTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@packageID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "packageID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@callUpCharge";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "callUpCharge";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@isUnmarked";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "isUnmarked";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@isGuestCarrier";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "isGuestCarrier";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@isAutoDispatch";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "isAutoDispatch";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@requiredCabNo";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "requiredCabNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@outsidePickUp";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "outsidePickUp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@packageType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "packageType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@voucherNumber";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "voucherNumber";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@startTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "startTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driverAcceptTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "driverAcceptTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driverArriveTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "driverArriveTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@endTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "endTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@paidTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "paidTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@distance";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "distance";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@waitingTime";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "waitingTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@baseFare";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "baseFare";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@distanceFare";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "distanceFare";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@waitingFare";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "waitingFare";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@totalFare";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "totalFare";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@discount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "discount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@baseKm";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "baseKm";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dispatchedTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dispatchedTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driverAppVersion";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driverAppVersion";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@maskedCard";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "maskedCard";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@customPackage";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "customPackage";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@package_detail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "package_detail";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@corporatePaymentToken";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "corporatePaymentToken";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@isCheckedCorporate";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "isCheckedCorporate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pickUpLat";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pickUpLat";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pickUpLng";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pickUpLng";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@initialDropOffLat";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "initialDropOffLat";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@initialDropOffLng";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "initialDropOffLng";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driverID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "driverID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@countryCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "countryCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@contactNumber";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "contactNumber";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@landmarks";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "landmarks";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@email";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@customPackageBaseKm";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "customPackageBaseKm";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@customPackageRate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "customPackageRate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@customPackageBaseRate";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "customPackageBaseRate";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `bookings` SET `refID` = @refID, `cabNo` = @cabNo, `userID` = @userID, `us" +
                "er_no` = @user_no, `bookingType` = @bookingType, `status` = @status, `type` = @t" +
                "ype, `vehicularType` = @vehicularType, `paymentMethod` = @paymentMethod, `custom" +
                "erFirstName` = @customerFirstName, `customerLastName` = @customerLastName, `pick" +
                "UpAddress` = @pickUpAddress, `dropOffAddress` = @dropOffAddress, `promoCode` = @" +
                "promoCode, `requestedTime` = @requestedTime, `packageID` = @packageID, `callUpCh" +
                "arge` = @callUpCharge, `isUnmarked` = @isUnmarked, `isGuestCarrier` = @isGuestCa" +
                "rrier, `isAutoDispatch` = @isAutoDispatch, `requiredCabNo` = @requiredCabNo, `ou" +
                "tsidePickUp` = @outsidePickUp, `packageType` = @packageType, `voucherNumber` = @" +
                "voucherNumber, `startTime` = @startTime, `driverAcceptTime` = @driverAcceptTime," +
                " `driverArriveTime` = @driverArriveTime, `endTime` = @endTime, `paidTime` = @pai" +
                "dTime, `distance` = @distance, `waitingTime` = @waitingTime, `baseFare` = @baseF" +
                "are, `distanceFare` = @distanceFare, `waitingFare` = @waitingFare, `totalFare` =" +
                " @totalFare, `discount` = @discount, `baseKm` = @baseKm, `dispatchedTime` = @dis" +
                "patchedTime, `driverAppVersion` = @driverAppVersion, `maskedCard` = @maskedCard," +
                " `customPackage` = @customPackage, `package_detail` = @package_detail, `corporat" +
                "ePaymentToken` = @corporatePaymentToken, `isCheckedCorporate` = @isCheckedCorpor" +
                "ate, `pickUpLat` = @pickUpLat, `pickUpLng` = @pickUpLng, `initialDropOffLat` = @" +
                "initialDropOffLat, `initialDropOffLng` = @initialDropOffLng, `driverID` = @drive" +
                "rID, `countryCode` = @countryCode, `contactNumber` = @contactNumber, `landmarks`" +
                " = @landmarks, `email` = @email, `customPackageBaseKm` = @customPackageBaseKm, `" +
                "customPackageRate` = @customPackageRate, `customPackageBaseRate` = @customPackag" +
                "eBaseRate WHERE ((`refID` = @Original_refID) AND ((@IsNull_cabNo = 1 AND `cabNo`" +
                " IS NULL) OR (`cabNo` = @Original_cabNo)) AND (`userID` = @Original_userID) AND " +
                "(`user_no` = @Original_user_no) AND (`bookingType` = @Original_bookingType) AND " +
                "(`status` = @Original_status) AND (`type` = @Original_type) AND (`vehicularType`" +
                " = @Original_vehicularType) AND (`paymentMethod` = @Original_paymentMethod) AND " +
                "(`customerFirstName` = @Original_customerFirstName) AND (`customerLastName` = @O" +
                "riginal_customerLastName) AND (`pickUpAddress` = @Original_pickUpAddress) AND ((" +
                "@IsNull_dropOffAddress = 1 AND `dropOffAddress` IS NULL) OR (`dropOffAddress` = " +
                "@Original_dropOffAddress)) AND ((@IsNull_promoCode = 1 AND `promoCode` IS NULL) " +
                "OR (`promoCode` = @Original_promoCode)) AND (`requestedTime` = @Original_request" +
                "edTime) AND ((@IsNull_packageID = 1 AND `packageID` IS NULL) OR (`packageID` = @" +
                "Original_packageID)) AND (`callUpCharge` = @Original_callUpCharge) AND (`isUnmar" +
                "ked` = @Original_isUnmarked) AND (`isGuestCarrier` = @Original_isGuestCarrier) A" +
                "ND (`isAutoDispatch` = @Original_isAutoDispatch) AND ((@IsNull_requiredCabNo = 1" +
                " AND `requiredCabNo` IS NULL) OR (`requiredCabNo` = @Original_requiredCabNo)) AN" +
                "D (`outsidePickUp` = @Original_outsidePickUp) AND (`packageType` = @Original_pac" +
                "kageType) AND ((@IsNull_voucherNumber = 1 AND `voucherNumber` IS NULL) OR (`vouc" +
                "herNumber` = @Original_voucherNumber)) AND ((@IsNull_startTime = 1 AND `startTim" +
                "e` IS NULL) OR (`startTime` = @Original_startTime)) AND (`driverAcceptTime` = @O" +
                "riginal_driverAcceptTime) AND (`driverArriveTime` = @Original_driverArriveTime) " +
                "AND (`endTime` = @Original_endTime) AND (`paidTime` = @Original_paidTime) AND (`" +
                "distance` = @Original_distance) AND (`waitingTime` = @Original_waitingTime) AND " +
                "(`baseFare` = @Original_baseFare) AND (`distanceFare` = @Original_distanceFare) " +
                "AND (`waitingFare` = @Original_waitingFare) AND (`totalFare` = @Original_totalFa" +
                "re) AND (`discount` = @Original_discount) AND (`baseKm` = @Original_baseKm) AND " +
                "(`dispatchedTime` = @Original_dispatchedTime) AND (`driverAppVersion` = @Origina" +
                "l_driverAppVersion) AND (`maskedCard` = @Original_maskedCard) AND (`customPackag" +
                "e` = @Original_customPackage) AND (`package_detail` = @Original_package_detail) " +
                "AND (`corporatePaymentToken` = @Original_corporatePaymentToken) AND ((@IsNull_is" +
                "CheckedCorporate = 1 AND `isCheckedCorporate` IS NULL) OR (`isCheckedCorporate` " +
                "= @Original_isCheckedCorporate)) AND (`pickUpLat` = @Original_pickUpLat) AND (`p" +
                "ickUpLng` = @Original_pickUpLng) AND (`initialDropOffLat` = @Original_initialDro" +
                "pOffLat) AND (`initialDropOffLng` = @Original_initialDropOffLng) AND (`driverID`" +
                " = @Original_driverID) AND (`countryCode` = @Original_countryCode) AND (`contact" +
                "Number` = @Original_contactNumber) AND (`landmarks` = @Original_landmarks) AND (" +
                "`email` = @Original_email) AND (`customPackageBaseKm` = @Original_customPackageB" +
                "aseKm) AND (`customPackageRate` = @Original_customPackageRate) AND ((@IsNull_cus" +
                "tomPackageBaseRate = 1 AND `customPackageBaseRate` IS NULL) OR (`customPackageBa" +
                "seRate` = @Original_customPackageBaseRate)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@refID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "refID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cabNo";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "cabNo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@user_no";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "user_no";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@bookingType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bookingType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@status";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "status";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@type";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "type";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@vehicularType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "vehicularType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@paymentMethod";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "paymentMethod";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@customerFirstName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "customerFirstName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@customerLastName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "customerLastName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pickUpAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pickUpAddress";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dropOffAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dropOffAddress";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@promoCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "promoCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@requestedTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "requestedTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@packageID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "packageID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@callUpCharge";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "callUpCharge";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@isUnmarked";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "isUnmarked";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@isGuestCarrier";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "isGuestCarrier";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@isAutoDispatch";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "isAutoDispatch";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@requiredCabNo";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "requiredCabNo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@outsidePickUp";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "outsidePickUp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@packageType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "packageType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@voucherNumber";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "voucherNumber";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@startTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "startTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driverAcceptTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "driverAcceptTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driverArriveTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "driverArriveTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@endTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "endTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@paidTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "paidTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@distance";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "distance";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@waitingTime";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "waitingTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@baseFare";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "baseFare";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@distanceFare";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "distanceFare";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@waitingFare";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "waitingFare";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@totalFare";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "totalFare";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@discount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "discount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@baseKm";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "baseKm";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dispatchedTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dispatchedTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driverAppVersion";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driverAppVersion";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@maskedCard";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "maskedCard";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@customPackage";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "customPackage";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@package_detail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "package_detail";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@corporatePaymentToken";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "corporatePaymentToken";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@isCheckedCorporate";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "isCheckedCorporate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pickUpLat";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pickUpLat";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pickUpLng";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pickUpLng";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@initialDropOffLat";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "initialDropOffLat";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@initialDropOffLng";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "initialDropOffLng";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driverID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "driverID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@countryCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "countryCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@contactNumber";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "contactNumber";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@landmarks";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "landmarks";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@email";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@customPackageBaseKm";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "customPackageBaseKm";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@customPackageRate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "customPackageRate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@customPackageBaseRate";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "customPackageBaseRate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_refID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "refID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_cabNo";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "cabNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cabNo";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "cabNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_user_no";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "user_no";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_bookingType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bookingType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_status";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "status";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_type";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_vehicularType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "vehicularType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_paymentMethod";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "paymentMethod";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_customerFirstName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "customerFirstName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_customerLastName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "customerLastName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pickUpAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pickUpAddress";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_dropOffAddress";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dropOffAddress";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dropOffAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "dropOffAddress";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_promoCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "promoCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_promoCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "promoCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_requestedTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "requestedTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_packageID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "packageID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_packageID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "packageID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_callUpCharge";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "callUpCharge";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_isUnmarked";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "isUnmarked";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_isGuestCarrier";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "isGuestCarrier";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_isAutoDispatch";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "isAutoDispatch";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_requiredCabNo";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "requiredCabNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_requiredCabNo";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "requiredCabNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_outsidePickUp";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "outsidePickUp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_packageType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "packageType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_voucherNumber";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "voucherNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_voucherNumber";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "voucherNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_startTime";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "startTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_startTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "startTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driverAcceptTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "driverAcceptTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driverArriveTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "driverArriveTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_endTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "endTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_paidTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "paidTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_distance";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "distance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_waitingTime";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "waitingTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_baseFare";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "baseFare";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_distanceFare";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "distanceFare";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_waitingFare";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "waitingFare";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_totalFare";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "totalFare";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_discount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "discount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_baseKm";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "baseKm";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dispatchedTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "dispatchedTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driverAppVersion";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driverAppVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_maskedCard";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "maskedCard";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_customPackage";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "customPackage";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_package_detail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "package_detail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_corporatePaymentToken";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "corporatePaymentToken";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_isCheckedCorporate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "isCheckedCorporate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_isCheckedCorporate";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "isCheckedCorporate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pickUpLat";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pickUpLat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pickUpLng";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "pickUpLng";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_initialDropOffLat";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "initialDropOffLat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_initialDropOffLng";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "initialDropOffLng";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driverID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "driverID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_countryCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "countryCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_contactNumber";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "contactNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_landmarks";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "landmarks";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_email";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_customPackageBaseKm";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "customPackageBaseKm";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_customPackageRate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "customPackageRate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_customPackageBaseRate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "customPackageBaseRate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_customPackageBaseRate";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "customPackageBaseRate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.accounts_reportsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `refID`, `cabNo`, `userID`, `user_no`, `bookingType`, `status`, `type`, `vehicularType`, `paymentMethod`, `customerFirstName`, `customerLastName`, `pickUpAddress`, `dropOffAddress`, `promoCode`, `requestedTime`, `packageID`, `callUpCharge`, `isUnmarked`, `isGuestCarrier`, `isAutoDispatch`, `requiredCabNo`, `outsidePickUp`, `packageType`, `voucherNumber`, `startTime`, `driverAcceptTime`, `driverArriveTime`, `endTime`, `paidTime`, `distance`, `waitingTime`, `baseFare`, `distanceFare`, `waitingFare`, `totalFare`, `discount`, `baseKm`, `dispatchedTime`, `driverAppVersion`, `maskedCard`, `customPackage`, `package_detail`, `corporatePaymentToken`, `isCheckedCorporate`, `pickUpLat`, `pickUpLng`, `initialDropOffLat`, `initialDropOffLng`, `driverID`, `countryCode`, `contactNumber`, `landmarks`, `email`, `customPackageBaseKm`, `customPackageRate`, `customPackageBaseRate` FROM `bookings`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(accounts_reportsDataSet.bookingsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual accounts_reportsDataSet.bookingsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            accounts_reportsDataSet.bookingsDataTable dataTable = new accounts_reportsDataSet.bookingsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet.bookingsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "bookings");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_refID, 
                    string Original_cabNo, 
                    string Original_userID, 
                    string Original_user_no, 
                    string Original_bookingType, 
                    string Original_status, 
                    string Original_type, 
                    string Original_vehicularType, 
                    string Original_paymentMethod, 
                    string Original_customerFirstName, 
                    string Original_customerLastName, 
                    string Original_pickUpAddress, 
                    string Original_dropOffAddress, 
                    string Original_promoCode, 
                    System.DateTime Original_requestedTime, 
                    string Original_packageID, 
                    double Original_callUpCharge, 
                    byte Original_isUnmarked, 
                    byte Original_isGuestCarrier, 
                    byte Original_isAutoDispatch, 
                    string Original_requiredCabNo, 
                    byte Original_outsidePickUp, 
                    string Original_packageType, 
                    string Original_voucherNumber, 
                    global::System.Nullable<global::System.DateTime> Original_startTime, 
                    System.DateTime Original_driverAcceptTime, 
                    System.DateTime Original_driverArriveTime, 
                    System.DateTime Original_endTime, 
                    System.DateTime Original_paidTime, 
                    double Original_distance, 
                    double Original_waitingTime, 
                    double Original_baseFare, 
                    double Original_distanceFare, 
                    double Original_waitingFare, 
                    double Original_totalFare, 
                    double Original_discount, 
                    int Original_baseKm, 
                    System.DateTime Original_dispatchedTime, 
                    string Original_driverAppVersion, 
                    string Original_maskedCard, 
                    string Original_customPackage, 
                    string Original_package_detail, 
                    string Original_corporatePaymentToken, 
                    global::System.Nullable<ulong> Original_isCheckedCorporate, 
                    double Original_pickUpLat, 
                    double Original_pickUpLng, 
                    double Original_initialDropOffLat, 
                    double Original_initialDropOffLng, 
                    int Original_driverID, 
                    string Original_countryCode, 
                    string Original_contactNumber, 
                    string Original_landmarks, 
                    string Original_email, 
                    int Original_customPackageBaseKm, 
                    int Original_customPackageRate, 
                    string Original_customPackageBaseRate) {
            if ((Original_refID == null)) {
                throw new global::System.ArgumentNullException("Original_refID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_refID));
            }
            if ((Original_cabNo == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_cabNo));
            }
            if ((Original_userID == null)) {
                throw new global::System.ArgumentNullException("Original_userID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_userID));
            }
            if ((Original_user_no == null)) {
                throw new global::System.ArgumentNullException("Original_user_no");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_user_no));
            }
            if ((Original_bookingType == null)) {
                throw new global::System.ArgumentNullException("Original_bookingType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_bookingType));
            }
            if ((Original_status == null)) {
                throw new global::System.ArgumentNullException("Original_status");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_status));
            }
            if ((Original_type == null)) {
                throw new global::System.ArgumentNullException("Original_type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_type));
            }
            if ((Original_vehicularType == null)) {
                throw new global::System.ArgumentNullException("Original_vehicularType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_vehicularType));
            }
            if ((Original_paymentMethod == null)) {
                throw new global::System.ArgumentNullException("Original_paymentMethod");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_paymentMethod));
            }
            if ((Original_customerFirstName == null)) {
                throw new global::System.ArgumentNullException("Original_customerFirstName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_customerFirstName));
            }
            if ((Original_customerLastName == null)) {
                throw new global::System.ArgumentNullException("Original_customerLastName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_customerLastName));
            }
            if ((Original_pickUpAddress == null)) {
                throw new global::System.ArgumentNullException("Original_pickUpAddress");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_pickUpAddress));
            }
            if ((Original_dropOffAddress == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_dropOffAddress));
            }
            if ((Original_promoCode == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_promoCode));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_requestedTime));
            if ((Original_packageID == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_packageID));
            }
            this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_callUpCharge));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((byte)(Original_isUnmarked));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((byte)(Original_isGuestCarrier));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((byte)(Original_isAutoDispatch));
            if ((Original_requiredCabNo == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_requiredCabNo));
            }
            this.Adapter.DeleteCommand.Parameters[26].Value = ((byte)(Original_outsidePickUp));
            if ((Original_packageType == null)) {
                throw new global::System.ArgumentNullException("Original_packageType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_packageType));
            }
            if ((Original_voucherNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_voucherNumber));
            }
            if ((Original_startTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((System.DateTime)(Original_startTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[32].Value = ((System.DateTime)(Original_driverAcceptTime));
            this.Adapter.DeleteCommand.Parameters[33].Value = ((System.DateTime)(Original_driverArriveTime));
            this.Adapter.DeleteCommand.Parameters[34].Value = ((System.DateTime)(Original_endTime));
            this.Adapter.DeleteCommand.Parameters[35].Value = ((System.DateTime)(Original_paidTime));
            this.Adapter.DeleteCommand.Parameters[36].Value = ((double)(Original_distance));
            this.Adapter.DeleteCommand.Parameters[37].Value = ((double)(Original_waitingTime));
            this.Adapter.DeleteCommand.Parameters[38].Value = ((double)(Original_baseFare));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((double)(Original_distanceFare));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((double)(Original_waitingFare));
            this.Adapter.DeleteCommand.Parameters[41].Value = ((double)(Original_totalFare));
            this.Adapter.DeleteCommand.Parameters[42].Value = ((double)(Original_discount));
            this.Adapter.DeleteCommand.Parameters[43].Value = ((int)(Original_baseKm));
            this.Adapter.DeleteCommand.Parameters[44].Value = ((System.DateTime)(Original_dispatchedTime));
            if ((Original_driverAppVersion == null)) {
                throw new global::System.ArgumentNullException("Original_driverAppVersion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_driverAppVersion));
            }
            if ((Original_maskedCard == null)) {
                throw new global::System.ArgumentNullException("Original_maskedCard");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_maskedCard));
            }
            if ((Original_customPackage == null)) {
                throw new global::System.ArgumentNullException("Original_customPackage");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_customPackage));
            }
            if ((Original_package_detail == null)) {
                throw new global::System.ArgumentNullException("Original_package_detail");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_package_detail));
            }
            if ((Original_corporatePaymentToken == null)) {
                throw new global::System.ArgumentNullException("Original_corporatePaymentToken");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_corporatePaymentToken));
            }
            if ((Original_isCheckedCorporate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((ulong)(Original_isCheckedCorporate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[52].Value = ((double)(Original_pickUpLat));
            this.Adapter.DeleteCommand.Parameters[53].Value = ((double)(Original_pickUpLng));
            this.Adapter.DeleteCommand.Parameters[54].Value = ((double)(Original_initialDropOffLat));
            this.Adapter.DeleteCommand.Parameters[55].Value = ((double)(Original_initialDropOffLng));
            this.Adapter.DeleteCommand.Parameters[56].Value = ((int)(Original_driverID));
            if ((Original_countryCode == null)) {
                throw new global::System.ArgumentNullException("Original_countryCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((string)(Original_countryCode));
            }
            if ((Original_contactNumber == null)) {
                throw new global::System.ArgumentNullException("Original_contactNumber");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_contactNumber));
            }
            if ((Original_landmarks == null)) {
                throw new global::System.ArgumentNullException("Original_landmarks");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_landmarks));
            }
            if ((Original_email == null)) {
                throw new global::System.ArgumentNullException("Original_email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_email));
            }
            this.Adapter.DeleteCommand.Parameters[61].Value = ((int)(Original_customPackageBaseKm));
            this.Adapter.DeleteCommand.Parameters[62].Value = ((int)(Original_customPackageRate));
            if ((Original_customPackageBaseRate == null)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_customPackageBaseRate));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string refID, 
                    string cabNo, 
                    string userID, 
                    string user_no, 
                    string bookingType, 
                    string status, 
                    string type, 
                    string vehicularType, 
                    string paymentMethod, 
                    string customerFirstName, 
                    string customerLastName, 
                    string pickUpAddress, 
                    string dropOffAddress, 
                    string promoCode, 
                    System.DateTime requestedTime, 
                    string packageID, 
                    double callUpCharge, 
                    byte isUnmarked, 
                    byte isGuestCarrier, 
                    byte isAutoDispatch, 
                    string requiredCabNo, 
                    byte outsidePickUp, 
                    string packageType, 
                    string voucherNumber, 
                    global::System.Nullable<global::System.DateTime> startTime, 
                    System.DateTime driverAcceptTime, 
                    System.DateTime driverArriveTime, 
                    System.DateTime endTime, 
                    System.DateTime paidTime, 
                    double distance, 
                    double waitingTime, 
                    double baseFare, 
                    double distanceFare, 
                    double waitingFare, 
                    double totalFare, 
                    double discount, 
                    int baseKm, 
                    System.DateTime dispatchedTime, 
                    string driverAppVersion, 
                    string maskedCard, 
                    string customPackage, 
                    string package_detail, 
                    string corporatePaymentToken, 
                    global::System.Nullable<ulong> isCheckedCorporate, 
                    double pickUpLat, 
                    double pickUpLng, 
                    double initialDropOffLat, 
                    double initialDropOffLng, 
                    int driverID, 
                    string countryCode, 
                    string contactNumber, 
                    string landmarks, 
                    string email, 
                    int customPackageBaseKm, 
                    int customPackageRate, 
                    string customPackageBaseRate) {
            if ((refID == null)) {
                throw new global::System.ArgumentNullException("refID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(refID));
            }
            if ((cabNo == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(cabNo));
            }
            if ((userID == null)) {
                throw new global::System.ArgumentNullException("userID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(userID));
            }
            if ((user_no == null)) {
                throw new global::System.ArgumentNullException("user_no");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(user_no));
            }
            if ((bookingType == null)) {
                throw new global::System.ArgumentNullException("bookingType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(bookingType));
            }
            if ((status == null)) {
                throw new global::System.ArgumentNullException("status");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(status));
            }
            if ((type == null)) {
                throw new global::System.ArgumentNullException("type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(type));
            }
            if ((vehicularType == null)) {
                throw new global::System.ArgumentNullException("vehicularType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(vehicularType));
            }
            if ((paymentMethod == null)) {
                throw new global::System.ArgumentNullException("paymentMethod");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(paymentMethod));
            }
            if ((customerFirstName == null)) {
                throw new global::System.ArgumentNullException("customerFirstName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(customerFirstName));
            }
            if ((customerLastName == null)) {
                throw new global::System.ArgumentNullException("customerLastName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(customerLastName));
            }
            if ((pickUpAddress == null)) {
                throw new global::System.ArgumentNullException("pickUpAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(pickUpAddress));
            }
            if ((dropOffAddress == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(dropOffAddress));
            }
            if ((promoCode == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(promoCode));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(requestedTime));
            if ((packageID == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(packageID));
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((double)(callUpCharge));
            this.Adapter.InsertCommand.Parameters[17].Value = ((byte)(isUnmarked));
            this.Adapter.InsertCommand.Parameters[18].Value = ((byte)(isGuestCarrier));
            this.Adapter.InsertCommand.Parameters[19].Value = ((byte)(isAutoDispatch));
            if ((requiredCabNo == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(requiredCabNo));
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((byte)(outsidePickUp));
            if ((packageType == null)) {
                throw new global::System.ArgumentNullException("packageType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(packageType));
            }
            if ((voucherNumber == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(voucherNumber));
            }
            if ((startTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((System.DateTime)(startTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(driverAcceptTime));
            this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(driverArriveTime));
            this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(endTime));
            this.Adapter.InsertCommand.Parameters[28].Value = ((System.DateTime)(paidTime));
            this.Adapter.InsertCommand.Parameters[29].Value = ((double)(distance));
            this.Adapter.InsertCommand.Parameters[30].Value = ((double)(waitingTime));
            this.Adapter.InsertCommand.Parameters[31].Value = ((double)(baseFare));
            this.Adapter.InsertCommand.Parameters[32].Value = ((double)(distanceFare));
            this.Adapter.InsertCommand.Parameters[33].Value = ((double)(waitingFare));
            this.Adapter.InsertCommand.Parameters[34].Value = ((double)(totalFare));
            this.Adapter.InsertCommand.Parameters[35].Value = ((double)(discount));
            this.Adapter.InsertCommand.Parameters[36].Value = ((int)(baseKm));
            this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(dispatchedTime));
            if ((driverAppVersion == null)) {
                throw new global::System.ArgumentNullException("driverAppVersion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(driverAppVersion));
            }
            if ((maskedCard == null)) {
                throw new global::System.ArgumentNullException("maskedCard");
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(maskedCard));
            }
            if ((customPackage == null)) {
                throw new global::System.ArgumentNullException("customPackage");
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(customPackage));
            }
            if ((package_detail == null)) {
                throw new global::System.ArgumentNullException("package_detail");
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(package_detail));
            }
            if ((corporatePaymentToken == null)) {
                throw new global::System.ArgumentNullException("corporatePaymentToken");
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(corporatePaymentToken));
            }
            if ((isCheckedCorporate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((ulong)(isCheckedCorporate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[44].Value = ((double)(pickUpLat));
            this.Adapter.InsertCommand.Parameters[45].Value = ((double)(pickUpLng));
            this.Adapter.InsertCommand.Parameters[46].Value = ((double)(initialDropOffLat));
            this.Adapter.InsertCommand.Parameters[47].Value = ((double)(initialDropOffLng));
            this.Adapter.InsertCommand.Parameters[48].Value = ((int)(driverID));
            if ((countryCode == null)) {
                throw new global::System.ArgumentNullException("countryCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(countryCode));
            }
            if ((contactNumber == null)) {
                throw new global::System.ArgumentNullException("contactNumber");
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(contactNumber));
            }
            if ((landmarks == null)) {
                throw new global::System.ArgumentNullException("landmarks");
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(landmarks));
            }
            if ((email == null)) {
                throw new global::System.ArgumentNullException("email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(email));
            }
            this.Adapter.InsertCommand.Parameters[53].Value = ((int)(customPackageBaseKm));
            this.Adapter.InsertCommand.Parameters[54].Value = ((int)(customPackageRate));
            if ((customPackageBaseRate == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(customPackageBaseRate));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string refID, 
                    string cabNo, 
                    string userID, 
                    string user_no, 
                    string bookingType, 
                    string status, 
                    string type, 
                    string vehicularType, 
                    string paymentMethod, 
                    string customerFirstName, 
                    string customerLastName, 
                    string pickUpAddress, 
                    string dropOffAddress, 
                    string promoCode, 
                    System.DateTime requestedTime, 
                    string packageID, 
                    double callUpCharge, 
                    byte isUnmarked, 
                    byte isGuestCarrier, 
                    byte isAutoDispatch, 
                    string requiredCabNo, 
                    byte outsidePickUp, 
                    string packageType, 
                    string voucherNumber, 
                    global::System.Nullable<global::System.DateTime> startTime, 
                    System.DateTime driverAcceptTime, 
                    System.DateTime driverArriveTime, 
                    System.DateTime endTime, 
                    System.DateTime paidTime, 
                    double distance, 
                    double waitingTime, 
                    double baseFare, 
                    double distanceFare, 
                    double waitingFare, 
                    double totalFare, 
                    double discount, 
                    int baseKm, 
                    System.DateTime dispatchedTime, 
                    string driverAppVersion, 
                    string maskedCard, 
                    string customPackage, 
                    string package_detail, 
                    string corporatePaymentToken, 
                    global::System.Nullable<ulong> isCheckedCorporate, 
                    double pickUpLat, 
                    double pickUpLng, 
                    double initialDropOffLat, 
                    double initialDropOffLng, 
                    int driverID, 
                    string countryCode, 
                    string contactNumber, 
                    string landmarks, 
                    string email, 
                    int customPackageBaseKm, 
                    int customPackageRate, 
                    string customPackageBaseRate, 
                    string Original_refID, 
                    string Original_cabNo, 
                    string Original_userID, 
                    string Original_user_no, 
                    string Original_bookingType, 
                    string Original_status, 
                    string Original_type, 
                    string Original_vehicularType, 
                    string Original_paymentMethod, 
                    string Original_customerFirstName, 
                    string Original_customerLastName, 
                    string Original_pickUpAddress, 
                    string Original_dropOffAddress, 
                    string Original_promoCode, 
                    System.DateTime Original_requestedTime, 
                    string Original_packageID, 
                    double Original_callUpCharge, 
                    byte Original_isUnmarked, 
                    byte Original_isGuestCarrier, 
                    byte Original_isAutoDispatch, 
                    string Original_requiredCabNo, 
                    byte Original_outsidePickUp, 
                    string Original_packageType, 
                    string Original_voucherNumber, 
                    global::System.Nullable<global::System.DateTime> Original_startTime, 
                    System.DateTime Original_driverAcceptTime, 
                    System.DateTime Original_driverArriveTime, 
                    System.DateTime Original_endTime, 
                    System.DateTime Original_paidTime, 
                    double Original_distance, 
                    double Original_waitingTime, 
                    double Original_baseFare, 
                    double Original_distanceFare, 
                    double Original_waitingFare, 
                    double Original_totalFare, 
                    double Original_discount, 
                    int Original_baseKm, 
                    System.DateTime Original_dispatchedTime, 
                    string Original_driverAppVersion, 
                    string Original_maskedCard, 
                    string Original_customPackage, 
                    string Original_package_detail, 
                    string Original_corporatePaymentToken, 
                    global::System.Nullable<ulong> Original_isCheckedCorporate, 
                    double Original_pickUpLat, 
                    double Original_pickUpLng, 
                    double Original_initialDropOffLat, 
                    double Original_initialDropOffLng, 
                    int Original_driverID, 
                    string Original_countryCode, 
                    string Original_contactNumber, 
                    string Original_landmarks, 
                    string Original_email, 
                    int Original_customPackageBaseKm, 
                    int Original_customPackageRate, 
                    string Original_customPackageBaseRate) {
            if ((refID == null)) {
                throw new global::System.ArgumentNullException("refID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(refID));
            }
            if ((cabNo == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(cabNo));
            }
            if ((userID == null)) {
                throw new global::System.ArgumentNullException("userID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(userID));
            }
            if ((user_no == null)) {
                throw new global::System.ArgumentNullException("user_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(user_no));
            }
            if ((bookingType == null)) {
                throw new global::System.ArgumentNullException("bookingType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(bookingType));
            }
            if ((status == null)) {
                throw new global::System.ArgumentNullException("status");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(status));
            }
            if ((type == null)) {
                throw new global::System.ArgumentNullException("type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(type));
            }
            if ((vehicularType == null)) {
                throw new global::System.ArgumentNullException("vehicularType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(vehicularType));
            }
            if ((paymentMethod == null)) {
                throw new global::System.ArgumentNullException("paymentMethod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(paymentMethod));
            }
            if ((customerFirstName == null)) {
                throw new global::System.ArgumentNullException("customerFirstName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(customerFirstName));
            }
            if ((customerLastName == null)) {
                throw new global::System.ArgumentNullException("customerLastName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(customerLastName));
            }
            if ((pickUpAddress == null)) {
                throw new global::System.ArgumentNullException("pickUpAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(pickUpAddress));
            }
            if ((dropOffAddress == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(dropOffAddress));
            }
            if ((promoCode == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(promoCode));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(requestedTime));
            if ((packageID == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(packageID));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(callUpCharge));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((byte)(isUnmarked));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((byte)(isGuestCarrier));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((byte)(isAutoDispatch));
            if ((requiredCabNo == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(requiredCabNo));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((byte)(outsidePickUp));
            if ((packageType == null)) {
                throw new global::System.ArgumentNullException("packageType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(packageType));
            }
            if ((voucherNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(voucherNumber));
            }
            if ((startTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(startTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(driverAcceptTime));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(driverArriveTime));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(endTime));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(paidTime));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(distance));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(waitingTime));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(baseFare));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(distanceFare));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(waitingFare));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(totalFare));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(discount));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(baseKm));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(dispatchedTime));
            if ((driverAppVersion == null)) {
                throw new global::System.ArgumentNullException("driverAppVersion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(driverAppVersion));
            }
            if ((maskedCard == null)) {
                throw new global::System.ArgumentNullException("maskedCard");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(maskedCard));
            }
            if ((customPackage == null)) {
                throw new global::System.ArgumentNullException("customPackage");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(customPackage));
            }
            if ((package_detail == null)) {
                throw new global::System.ArgumentNullException("package_detail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(package_detail));
            }
            if ((corporatePaymentToken == null)) {
                throw new global::System.ArgumentNullException("corporatePaymentToken");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(corporatePaymentToken));
            }
            if ((isCheckedCorporate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((ulong)(isCheckedCorporate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((double)(pickUpLat));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(pickUpLng));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(initialDropOffLat));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((double)(initialDropOffLng));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(driverID));
            if ((countryCode == null)) {
                throw new global::System.ArgumentNullException("countryCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(countryCode));
            }
            if ((contactNumber == null)) {
                throw new global::System.ArgumentNullException("contactNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(contactNumber));
            }
            if ((landmarks == null)) {
                throw new global::System.ArgumentNullException("landmarks");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(landmarks));
            }
            if ((email == null)) {
                throw new global::System.ArgumentNullException("email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(email));
            }
            this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(customPackageBaseKm));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(customPackageRate));
            if ((customPackageBaseRate == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(customPackageBaseRate));
            }
            if ((Original_refID == null)) {
                throw new global::System.ArgumentNullException("Original_refID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_refID));
            }
            if ((Original_cabNo == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_cabNo));
            }
            if ((Original_userID == null)) {
                throw new global::System.ArgumentNullException("Original_userID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_userID));
            }
            if ((Original_user_no == null)) {
                throw new global::System.ArgumentNullException("Original_user_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_user_no));
            }
            if ((Original_bookingType == null)) {
                throw new global::System.ArgumentNullException("Original_bookingType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_bookingType));
            }
            if ((Original_status == null)) {
                throw new global::System.ArgumentNullException("Original_status");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_status));
            }
            if ((Original_type == null)) {
                throw new global::System.ArgumentNullException("Original_type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_type));
            }
            if ((Original_vehicularType == null)) {
                throw new global::System.ArgumentNullException("Original_vehicularType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_vehicularType));
            }
            if ((Original_paymentMethod == null)) {
                throw new global::System.ArgumentNullException("Original_paymentMethod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_paymentMethod));
            }
            if ((Original_customerFirstName == null)) {
                throw new global::System.ArgumentNullException("Original_customerFirstName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_customerFirstName));
            }
            if ((Original_customerLastName == null)) {
                throw new global::System.ArgumentNullException("Original_customerLastName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_customerLastName));
            }
            if ((Original_pickUpAddress == null)) {
                throw new global::System.ArgumentNullException("Original_pickUpAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_pickUpAddress));
            }
            if ((Original_dropOffAddress == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_dropOffAddress));
            }
            if ((Original_promoCode == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_promoCode));
            }
            this.Adapter.UpdateCommand.Parameters[73].Value = ((System.DateTime)(Original_requestedTime));
            if ((Original_packageID == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_packageID));
            }
            this.Adapter.UpdateCommand.Parameters[76].Value = ((double)(Original_callUpCharge));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((byte)(Original_isUnmarked));
            this.Adapter.UpdateCommand.Parameters[78].Value = ((byte)(Original_isGuestCarrier));
            this.Adapter.UpdateCommand.Parameters[79].Value = ((byte)(Original_isAutoDispatch));
            if ((Original_requiredCabNo == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_requiredCabNo));
            }
            this.Adapter.UpdateCommand.Parameters[82].Value = ((byte)(Original_outsidePickUp));
            if ((Original_packageType == null)) {
                throw new global::System.ArgumentNullException("Original_packageType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_packageType));
            }
            if ((Original_voucherNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_voucherNumber));
            }
            if ((Original_startTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((System.DateTime)(Original_startTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[88].Value = ((System.DateTime)(Original_driverAcceptTime));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((System.DateTime)(Original_driverArriveTime));
            this.Adapter.UpdateCommand.Parameters[90].Value = ((System.DateTime)(Original_endTime));
            this.Adapter.UpdateCommand.Parameters[91].Value = ((System.DateTime)(Original_paidTime));
            this.Adapter.UpdateCommand.Parameters[92].Value = ((double)(Original_distance));
            this.Adapter.UpdateCommand.Parameters[93].Value = ((double)(Original_waitingTime));
            this.Adapter.UpdateCommand.Parameters[94].Value = ((double)(Original_baseFare));
            this.Adapter.UpdateCommand.Parameters[95].Value = ((double)(Original_distanceFare));
            this.Adapter.UpdateCommand.Parameters[96].Value = ((double)(Original_waitingFare));
            this.Adapter.UpdateCommand.Parameters[97].Value = ((double)(Original_totalFare));
            this.Adapter.UpdateCommand.Parameters[98].Value = ((double)(Original_discount));
            this.Adapter.UpdateCommand.Parameters[99].Value = ((int)(Original_baseKm));
            this.Adapter.UpdateCommand.Parameters[100].Value = ((System.DateTime)(Original_dispatchedTime));
            if ((Original_driverAppVersion == null)) {
                throw new global::System.ArgumentNullException("Original_driverAppVersion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_driverAppVersion));
            }
            if ((Original_maskedCard == null)) {
                throw new global::System.ArgumentNullException("Original_maskedCard");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(Original_maskedCard));
            }
            if ((Original_customPackage == null)) {
                throw new global::System.ArgumentNullException("Original_customPackage");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Original_customPackage));
            }
            if ((Original_package_detail == null)) {
                throw new global::System.ArgumentNullException("Original_package_detail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_package_detail));
            }
            if ((Original_corporatePaymentToken == null)) {
                throw new global::System.ArgumentNullException("Original_corporatePaymentToken");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_corporatePaymentToken));
            }
            if ((Original_isCheckedCorporate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((ulong)(Original_isCheckedCorporate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[108].Value = ((double)(Original_pickUpLat));
            this.Adapter.UpdateCommand.Parameters[109].Value = ((double)(Original_pickUpLng));
            this.Adapter.UpdateCommand.Parameters[110].Value = ((double)(Original_initialDropOffLat));
            this.Adapter.UpdateCommand.Parameters[111].Value = ((double)(Original_initialDropOffLng));
            this.Adapter.UpdateCommand.Parameters[112].Value = ((int)(Original_driverID));
            if ((Original_countryCode == null)) {
                throw new global::System.ArgumentNullException("Original_countryCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((string)(Original_countryCode));
            }
            if ((Original_contactNumber == null)) {
                throw new global::System.ArgumentNullException("Original_contactNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((string)(Original_contactNumber));
            }
            if ((Original_landmarks == null)) {
                throw new global::System.ArgumentNullException("Original_landmarks");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(Original_landmarks));
            }
            if ((Original_email == null)) {
                throw new global::System.ArgumentNullException("Original_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((string)(Original_email));
            }
            this.Adapter.UpdateCommand.Parameters[117].Value = ((int)(Original_customPackageBaseKm));
            this.Adapter.UpdateCommand.Parameters[118].Value = ((int)(Original_customPackageRate));
            if ((Original_customPackageBaseRate == null)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((string)(Original_customPackageBaseRate));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string cabNo, 
                    string userID, 
                    string user_no, 
                    string bookingType, 
                    string status, 
                    string type, 
                    string vehicularType, 
                    string paymentMethod, 
                    string customerFirstName, 
                    string customerLastName, 
                    string pickUpAddress, 
                    string dropOffAddress, 
                    string promoCode, 
                    System.DateTime requestedTime, 
                    string packageID, 
                    double callUpCharge, 
                    byte isUnmarked, 
                    byte isGuestCarrier, 
                    byte isAutoDispatch, 
                    string requiredCabNo, 
                    byte outsidePickUp, 
                    string packageType, 
                    string voucherNumber, 
                    global::System.Nullable<global::System.DateTime> startTime, 
                    System.DateTime driverAcceptTime, 
                    System.DateTime driverArriveTime, 
                    System.DateTime endTime, 
                    System.DateTime paidTime, 
                    double distance, 
                    double waitingTime, 
                    double baseFare, 
                    double distanceFare, 
                    double waitingFare, 
                    double totalFare, 
                    double discount, 
                    int baseKm, 
                    System.DateTime dispatchedTime, 
                    string driverAppVersion, 
                    string maskedCard, 
                    string customPackage, 
                    string package_detail, 
                    string corporatePaymentToken, 
                    global::System.Nullable<ulong> isCheckedCorporate, 
                    double pickUpLat, 
                    double pickUpLng, 
                    double initialDropOffLat, 
                    double initialDropOffLng, 
                    int driverID, 
                    string countryCode, 
                    string contactNumber, 
                    string landmarks, 
                    string email, 
                    int customPackageBaseKm, 
                    int customPackageRate, 
                    string customPackageBaseRate, 
                    string Original_refID, 
                    string Original_cabNo, 
                    string Original_userID, 
                    string Original_user_no, 
                    string Original_bookingType, 
                    string Original_status, 
                    string Original_type, 
                    string Original_vehicularType, 
                    string Original_paymentMethod, 
                    string Original_customerFirstName, 
                    string Original_customerLastName, 
                    string Original_pickUpAddress, 
                    string Original_dropOffAddress, 
                    string Original_promoCode, 
                    System.DateTime Original_requestedTime, 
                    string Original_packageID, 
                    double Original_callUpCharge, 
                    byte Original_isUnmarked, 
                    byte Original_isGuestCarrier, 
                    byte Original_isAutoDispatch, 
                    string Original_requiredCabNo, 
                    byte Original_outsidePickUp, 
                    string Original_packageType, 
                    string Original_voucherNumber, 
                    global::System.Nullable<global::System.DateTime> Original_startTime, 
                    System.DateTime Original_driverAcceptTime, 
                    System.DateTime Original_driverArriveTime, 
                    System.DateTime Original_endTime, 
                    System.DateTime Original_paidTime, 
                    double Original_distance, 
                    double Original_waitingTime, 
                    double Original_baseFare, 
                    double Original_distanceFare, 
                    double Original_waitingFare, 
                    double Original_totalFare, 
                    double Original_discount, 
                    int Original_baseKm, 
                    System.DateTime Original_dispatchedTime, 
                    string Original_driverAppVersion, 
                    string Original_maskedCard, 
                    string Original_customPackage, 
                    string Original_package_detail, 
                    string Original_corporatePaymentToken, 
                    global::System.Nullable<ulong> Original_isCheckedCorporate, 
                    double Original_pickUpLat, 
                    double Original_pickUpLng, 
                    double Original_initialDropOffLat, 
                    double Original_initialDropOffLng, 
                    int Original_driverID, 
                    string Original_countryCode, 
                    string Original_contactNumber, 
                    string Original_landmarks, 
                    string Original_email, 
                    int Original_customPackageBaseKm, 
                    int Original_customPackageRate, 
                    string Original_customPackageBaseRate) {
            return this.Update(Original_refID, cabNo, userID, user_no, bookingType, status, type, vehicularType, paymentMethod, customerFirstName, customerLastName, pickUpAddress, dropOffAddress, promoCode, requestedTime, packageID, callUpCharge, isUnmarked, isGuestCarrier, isAutoDispatch, requiredCabNo, outsidePickUp, packageType, voucherNumber, startTime, driverAcceptTime, driverArriveTime, endTime, paidTime, distance, waitingTime, baseFare, distanceFare, waitingFare, totalFare, discount, baseKm, dispatchedTime, driverAppVersion, maskedCard, customPackage, package_detail, corporatePaymentToken, isCheckedCorporate, pickUpLat, pickUpLng, initialDropOffLat, initialDropOffLng, driverID, countryCode, contactNumber, landmarks, email, customPackageBaseKm, customPackageRate, customPackageBaseRate, Original_refID, Original_cabNo, Original_userID, Original_user_no, Original_bookingType, Original_status, Original_type, Original_vehicularType, Original_paymentMethod, Original_customerFirstName, Original_customerLastName, Original_pickUpAddress, Original_dropOffAddress, Original_promoCode, Original_requestedTime, Original_packageID, Original_callUpCharge, Original_isUnmarked, Original_isGuestCarrier, Original_isAutoDispatch, Original_requiredCabNo, Original_outsidePickUp, Original_packageType, Original_voucherNumber, Original_startTime, Original_driverAcceptTime, Original_driverArriveTime, Original_endTime, Original_paidTime, Original_distance, Original_waitingTime, Original_baseFare, Original_distanceFare, Original_waitingFare, Original_totalFare, Original_discount, Original_baseKm, Original_dispatchedTime, Original_driverAppVersion, Original_maskedCard, Original_customPackage, Original_package_detail, Original_corporatePaymentToken, Original_isCheckedCorporate, Original_pickUpLat, Original_pickUpLng, Original_initialDropOffLat, Original_initialDropOffLng, Original_driverID, Original_countryCode, Original_contactNumber, Original_landmarks, Original_email, Original_customPackageBaseKm, Original_customPackageRate, Original_customPackageBaseRate);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class cashier_cashTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public cashier_cashTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "cashier_cash";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("cashier", "cashier");
            tableMapping.ColumnMappings.Add("amount", "amount");
            tableMapping.ColumnMappings.Add("logdate", "logdate");
            tableMapping.ColumnMappings.Add("date", "date");
            tableMapping.ColumnMappings.Add("enter_by", "enter_by");
            tableMapping.ColumnMappings.Add("dipartment", "dipartment");
            tableMapping.ColumnMappings.Add("status", "status");
            tableMapping.ColumnMappings.Add("non_active", "non_active");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `cashier_cash` WHERE ((`id` = @Original_id) AND (`cashier` = @Original_cashier) AND (`amount` = @Original_amount) AND (`logdate` = @Original_logdate) AND (`date` = @Original_date) AND (`enter_by` = @Original_enter_by) AND (`dipartment` = @Original_dipartment) AND (`status` = @Original_status) AND (`non_active` = @Original_non_active))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cashier";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cashier";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logdate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "logdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_enter_by";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "enter_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dipartment";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "dipartment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_status";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "status";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_non_active";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "non_active";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `cashier_cash` (`cashier`, `amount`, `logdate`, `date`, `enter_by`, `" +
                "dipartment`, `status`, `non_active`) VALUES (@cashier, @amount, @logdate, @date," +
                " @enter_by, @dipartment, @status, @non_active)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cashier";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cashier";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logdate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "logdate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@enter_by";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "enter_by";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dipartment";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "dipartment";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@status";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "status";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@non_active";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "non_active";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `cashier_cash` SET `cashier` = @cashier, `amount` = @amount, `logdate` = @logdate, `date` = @date, `enter_by` = @enter_by, `dipartment` = @dipartment, `status` = @status, `non_active` = @non_active WHERE ((`id` = @Original_id) AND (`cashier` = @Original_cashier) AND (`amount` = @Original_amount) AND (`logdate` = @Original_logdate) AND (`date` = @Original_date) AND (`enter_by` = @Original_enter_by) AND (`dipartment` = @Original_dipartment) AND (`status` = @Original_status) AND (`non_active` = @Original_non_active))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cashier";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cashier";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logdate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "logdate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@enter_by";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "enter_by";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dipartment";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "dipartment";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@status";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "status";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@non_active";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "non_active";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cashier";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cashier";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logdate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "logdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_enter_by";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "enter_by";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_dipartment";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "dipartment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_status";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "status";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_non_active";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "non_active";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.accounts_reportsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `id`, `cashier`, `amount`, `logdate`, `date`, `enter_by`, `dipartment`, `s" +
                "tatus`, `non_active` FROM `cashier_cash`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(accounts_reportsDataSet.cashier_cashDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual accounts_reportsDataSet.cashier_cashDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            accounts_reportsDataSet.cashier_cashDataTable dataTable = new accounts_reportsDataSet.cashier_cashDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet.cashier_cashDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "cashier_cash");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_cashier, double Original_amount, System.DateTime Original_logdate, System.DateTime Original_date, string Original_enter_by, string Original_dipartment, string Original_status, string Original_non_active) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_cashier == null)) {
                throw new global::System.ArgumentNullException("Original_cashier");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_cashier));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_amount));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_logdate));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_date));
            if ((Original_enter_by == null)) {
                throw new global::System.ArgumentNullException("Original_enter_by");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_enter_by));
            }
            if ((Original_dipartment == null)) {
                throw new global::System.ArgumentNullException("Original_dipartment");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_dipartment));
            }
            if ((Original_status == null)) {
                throw new global::System.ArgumentNullException("Original_status");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_status));
            }
            if ((Original_non_active == null)) {
                throw new global::System.ArgumentNullException("Original_non_active");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_non_active));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string cashier, double amount, System.DateTime logdate, System.DateTime date, string enter_by, string dipartment, string status, string non_active) {
            if ((cashier == null)) {
                throw new global::System.ArgumentNullException("cashier");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(cashier));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((double)(amount));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(logdate));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(date));
            if ((enter_by == null)) {
                throw new global::System.ArgumentNullException("enter_by");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(enter_by));
            }
            if ((dipartment == null)) {
                throw new global::System.ArgumentNullException("dipartment");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(dipartment));
            }
            if ((status == null)) {
                throw new global::System.ArgumentNullException("status");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(status));
            }
            if ((non_active == null)) {
                throw new global::System.ArgumentNullException("non_active");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(non_active));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string cashier, 
                    double amount, 
                    System.DateTime logdate, 
                    System.DateTime date, 
                    string enter_by, 
                    string dipartment, 
                    string status, 
                    string non_active, 
                    int Original_id, 
                    string Original_cashier, 
                    double Original_amount, 
                    System.DateTime Original_logdate, 
                    System.DateTime Original_date, 
                    string Original_enter_by, 
                    string Original_dipartment, 
                    string Original_status, 
                    string Original_non_active) {
            if ((cashier == null)) {
                throw new global::System.ArgumentNullException("cashier");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(cashier));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(amount));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(logdate));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(date));
            if ((enter_by == null)) {
                throw new global::System.ArgumentNullException("enter_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(enter_by));
            }
            if ((dipartment == null)) {
                throw new global::System.ArgumentNullException("dipartment");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(dipartment));
            }
            if ((status == null)) {
                throw new global::System.ArgumentNullException("status");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(status));
            }
            if ((non_active == null)) {
                throw new global::System.ArgumentNullException("non_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(non_active));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_id));
            if ((Original_cashier == null)) {
                throw new global::System.ArgumentNullException("Original_cashier");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_cashier));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Original_amount));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_logdate));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_date));
            if ((Original_enter_by == null)) {
                throw new global::System.ArgumentNullException("Original_enter_by");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_enter_by));
            }
            if ((Original_dipartment == null)) {
                throw new global::System.ArgumentNullException("Original_dipartment");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_dipartment));
            }
            if ((Original_status == null)) {
                throw new global::System.ArgumentNullException("Original_status");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_status));
            }
            if ((Original_non_active == null)) {
                throw new global::System.ArgumentNullException("Original_non_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_non_active));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class hibernate_sequenceTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public hibernate_sequenceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "hibernate_sequence";
            tableMapping.ColumnMappings.Add("next_val", "next_val");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `hibernate_sequence` (`next_val`) VALUES (@next_val)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@next_val";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "next_val";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.accounts_reportsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `next_val` FROM `hibernate_sequence`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(accounts_reportsDataSet.hibernate_sequenceDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual accounts_reportsDataSet.hibernate_sequenceDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            accounts_reportsDataSet.hibernate_sequenceDataTable dataTable = new accounts_reportsDataSet.hibernate_sequenceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet.hibernate_sequenceDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "hibernate_sequence");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> next_val) {
            if ((next_val.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(next_val.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tuk_acc_detailTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tuk_acc_detailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tuk_acc_detail";
            tableMapping.ColumnMappings.Add("cabno", "cabno");
            tableMapping.ColumnMappings.Add("acc_number", "acc_number");
            tableMapping.ColumnMappings.Add("acc_name", "acc_name");
            tableMapping.ColumnMappings.Add("bank", "bank");
            tableMapping.ColumnMappings.Add("bank_code", "bank_code");
            tableMapping.ColumnMappings.Add("branch_name", "branch_name");
            tableMapping.ColumnMappings.Add("branch_code", "branch_code");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `tuk_acc_detail` WHERE ((`cabno` = @Original_cabno) AND (`acc_number` = @Original_acc_number) AND (`acc_name` = @Original_acc_name) AND (`bank` = @Original_bank) AND (`bank_code` = @Original_bank_code) AND (`branch_name` = @Original_branch_name) AND (`branch_code` = @Original_branch_code))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_acc_number";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "acc_number";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_acc_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "acc_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_bank";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_bank_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_branch_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "branch_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_branch_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "branch_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `tuk_acc_detail` (`cabno`, `acc_number`, `acc_name`, `bank`, `bank_co" +
                "de`, `branch_name`, `branch_code`) VALUES (@cabno, @acc_number, @acc_name, @bank" +
                ", @bank_code, @branch_name, @branch_code)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@acc_number";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "acc_number";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@acc_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "acc_name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@bank";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@bank_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@branch_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "branch_name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@branch_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "branch_code";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `tuk_acc_detail` SET `cabno` = @cabno, `acc_number` = @acc_number, `acc_name` = @acc_name, `bank` = @bank, `bank_code` = @bank_code, `branch_name` = @branch_name, `branch_code` = @branch_code WHERE ((`cabno` = @Original_cabno) AND (`acc_number` = @Original_acc_number) AND (`acc_name` = @Original_acc_name) AND (`bank` = @Original_bank) AND (`bank_code` = @Original_bank_code) AND (`branch_name` = @Original_branch_name) AND (`branch_code` = @Original_branch_code))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@acc_number";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "acc_number";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@acc_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "acc_name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@bank";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@bank_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@branch_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "branch_name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@branch_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "branch_code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_acc_number";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "acc_number";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_acc_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "acc_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_bank";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_bank_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "bank_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_branch_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "branch_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_branch_code";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "branch_code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.accounts_reportsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `cabno`, `acc_number`, `acc_name`, `bank`, `bank_code`, `branch_name`, `br" +
                "anch_code` FROM `tuk_acc_detail`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(accounts_reportsDataSet.tuk_acc_detailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual accounts_reportsDataSet.tuk_acc_detailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            accounts_reportsDataSet.tuk_acc_detailDataTable dataTable = new accounts_reportsDataSet.tuk_acc_detailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet.tuk_acc_detailDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tuk_acc_detail");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_cabno, string Original_acc_number, string Original_acc_name, string Original_bank, string Original_bank_code, string Original_branch_name, string Original_branch_code) {
            if ((Original_cabno == null)) {
                throw new global::System.ArgumentNullException("Original_cabno");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_cabno));
            }
            if ((Original_acc_number == null)) {
                throw new global::System.ArgumentNullException("Original_acc_number");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_acc_number));
            }
            if ((Original_acc_name == null)) {
                throw new global::System.ArgumentNullException("Original_acc_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_acc_name));
            }
            if ((Original_bank == null)) {
                throw new global::System.ArgumentNullException("Original_bank");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_bank));
            }
            if ((Original_bank_code == null)) {
                throw new global::System.ArgumentNullException("Original_bank_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_bank_code));
            }
            if ((Original_branch_name == null)) {
                throw new global::System.ArgumentNullException("Original_branch_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_branch_name));
            }
            if ((Original_branch_code == null)) {
                throw new global::System.ArgumentNullException("Original_branch_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_branch_code));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string cabno, string acc_number, string acc_name, string bank, string bank_code, string branch_name, string branch_code) {
            if ((cabno == null)) {
                throw new global::System.ArgumentNullException("cabno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(cabno));
            }
            if ((acc_number == null)) {
                throw new global::System.ArgumentNullException("acc_number");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(acc_number));
            }
            if ((acc_name == null)) {
                throw new global::System.ArgumentNullException("acc_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(acc_name));
            }
            if ((bank == null)) {
                throw new global::System.ArgumentNullException("bank");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(bank));
            }
            if ((bank_code == null)) {
                throw new global::System.ArgumentNullException("bank_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(bank_code));
            }
            if ((branch_name == null)) {
                throw new global::System.ArgumentNullException("branch_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(branch_name));
            }
            if ((branch_code == null)) {
                throw new global::System.ArgumentNullException("branch_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(branch_code));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string cabno, string acc_number, string acc_name, string bank, string bank_code, string branch_name, string branch_code, string Original_cabno, string Original_acc_number, string Original_acc_name, string Original_bank, string Original_bank_code, string Original_branch_name, string Original_branch_code) {
            if ((cabno == null)) {
                throw new global::System.ArgumentNullException("cabno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(cabno));
            }
            if ((acc_number == null)) {
                throw new global::System.ArgumentNullException("acc_number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(acc_number));
            }
            if ((acc_name == null)) {
                throw new global::System.ArgumentNullException("acc_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(acc_name));
            }
            if ((bank == null)) {
                throw new global::System.ArgumentNullException("bank");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(bank));
            }
            if ((bank_code == null)) {
                throw new global::System.ArgumentNullException("bank_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(bank_code));
            }
            if ((branch_name == null)) {
                throw new global::System.ArgumentNullException("branch_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(branch_name));
            }
            if ((branch_code == null)) {
                throw new global::System.ArgumentNullException("branch_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(branch_code));
            }
            if ((Original_cabno == null)) {
                throw new global::System.ArgumentNullException("Original_cabno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_cabno));
            }
            if ((Original_acc_number == null)) {
                throw new global::System.ArgumentNullException("Original_acc_number");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_acc_number));
            }
            if ((Original_acc_name == null)) {
                throw new global::System.ArgumentNullException("Original_acc_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_acc_name));
            }
            if ((Original_bank == null)) {
                throw new global::System.ArgumentNullException("Original_bank");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_bank));
            }
            if ((Original_bank_code == null)) {
                throw new global::System.ArgumentNullException("Original_bank_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_bank_code));
            }
            if ((Original_branch_name == null)) {
                throw new global::System.ArgumentNullException("Original_branch_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_branch_name));
            }
            if ((Original_branch_code == null)) {
                throw new global::System.ArgumentNullException("Original_branch_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_branch_code));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string acc_number, string acc_name, string bank, string bank_code, string branch_name, string branch_code, string Original_cabno, string Original_acc_number, string Original_acc_name, string Original_bank, string Original_bank_code, string Original_branch_name, string Original_branch_code) {
            return this.Update(Original_cabno, acc_number, acc_name, bank, bank_code, branch_name, branch_code, Original_cabno, Original_acc_number, Original_acc_name, Original_bank, Original_bank_code, Original_branch_name, Original_branch_code);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tuk_lastbalanceTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tuk_lastbalanceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tuk_lastbalance";
            tableMapping.ColumnMappings.Add("cabno", "cabno");
            tableMapping.ColumnMappings.Add("payment", "payment");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `tuk_lastbalance` WHERE ((`cabno` = @Original_cabno) AND (`payment` =" +
                " @Original_payment))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_payment";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "payment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `tuk_lastbalance` (`cabno`, `payment`) VALUES (@cabno, @payment)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@payment";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "payment";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `tuk_lastbalance` SET `cabno` = @cabno, `payment` = @payment WHERE ((`cabn" +
                "o` = @Original_cabno) AND (`payment` = @Original_payment))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@payment";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "payment";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_payment";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "payment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.accounts_reportsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `cabno`, `payment` FROM `tuk_lastbalance`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(accounts_reportsDataSet.tuk_lastbalanceDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual accounts_reportsDataSet.tuk_lastbalanceDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            accounts_reportsDataSet.tuk_lastbalanceDataTable dataTable = new accounts_reportsDataSet.tuk_lastbalanceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet.tuk_lastbalanceDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tuk_lastbalance");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_cabno, double Original_payment) {
            if ((Original_cabno == null)) {
                throw new global::System.ArgumentNullException("Original_cabno");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_cabno));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((double)(Original_payment));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string cabno, double payment) {
            if ((cabno == null)) {
                throw new global::System.ArgumentNullException("cabno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(cabno));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((double)(payment));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string cabno, double payment, string Original_cabno, double Original_payment) {
            if ((cabno == null)) {
                throw new global::System.ArgumentNullException("cabno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(cabno));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(payment));
            if ((Original_cabno == null)) {
                throw new global::System.ArgumentNullException("Original_cabno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_cabno));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Original_payment));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(double payment, string Original_cabno, double Original_payment) {
            return this.Update(Original_cabno, payment, Original_cabno, Original_payment);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tuk_sp_promoTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tuk_sp_promoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tuk_sp_promo";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("cabno", "cabno");
            tableMapping.ColumnMappings.Add("no_hires", "no_hires");
            tableMapping.ColumnMappings.Add("payment", "payment");
            tableMapping.ColumnMappings.Add("hire_date", "hire_date");
            tableMapping.ColumnMappings.Add("transfer_date", "transfer_date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `tuk_sp_promo` WHERE ((`id` = @Original_id) AND (`cabno` = @Original_cabno) AND (`no_hires` = @Original_no_hires) AND (`payment` = @Original_payment) AND (`hire_date` = @Original_hire_date) AND ((@IsNull_transfer_date = 1 AND `transfer_date` IS NULL) OR (`transfer_date` = @Original_transfer_date)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_no_hires";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "no_hires";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_payment";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "payment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_hire_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "hire_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_transfer_date";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "transfer_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_transfer_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "transfer_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `tuk_sp_promo` (`cabno`, `no_hires`, `payment`, `hire_date`, `transfe" +
                "r_date`) VALUES (@cabno, @no_hires, @payment, @hire_date, @transfer_date)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@no_hires";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "no_hires";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@payment";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "payment";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@hire_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "hire_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@transfer_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "transfer_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `tuk_sp_promo` SET `cabno` = @cabno, `no_hires` = @no_hires, `payment` = @payment, `hire_date` = @hire_date, `transfer_date` = @transfer_date WHERE ((`id` = @Original_id) AND (`cabno` = @Original_cabno) AND (`no_hires` = @Original_no_hires) AND (`payment` = @Original_payment) AND (`hire_date` = @Original_hire_date) AND ((@IsNull_transfer_date = 1 AND `transfer_date` IS NULL) OR (`transfer_date` = @Original_transfer_date)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@no_hires";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "no_hires";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@payment";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "payment";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@hire_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "hire_date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@transfer_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "transfer_date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_no_hires";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "no_hires";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_payment";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "payment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_hire_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "hire_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_transfer_date";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "transfer_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_transfer_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "transfer_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.accounts_reportsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `id`, `cabno`, `no_hires`, `payment`, `hire_date`, `transfer_date` FROM `t" +
                "uk_sp_promo`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(accounts_reportsDataSet.tuk_sp_promoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual accounts_reportsDataSet.tuk_sp_promoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            accounts_reportsDataSet.tuk_sp_promoDataTable dataTable = new accounts_reportsDataSet.tuk_sp_promoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet.tuk_sp_promoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tuk_sp_promo");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_cabno, int Original_no_hires, double Original_payment, System.DateTime Original_hire_date, global::System.Nullable<global::System.DateTime> Original_transfer_date) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_cabno == null)) {
                throw new global::System.ArgumentNullException("Original_cabno");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_cabno));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_no_hires));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_payment));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_hire_date));
            if ((Original_transfer_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_transfer_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string cabno, int no_hires, double payment, System.DateTime hire_date, global::System.Nullable<global::System.DateTime> transfer_date) {
            if ((cabno == null)) {
                throw new global::System.ArgumentNullException("cabno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(cabno));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(no_hires));
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(payment));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(hire_date));
            if ((transfer_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(transfer_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string cabno, int no_hires, double payment, System.DateTime hire_date, global::System.Nullable<global::System.DateTime> transfer_date, int Original_id, string Original_cabno, int Original_no_hires, double Original_payment, System.DateTime Original_hire_date, global::System.Nullable<global::System.DateTime> Original_transfer_date) {
            if ((cabno == null)) {
                throw new global::System.ArgumentNullException("cabno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(cabno));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(no_hires));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(payment));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(hire_date));
            if ((transfer_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(transfer_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));
            if ((Original_cabno == null)) {
                throw new global::System.ArgumentNullException("Original_cabno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_cabno));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_no_hires));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Original_payment));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_hire_date));
            if ((Original_transfer_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_transfer_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tuk_transferpayment_DateTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tuk_transferpayment_DateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tuk_transferpayment_Date";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("date", "date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `tuk_transferpayment_Date` WHERE ((`id` = @Original_id) AND (`date` =" +
                " @Original_date))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `tuk_transferpayment_Date` (`date`) VALUES (@date)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `tuk_transferpayment_Date` SET `date` = @date WHERE ((`id` = @Original_id)" +
                " AND (`date` = @Original_date))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.accounts_reportsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `id`, `date` FROM `tuk_transferpayment_Date`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(accounts_reportsDataSet.tuk_transferpayment_DateDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual accounts_reportsDataSet.tuk_transferpayment_DateDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            accounts_reportsDataSet.tuk_transferpayment_DateDataTable dataTable = new accounts_reportsDataSet.tuk_transferpayment_DateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet.tuk_transferpayment_DateDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tuk_transferpayment_Date");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, System.DateTime Original_date) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime date) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime date, int Original_id, System.DateTime Original_date) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(date));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Original_date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tuk_wallet_hiresTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tuk_wallet_hiresTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tuk_wallet_hires";
            tableMapping.ColumnMappings.Add("ref_no", "ref_no");
            tableMapping.ColumnMappings.Add("cabno", "cabno");
            tableMapping.ColumnMappings.Add("start_date", "start_date");
            tableMapping.ColumnMappings.Add("status", "status");
            tableMapping.ColumnMappings.Add("discount", "discount");
            tableMapping.ColumnMappings.Add("total", "total");
            tableMapping.ColumnMappings.Add("discount_payed", "discount_payed");
            tableMapping.ColumnMappings.Add("touch_payed", "touch_payed");
            tableMapping.ColumnMappings.Add("credit_cardpayed", "credit_cardpayed");
            tableMapping.ColumnMappings.Add("credit_transferdate", "credit_transferdate");
            tableMapping.ColumnMappings.Add("discount_transferdate", "discount_transferdate");
            tableMapping.ColumnMappings.Add("touch_transferdate", "touch_transferdate");
            tableMapping.ColumnMappings.Add("b_type", "b_type");
            tableMapping.ColumnMappings.Add("sp_promodate", "sp_promodate");
            tableMapping.ColumnMappings.Add("sp_amount", "sp_amount");
            tableMapping.ColumnMappings.Add("sp_up", "sp_up");
            tableMapping.ColumnMappings.Add("paymentMethod", "paymentMethod");
            tableMapping.ColumnMappings.Add("com_commission", "com_commission");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `tuk_wallet_hires` WHERE ((`ref_no` = @Original_ref_no) AND (`cabno` = @Original_cabno) AND (`start_date` = @Original_start_date) AND (`status` = @Original_status) AND (`discount` = @Original_discount) AND (`total` = @Original_total) AND (`discount_payed` = @Original_discount_payed) AND (`touch_payed` = @Original_touch_payed) AND (`credit_cardpayed` = @Original_credit_cardpayed) AND ((@IsNull_credit_transferdate = 1 AND `credit_transferdate` IS NULL) OR (`credit_transferdate` = @Original_credit_transferdate)) AND ((@IsNull_discount_transferdate = 1 AND `discount_transferdate` IS NULL) OR (`discount_transferdate` = @Original_discount_transferdate)) AND ((@IsNull_touch_transferdate = 1 AND `touch_transferdate` IS NULL) OR (`touch_transferdate` = @Original_touch_transferdate)) AND (`b_type` = @Original_b_type) AND ((@IsNull_sp_promodate = 1 AND `sp_promodate` IS NULL) OR (`sp_promodate` = @Original_sp_promodate)) AND (`sp_amount` = @Original_sp_amount) AND (`sp_up` = @Original_sp_up) AND (`paymentMethod` = @Original_paymentMethod) AND (`com_commission` = @Original_com_commission))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ref_no";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ref_no";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_start_date";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "start_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_status";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "status";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_discount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "discount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_total";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "total";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_discount_payed";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "discount_payed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_touch_payed";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "touch_payed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_credit_cardpayed";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "credit_cardpayed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_credit_transferdate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "credit_transferdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_credit_transferdate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "credit_transferdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_discount_transferdate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "discount_transferdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_discount_transferdate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "discount_transferdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_touch_transferdate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "touch_transferdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_touch_transferdate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "touch_transferdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_b_type";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "b_type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_sp_promodate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sp_promodate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sp_promodate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "sp_promodate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sp_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "sp_amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sp_up";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "sp_up";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_paymentMethod";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "paymentMethod";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_com_commission";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "com_commission";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `tuk_wallet_hires` (`ref_no`, `cabno`, `start_date`, `status`, `discount`, `total`, `discount_payed`, `touch_payed`, `credit_cardpayed`, `credit_transferdate`, `discount_transferdate`, `touch_transferdate`, `b_type`, `sp_promodate`, `sp_amount`, `sp_up`, `paymentMethod`, `com_commission`) VALUES (@ref_no, @cabno, @start_date, @status, @discount, @total, @discount_payed, @touch_payed, @credit_cardpayed, @credit_transferdate, @discount_transferdate, @touch_transferdate, @b_type, @sp_promodate, @sp_amount, @sp_up, @paymentMethod, @com_commission)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ref_no";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ref_no";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@start_date";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "start_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@status";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "status";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@discount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "discount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@total";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "total";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@discount_payed";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "discount_payed";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@touch_payed";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "touch_payed";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@credit_cardpayed";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "credit_cardpayed";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@credit_transferdate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "credit_transferdate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@discount_transferdate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "discount_transferdate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@touch_transferdate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "touch_transferdate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@b_type";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "b_type";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sp_promodate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "sp_promodate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sp_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "sp_amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sp_up";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "sp_up";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@paymentMethod";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "paymentMethod";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@com_commission";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "com_commission";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `tuk_wallet_hires` SET `ref_no` = @ref_no, `cabno` = @cabno, `start_date` " +
                "= @start_date, `status` = @status, `discount` = @discount, `total` = @total, `di" +
                "scount_payed` = @discount_payed, `touch_payed` = @touch_payed, `credit_cardpayed" +
                "` = @credit_cardpayed, `credit_transferdate` = @credit_transferdate, `discount_t" +
                "ransferdate` = @discount_transferdate, `touch_transferdate` = @touch_transferdat" +
                "e, `b_type` = @b_type, `sp_promodate` = @sp_promodate, `sp_amount` = @sp_amount," +
                " `sp_up` = @sp_up, `paymentMethod` = @paymentMethod, `com_commission` = @com_com" +
                "mission WHERE ((`ref_no` = @Original_ref_no) AND (`cabno` = @Original_cabno) AND" +
                " (`start_date` = @Original_start_date) AND (`status` = @Original_status) AND (`d" +
                "iscount` = @Original_discount) AND (`total` = @Original_total) AND (`discount_pa" +
                "yed` = @Original_discount_payed) AND (`touch_payed` = @Original_touch_payed) AND" +
                " (`credit_cardpayed` = @Original_credit_cardpayed) AND ((@IsNull_credit_transfer" +
                "date = 1 AND `credit_transferdate` IS NULL) OR (`credit_transferdate` = @Origina" +
                "l_credit_transferdate)) AND ((@IsNull_discount_transferdate = 1 AND `discount_tr" +
                "ansferdate` IS NULL) OR (`discount_transferdate` = @Original_discount_transferda" +
                "te)) AND ((@IsNull_touch_transferdate = 1 AND `touch_transferdate` IS NULL) OR (" +
                "`touch_transferdate` = @Original_touch_transferdate)) AND (`b_type` = @Original_" +
                "b_type) AND ((@IsNull_sp_promodate = 1 AND `sp_promodate` IS NULL) OR (`sp_promo" +
                "date` = @Original_sp_promodate)) AND (`sp_amount` = @Original_sp_amount) AND (`s" +
                "p_up` = @Original_sp_up) AND (`paymentMethod` = @Original_paymentMethod) AND (`c" +
                "om_commission` = @Original_com_commission))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ref_no";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ref_no";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@start_date";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "start_date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@status";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "status";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@discount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "discount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@total";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "total";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@discount_payed";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "discount_payed";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@touch_payed";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "touch_payed";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@credit_cardpayed";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "credit_cardpayed";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@credit_transferdate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "credit_transferdate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@discount_transferdate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "discount_transferdate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@touch_transferdate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "touch_transferdate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@b_type";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "b_type";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sp_promodate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "sp_promodate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sp_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "sp_amount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sp_up";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "sp_up";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@paymentMethod";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "paymentMethod";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@com_commission";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "com_commission";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ref_no";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ref_no";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_start_date";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "start_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_status";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "status";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_discount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "discount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_total";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "total";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_discount_payed";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "discount_payed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_touch_payed";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "touch_payed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_credit_cardpayed";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "credit_cardpayed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_credit_transferdate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "credit_transferdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_credit_transferdate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "credit_transferdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_discount_transferdate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "discount_transferdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_discount_transferdate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "discount_transferdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_touch_transferdate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "touch_transferdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_touch_transferdate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "touch_transferdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_b_type";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "b_type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_sp_promodate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sp_promodate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sp_promodate";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "sp_promodate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sp_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "sp_amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sp_up";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "sp_up";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_paymentMethod";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "paymentMethod";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_com_commission";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "com_commission";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.accounts_reportsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `ref_no`, `cabno`, `start_date`, `status`, `discount`, `total`, `discount_payed`, `touch_payed`, `credit_cardpayed`, `credit_transferdate`, `discount_transferdate`, `touch_transferdate`, `b_type`, `sp_promodate`, `sp_amount`, `sp_up`, `paymentMethod`, `com_commission` FROM `tuk_wallet_hires`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(accounts_reportsDataSet.tuk_wallet_hiresDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual accounts_reportsDataSet.tuk_wallet_hiresDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            accounts_reportsDataSet.tuk_wallet_hiresDataTable dataTable = new accounts_reportsDataSet.tuk_wallet_hiresDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet.tuk_wallet_hiresDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tuk_wallet_hires");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_ref_no, 
                    string Original_cabno, 
                    System.DateTime Original_start_date, 
                    string Original_status, 
                    double Original_discount, 
                    double Original_total, 
                    string Original_discount_payed, 
                    string Original_touch_payed, 
                    string Original_credit_cardpayed, 
                    global::System.Nullable<global::System.DateTime> Original_credit_transferdate, 
                    global::System.Nullable<global::System.DateTime> Original_discount_transferdate, 
                    global::System.Nullable<global::System.DateTime> Original_touch_transferdate, 
                    string Original_b_type, 
                    global::System.Nullable<global::System.DateTime> Original_sp_promodate, 
                    double Original_sp_amount, 
                    string Original_sp_up, 
                    string Original_paymentMethod, 
                    double Original_com_commission) {
            if ((Original_ref_no == null)) {
                throw new global::System.ArgumentNullException("Original_ref_no");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ref_no));
            }
            if ((Original_cabno == null)) {
                throw new global::System.ArgumentNullException("Original_cabno");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_cabno));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_start_date));
            if ((Original_status == null)) {
                throw new global::System.ArgumentNullException("Original_status");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_status));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_discount));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_total));
            if ((Original_discount_payed == null)) {
                throw new global::System.ArgumentNullException("Original_discount_payed");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_discount_payed));
            }
            if ((Original_touch_payed == null)) {
                throw new global::System.ArgumentNullException("Original_touch_payed");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_touch_payed));
            }
            if ((Original_credit_cardpayed == null)) {
                throw new global::System.ArgumentNullException("Original_credit_cardpayed");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_credit_cardpayed));
            }
            if ((Original_credit_transferdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_credit_transferdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_discount_transferdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_discount_transferdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_touch_transferdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_touch_transferdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_b_type == null)) {
                throw new global::System.ArgumentNullException("Original_b_type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_b_type));
            }
            if ((Original_sp_promodate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_sp_promodate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_sp_amount));
            if ((Original_sp_up == null)) {
                throw new global::System.ArgumentNullException("Original_sp_up");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_sp_up));
            }
            if ((Original_paymentMethod == null)) {
                throw new global::System.ArgumentNullException("Original_paymentMethod");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_paymentMethod));
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((double)(Original_com_commission));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string ref_no, 
                    string cabno, 
                    System.DateTime start_date, 
                    string status, 
                    double discount, 
                    double total, 
                    string discount_payed, 
                    string touch_payed, 
                    string credit_cardpayed, 
                    global::System.Nullable<global::System.DateTime> credit_transferdate, 
                    global::System.Nullable<global::System.DateTime> discount_transferdate, 
                    global::System.Nullable<global::System.DateTime> touch_transferdate, 
                    string b_type, 
                    global::System.Nullable<global::System.DateTime> sp_promodate, 
                    double sp_amount, 
                    string sp_up, 
                    string paymentMethod, 
                    double com_commission) {
            if ((ref_no == null)) {
                throw new global::System.ArgumentNullException("ref_no");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ref_no));
            }
            if ((cabno == null)) {
                throw new global::System.ArgumentNullException("cabno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(cabno));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(start_date));
            if ((status == null)) {
                throw new global::System.ArgumentNullException("status");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(status));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(discount));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(total));
            if ((discount_payed == null)) {
                throw new global::System.ArgumentNullException("discount_payed");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(discount_payed));
            }
            if ((touch_payed == null)) {
                throw new global::System.ArgumentNullException("touch_payed");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(touch_payed));
            }
            if ((credit_cardpayed == null)) {
                throw new global::System.ArgumentNullException("credit_cardpayed");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(credit_cardpayed));
            }
            if ((credit_transferdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(credit_transferdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((discount_transferdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(discount_transferdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((touch_transferdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(touch_transferdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((b_type == null)) {
                throw new global::System.ArgumentNullException("b_type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(b_type));
            }
            if ((sp_promodate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(sp_promodate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((double)(sp_amount));
            if ((sp_up == null)) {
                throw new global::System.ArgumentNullException("sp_up");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(sp_up));
            }
            if ((paymentMethod == null)) {
                throw new global::System.ArgumentNullException("paymentMethod");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(paymentMethod));
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((double)(com_commission));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ref_no, 
                    string cabno, 
                    System.DateTime start_date, 
                    string status, 
                    double discount, 
                    double total, 
                    string discount_payed, 
                    string touch_payed, 
                    string credit_cardpayed, 
                    global::System.Nullable<global::System.DateTime> credit_transferdate, 
                    global::System.Nullable<global::System.DateTime> discount_transferdate, 
                    global::System.Nullable<global::System.DateTime> touch_transferdate, 
                    string b_type, 
                    global::System.Nullable<global::System.DateTime> sp_promodate, 
                    double sp_amount, 
                    string sp_up, 
                    string paymentMethod, 
                    double com_commission, 
                    string Original_ref_no, 
                    string Original_cabno, 
                    System.DateTime Original_start_date, 
                    string Original_status, 
                    double Original_discount, 
                    double Original_total, 
                    string Original_discount_payed, 
                    string Original_touch_payed, 
                    string Original_credit_cardpayed, 
                    global::System.Nullable<global::System.DateTime> Original_credit_transferdate, 
                    global::System.Nullable<global::System.DateTime> Original_discount_transferdate, 
                    global::System.Nullable<global::System.DateTime> Original_touch_transferdate, 
                    string Original_b_type, 
                    global::System.Nullable<global::System.DateTime> Original_sp_promodate, 
                    double Original_sp_amount, 
                    string Original_sp_up, 
                    string Original_paymentMethod, 
                    double Original_com_commission) {
            if ((ref_no == null)) {
                throw new global::System.ArgumentNullException("ref_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ref_no));
            }
            if ((cabno == null)) {
                throw new global::System.ArgumentNullException("cabno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(cabno));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(start_date));
            if ((status == null)) {
                throw new global::System.ArgumentNullException("status");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(status));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(discount));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(total));
            if ((discount_payed == null)) {
                throw new global::System.ArgumentNullException("discount_payed");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(discount_payed));
            }
            if ((touch_payed == null)) {
                throw new global::System.ArgumentNullException("touch_payed");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(touch_payed));
            }
            if ((credit_cardpayed == null)) {
                throw new global::System.ArgumentNullException("credit_cardpayed");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(credit_cardpayed));
            }
            if ((credit_transferdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(credit_transferdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((discount_transferdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(discount_transferdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((touch_transferdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(touch_transferdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((b_type == null)) {
                throw new global::System.ArgumentNullException("b_type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(b_type));
            }
            if ((sp_promodate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(sp_promodate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(sp_amount));
            if ((sp_up == null)) {
                throw new global::System.ArgumentNullException("sp_up");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(sp_up));
            }
            if ((paymentMethod == null)) {
                throw new global::System.ArgumentNullException("paymentMethod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(paymentMethod));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(com_commission));
            if ((Original_ref_no == null)) {
                throw new global::System.ArgumentNullException("Original_ref_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ref_no));
            }
            if ((Original_cabno == null)) {
                throw new global::System.ArgumentNullException("Original_cabno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_cabno));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_start_date));
            if ((Original_status == null)) {
                throw new global::System.ArgumentNullException("Original_status");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_status));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Original_discount));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Original_total));
            if ((Original_discount_payed == null)) {
                throw new global::System.ArgumentNullException("Original_discount_payed");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_discount_payed));
            }
            if ((Original_touch_payed == null)) {
                throw new global::System.ArgumentNullException("Original_touch_payed");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_touch_payed));
            }
            if ((Original_credit_cardpayed == null)) {
                throw new global::System.ArgumentNullException("Original_credit_cardpayed");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_credit_cardpayed));
            }
            if ((Original_credit_transferdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_credit_transferdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_discount_transferdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_discount_transferdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_touch_transferdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_touch_transferdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_b_type == null)) {
                throw new global::System.ArgumentNullException("Original_b_type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_b_type));
            }
            if ((Original_sp_promodate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(Original_sp_promodate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(Original_sp_amount));
            if ((Original_sp_up == null)) {
                throw new global::System.ArgumentNullException("Original_sp_up");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_sp_up));
            }
            if ((Original_paymentMethod == null)) {
                throw new global::System.ArgumentNullException("Original_paymentMethod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_paymentMethod));
            }
            this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(Original_com_commission));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string cabno, 
                    System.DateTime start_date, 
                    string status, 
                    double discount, 
                    double total, 
                    string discount_payed, 
                    string touch_payed, 
                    string credit_cardpayed, 
                    global::System.Nullable<global::System.DateTime> credit_transferdate, 
                    global::System.Nullable<global::System.DateTime> discount_transferdate, 
                    global::System.Nullable<global::System.DateTime> touch_transferdate, 
                    string b_type, 
                    global::System.Nullable<global::System.DateTime> sp_promodate, 
                    double sp_amount, 
                    string sp_up, 
                    string paymentMethod, 
                    double com_commission, 
                    string Original_ref_no, 
                    string Original_cabno, 
                    System.DateTime Original_start_date, 
                    string Original_status, 
                    double Original_discount, 
                    double Original_total, 
                    string Original_discount_payed, 
                    string Original_touch_payed, 
                    string Original_credit_cardpayed, 
                    global::System.Nullable<global::System.DateTime> Original_credit_transferdate, 
                    global::System.Nullable<global::System.DateTime> Original_discount_transferdate, 
                    global::System.Nullable<global::System.DateTime> Original_touch_transferdate, 
                    string Original_b_type, 
                    global::System.Nullable<global::System.DateTime> Original_sp_promodate, 
                    double Original_sp_amount, 
                    string Original_sp_up, 
                    string Original_paymentMethod, 
                    double Original_com_commission) {
            return this.Update(Original_ref_no, cabno, start_date, status, discount, total, discount_payed, touch_payed, credit_cardpayed, credit_transferdate, discount_transferdate, touch_transferdate, b_type, sp_promodate, sp_amount, sp_up, paymentMethod, com_commission, Original_ref_no, Original_cabno, Original_start_date, Original_status, Original_discount, Original_total, Original_discount_payed, Original_touch_payed, Original_credit_cardpayed, Original_credit_transferdate, Original_discount_transferdate, Original_touch_transferdate, Original_b_type, Original_sp_promodate, Original_sp_amount, Original_sp_up, Original_paymentMethod, Original_com_commission);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tuk_wallet_paymentTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tuk_wallet_paymentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tuk_wallet_payment";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("cabno", "cabno");
            tableMapping.ColumnMappings.Add("creditcard", "creditcard");
            tableMapping.ColumnMappings.Add("promopayment", "promopayment");
            tableMapping.ColumnMappings.Add("touch", "touch");
            tableMapping.ColumnMappings.Add("hpromo", "hpromo");
            tableMapping.ColumnMappings.Add("comcomission", "comcomission");
            tableMapping.ColumnMappings.Add("lbalance", "lbalance");
            tableMapping.ColumnMappings.Add("amount", "amount");
            tableMapping.ColumnMappings.Add("date", "date");
            tableMapping.ColumnMappings.Add("transfer_date", "transfer_date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `tuk_wallet_payment` WHERE ((`id` = @Original_id) AND (`cabno` = @Original_cabno) AND (`creditcard` = @Original_creditcard) AND (`promopayment` = @Original_promopayment) AND (`touch` = @Original_touch) AND (`hpromo` = @Original_hpromo) AND (`comcomission` = @Original_comcomission) AND (`lbalance` = @Original_lbalance) AND (`amount` = @Original_amount) AND (`date` = @Original_date) AND (`transfer_date` = @Original_transfer_date))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_creditcard";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "creditcard";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_promopayment";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "promopayment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_touch";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "touch";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_hpromo";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "hpromo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_comcomission";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "comcomission";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_lbalance";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "lbalance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_transfer_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "transfer_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `tuk_wallet_payment` (`cabno`, `creditcard`, `promopayment`, `touch`, `hpromo`, `comcomission`, `lbalance`, `amount`, `date`, `transfer_date`) VALUES (@cabno, @creditcard, @promopayment, @touch, @hpromo, @comcomission, @lbalance, @amount, @date, @transfer_date)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@creditcard";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "creditcard";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@promopayment";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "promopayment";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@touch";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "touch";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@hpromo";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "hpromo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@comcomission";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "comcomission";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@lbalance";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "lbalance";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@transfer_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "transfer_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `tuk_wallet_payment` SET `cabno` = @cabno, `creditcard` = @creditcard, `promopayment` = @promopayment, `touch` = @touch, `hpromo` = @hpromo, `comcomission` = @comcomission, `lbalance` = @lbalance, `amount` = @amount, `date` = @date, `transfer_date` = @transfer_date WHERE ((`id` = @Original_id) AND (`cabno` = @Original_cabno) AND (`creditcard` = @Original_creditcard) AND (`promopayment` = @Original_promopayment) AND (`touch` = @Original_touch) AND (`hpromo` = @Original_hpromo) AND (`comcomission` = @Original_comcomission) AND (`lbalance` = @Original_lbalance) AND (`amount` = @Original_amount) AND (`date` = @Original_date) AND (`transfer_date` = @Original_transfer_date))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@creditcard";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "creditcard";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@promopayment";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "promopayment";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@touch";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "touch";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@hpromo";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "hpromo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@comcomission";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "comcomission";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@lbalance";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "lbalance";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@transfer_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "transfer_date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_creditcard";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "creditcard";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_promopayment";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "promopayment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_touch";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "touch";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_hpromo";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "hpromo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_comcomission";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "comcomission";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_lbalance";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "lbalance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_transfer_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "transfer_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.accounts_reportsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `id`, `cabno`, `creditcard`, `promopayment`, `touch`, `hpromo`, `comcomiss" +
                "ion`, `lbalance`, `amount`, `date`, `transfer_date` FROM `tuk_wallet_payment`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(accounts_reportsDataSet.tuk_wallet_paymentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual accounts_reportsDataSet.tuk_wallet_paymentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            accounts_reportsDataSet.tuk_wallet_paymentDataTable dataTable = new accounts_reportsDataSet.tuk_wallet_paymentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet.tuk_wallet_paymentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tuk_wallet_payment");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_cabno, double Original_creditcard, double Original_promopayment, double Original_touch, double Original_hpromo, double Original_comcomission, double Original_lbalance, double Original_amount, System.DateTime Original_date, System.DateTime Original_transfer_date) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_cabno == null)) {
                throw new global::System.ArgumentNullException("Original_cabno");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_cabno));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_creditcard));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_promopayment));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_touch));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_hpromo));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_comcomission));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_lbalance));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_amount));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_date));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_transfer_date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string cabno, double creditcard, double promopayment, double touch, double hpromo, double comcomission, double lbalance, double amount, System.DateTime date, System.DateTime transfer_date) {
            if ((cabno == null)) {
                throw new global::System.ArgumentNullException("cabno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(cabno));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((double)(creditcard));
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(promopayment));
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(touch));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(hpromo));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(comcomission));
            this.Adapter.InsertCommand.Parameters[6].Value = ((double)(lbalance));
            this.Adapter.InsertCommand.Parameters[7].Value = ((double)(amount));
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(date));
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(transfer_date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string cabno, 
                    double creditcard, 
                    double promopayment, 
                    double touch, 
                    double hpromo, 
                    double comcomission, 
                    double lbalance, 
                    double amount, 
                    System.DateTime date, 
                    System.DateTime transfer_date, 
                    int Original_id, 
                    string Original_cabno, 
                    double Original_creditcard, 
                    double Original_promopayment, 
                    double Original_touch, 
                    double Original_hpromo, 
                    double Original_comcomission, 
                    double Original_lbalance, 
                    double Original_amount, 
                    System.DateTime Original_date, 
                    System.DateTime Original_transfer_date) {
            if ((cabno == null)) {
                throw new global::System.ArgumentNullException("cabno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(cabno));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(creditcard));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(promopayment));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(touch));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(hpromo));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(comcomission));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(lbalance));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(amount));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(date));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(transfer_date));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_id));
            if ((Original_cabno == null)) {
                throw new global::System.ArgumentNullException("Original_cabno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_cabno));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Original_creditcard));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Original_promopayment));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Original_touch));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Original_hpromo));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(Original_comcomission));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Original_lbalance));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Original_amount));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_date));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_transfer_date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tuk_wallet_paymentsummaryTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tuk_wallet_paymentsummaryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tuk_wallet_paymentsummary";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("cabno", "cabno");
            tableMapping.ColumnMappings.Add("app", "app");
            tableMapping.ColumnMappings.Add("ccenter", "ccenter");
            tableMapping.ColumnMappings.Add("rpick", "rpick");
            tableMapping.ColumnMappings.Add("corporate", "corporate");
            tableMapping.ColumnMappings.Add("web", "web");
            tableMapping.ColumnMappings.Add("total_income", "total_income");
            tableMapping.ColumnMappings.Add("creditcard", "creditcard");
            tableMapping.ColumnMappings.Add("promopayment", "promopayment");
            tableMapping.ColumnMappings.Add("touch", "touch");
            tableMapping.ColumnMappings.Add("hpromo", "hpromo");
            tableMapping.ColumnMappings.Add("comcomission", "comcomission");
            tableMapping.ColumnMappings.Add("lbalance", "lbalance");
            tableMapping.ColumnMappings.Add("amount", "amount");
            tableMapping.ColumnMappings.Add("date", "date");
            tableMapping.ColumnMappings.Add("transfer_date", "transfer_date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `tuk_wallet_paymentsummary` WHERE ((`id` = @Original_id) AND (`cabno` = @Original_cabno) AND (`app` = @Original_app) AND (`ccenter` = @Original_ccenter) AND (`rpick` = @Original_rpick) AND (`corporate` = @Original_corporate) AND (`web` = @Original_web) AND (`total_income` = @Original_total_income) AND (`creditcard` = @Original_creditcard) AND (`promopayment` = @Original_promopayment) AND (`touch` = @Original_touch) AND (`hpromo` = @Original_hpromo) AND (`comcomission` = @Original_comcomission) AND (`lbalance` = @Original_lbalance) AND (`amount` = @Original_amount) AND (`date` = @Original_date) AND (`transfer_date` = @Original_transfer_date))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_app";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "app";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ccenter";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ccenter";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_rpick";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "rpick";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_corporate";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "corporate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_web";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "web";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_total_income";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "total_income";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_creditcard";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "creditcard";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_promopayment";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "promopayment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_touch";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "touch";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_hpromo";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "hpromo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_comcomission";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "comcomission";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_lbalance";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "lbalance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_transfer_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "transfer_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `tuk_wallet_paymentsummary` (`cabno`, `app`, `ccenter`, `rpick`, `corporate`, `web`, `total_income`, `creditcard`, `promopayment`, `touch`, `hpromo`, `comcomission`, `lbalance`, `amount`, `date`, `transfer_date`) VALUES (@cabno, @app, @ccenter, @rpick, @corporate, @web, @total_income, @creditcard, @promopayment, @touch, @hpromo, @comcomission, @lbalance, @amount, @date, @transfer_date)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@app";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "app";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ccenter";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ccenter";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@rpick";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "rpick";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@corporate";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "corporate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@web";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "web";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@total_income";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "total_income";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@creditcard";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "creditcard";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@promopayment";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "promopayment";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@touch";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "touch";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@hpromo";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "hpromo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@comcomission";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "comcomission";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@lbalance";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "lbalance";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@transfer_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "transfer_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `tuk_wallet_paymentsummary` SET `cabno` = @cabno, `app` = @app, `ccenter` = @ccenter, `rpick` = @rpick, `corporate` = @corporate, `web` = @web, `total_income` = @total_income, `creditcard` = @creditcard, `promopayment` = @promopayment, `touch` = @touch, `hpromo` = @hpromo, `comcomission` = @comcomission, `lbalance` = @lbalance, `amount` = @amount, `date` = @date, `transfer_date` = @transfer_date WHERE ((`id` = @Original_id) AND (`cabno` = @Original_cabno) AND (`app` = @Original_app) AND (`ccenter` = @Original_ccenter) AND (`rpick` = @Original_rpick) AND (`corporate` = @Original_corporate) AND (`web` = @Original_web) AND (`total_income` = @Original_total_income) AND (`creditcard` = @Original_creditcard) AND (`promopayment` = @Original_promopayment) AND (`touch` = @Original_touch) AND (`hpromo` = @Original_hpromo) AND (`comcomission` = @Original_comcomission) AND (`lbalance` = @Original_lbalance) AND (`amount` = @Original_amount) AND (`date` = @Original_date) AND (`transfer_date` = @Original_transfer_date))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@app";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "app";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ccenter";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ccenter";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@rpick";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "rpick";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@corporate";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "corporate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@web";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "web";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@total_income";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "total_income";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@creditcard";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "creditcard";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@promopayment";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "promopayment";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@touch";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "touch";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@hpromo";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "hpromo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@comcomission";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "comcomission";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@lbalance";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "lbalance";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@transfer_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "transfer_date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_cabno";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cabno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_app";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "app";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ccenter";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ccenter";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_rpick";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "rpick";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_corporate";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "corporate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_web";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "web";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_total_income";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "total_income";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_creditcard";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "creditcard";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_promopayment";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "promopayment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_touch";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "touch";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_hpromo";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "hpromo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_comcomission";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "comcomission";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_lbalance";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "lbalance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_transfer_date";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "transfer_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.accounts_reportsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `id`, `cabno`, `app`, `ccenter`, `rpick`, `corporate`, `web`, `total_incom" +
                "e`, `creditcard`, `promopayment`, `touch`, `hpromo`, `comcomission`, `lbalance`," +
                " `amount`, `date`, `transfer_date` FROM `tuk_wallet_paymentsummary`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(accounts_reportsDataSet.tuk_wallet_paymentsummaryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual accounts_reportsDataSet.tuk_wallet_paymentsummaryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            accounts_reportsDataSet.tuk_wallet_paymentsummaryDataTable dataTable = new accounts_reportsDataSet.tuk_wallet_paymentsummaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet.tuk_wallet_paymentsummaryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(accounts_reportsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tuk_wallet_paymentsummary");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    string Original_cabno, 
                    double Original_app, 
                    double Original_ccenter, 
                    double Original_rpick, 
                    double Original_corporate, 
                    double Original_web, 
                    double Original_total_income, 
                    double Original_creditcard, 
                    double Original_promopayment, 
                    double Original_touch, 
                    double Original_hpromo, 
                    double Original_comcomission, 
                    double Original_lbalance, 
                    double Original_amount, 
                    System.DateTime Original_date, 
                    System.DateTime Original_transfer_date) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_cabno == null)) {
                throw new global::System.ArgumentNullException("Original_cabno");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_cabno));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_app));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_ccenter));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_rpick));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_corporate));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_web));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_total_income));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_creditcard));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_promopayment));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_touch));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_hpromo));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_comcomission));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_lbalance));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_amount));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_date));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_transfer_date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string cabno, 
                    double app, 
                    double ccenter, 
                    double rpick, 
                    double corporate, 
                    double web, 
                    double total_income, 
                    double creditcard, 
                    double promopayment, 
                    double touch, 
                    double hpromo, 
                    double comcomission, 
                    double lbalance, 
                    double amount, 
                    System.DateTime date, 
                    System.DateTime transfer_date) {
            if ((cabno == null)) {
                throw new global::System.ArgumentNullException("cabno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(cabno));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((double)(app));
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(ccenter));
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(rpick));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(corporate));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(web));
            this.Adapter.InsertCommand.Parameters[6].Value = ((double)(total_income));
            this.Adapter.InsertCommand.Parameters[7].Value = ((double)(creditcard));
            this.Adapter.InsertCommand.Parameters[8].Value = ((double)(promopayment));
            this.Adapter.InsertCommand.Parameters[9].Value = ((double)(touch));
            this.Adapter.InsertCommand.Parameters[10].Value = ((double)(hpromo));
            this.Adapter.InsertCommand.Parameters[11].Value = ((double)(comcomission));
            this.Adapter.InsertCommand.Parameters[12].Value = ((double)(lbalance));
            this.Adapter.InsertCommand.Parameters[13].Value = ((double)(amount));
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(date));
            this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(transfer_date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string cabno, 
                    double app, 
                    double ccenter, 
                    double rpick, 
                    double corporate, 
                    double web, 
                    double total_income, 
                    double creditcard, 
                    double promopayment, 
                    double touch, 
                    double hpromo, 
                    double comcomission, 
                    double lbalance, 
                    double amount, 
                    System.DateTime date, 
                    System.DateTime transfer_date, 
                    int Original_id, 
                    string Original_cabno, 
                    double Original_app, 
                    double Original_ccenter, 
                    double Original_rpick, 
                    double Original_corporate, 
                    double Original_web, 
                    double Original_total_income, 
                    double Original_creditcard, 
                    double Original_promopayment, 
                    double Original_touch, 
                    double Original_hpromo, 
                    double Original_comcomission, 
                    double Original_lbalance, 
                    double Original_amount, 
                    System.DateTime Original_date, 
                    System.DateTime Original_transfer_date) {
            if ((cabno == null)) {
                throw new global::System.ArgumentNullException("cabno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(cabno));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(app));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(ccenter));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(rpick));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(corporate));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(web));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(total_income));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(creditcard));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(promopayment));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(touch));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(hpromo));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(comcomission));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(lbalance));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(amount));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(date));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(transfer_date));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_id));
            if ((Original_cabno == null)) {
                throw new global::System.ArgumentNullException("Original_cabno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_cabno));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Original_app));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(Original_ccenter));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(Original_rpick));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(Original_corporate));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Original_web));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Original_total_income));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(Original_creditcard));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(Original_promopayment));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(Original_touch));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Original_hpromo));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(Original_comcomission));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(Original_lbalance));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(Original_amount));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(Original_date));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_transfer_date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class achiniTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public achiniTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "achini";
            tableMapping.ColumnMappings.Add("cabno", "cabno");
            tableMapping.ColumnMappings.Add("Sum(`total`)", "Sum(`total`)");
            tableMapping.ColumnMappings.Add("credit_transferdate", "credit_transferdate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.accounts_reportsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `cabno`, `Sum(``total``)`, `credit_transferdate` FROM `accounts_reports`.`" +
                "achini`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(accounts_reportsDataSet.achiniDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual accounts_reportsDataSet.achiniDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            accounts_reportsDataSet.achiniDataTable dataTable = new accounts_reportsDataSet.achiniDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bank_brach_codeTableAdapter _bank_brach_codeTableAdapter;
        
        private bankcodeTableAdapter _bankcodeTableAdapter;
        
        private bookingsTableAdapter _bookingsTableAdapter;
        
        private cashier_cashTableAdapter _cashier_cashTableAdapter;
        
        private hibernate_sequenceTableAdapter _hibernate_sequenceTableAdapter;
        
        private tuk_acc_detailTableAdapter _tuk_acc_detailTableAdapter;
        
        private tuk_lastbalanceTableAdapter _tuk_lastbalanceTableAdapter;
        
        private tuk_sp_promoTableAdapter _tuk_sp_promoTableAdapter;
        
        private tuk_transferpayment_DateTableAdapter _tuk_transferpayment_DateTableAdapter;
        
        private tuk_wallet_hiresTableAdapter _tuk_wallet_hiresTableAdapter;
        
        private tuk_wallet_paymentTableAdapter _tuk_wallet_paymentTableAdapter;
        
        private tuk_wallet_paymentsummaryTableAdapter _tuk_wallet_paymentsummaryTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public bank_brach_codeTableAdapter bank_brach_codeTableAdapter {
            get {
                return this._bank_brach_codeTableAdapter;
            }
            set {
                this._bank_brach_codeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public bankcodeTableAdapter bankcodeTableAdapter {
            get {
                return this._bankcodeTableAdapter;
            }
            set {
                this._bankcodeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public bookingsTableAdapter bookingsTableAdapter {
            get {
                return this._bookingsTableAdapter;
            }
            set {
                this._bookingsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public cashier_cashTableAdapter cashier_cashTableAdapter {
            get {
                return this._cashier_cashTableAdapter;
            }
            set {
                this._cashier_cashTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public hibernate_sequenceTableAdapter hibernate_sequenceTableAdapter {
            get {
                return this._hibernate_sequenceTableAdapter;
            }
            set {
                this._hibernate_sequenceTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tuk_acc_detailTableAdapter tuk_acc_detailTableAdapter {
            get {
                return this._tuk_acc_detailTableAdapter;
            }
            set {
                this._tuk_acc_detailTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tuk_lastbalanceTableAdapter tuk_lastbalanceTableAdapter {
            get {
                return this._tuk_lastbalanceTableAdapter;
            }
            set {
                this._tuk_lastbalanceTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tuk_sp_promoTableAdapter tuk_sp_promoTableAdapter {
            get {
                return this._tuk_sp_promoTableAdapter;
            }
            set {
                this._tuk_sp_promoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tuk_transferpayment_DateTableAdapter tuk_transferpayment_DateTableAdapter {
            get {
                return this._tuk_transferpayment_DateTableAdapter;
            }
            set {
                this._tuk_transferpayment_DateTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tuk_wallet_hiresTableAdapter tuk_wallet_hiresTableAdapter {
            get {
                return this._tuk_wallet_hiresTableAdapter;
            }
            set {
                this._tuk_wallet_hiresTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tuk_wallet_paymentTableAdapter tuk_wallet_paymentTableAdapter {
            get {
                return this._tuk_wallet_paymentTableAdapter;
            }
            set {
                this._tuk_wallet_paymentTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tuk_wallet_paymentsummaryTableAdapter tuk_wallet_paymentsummaryTableAdapter {
            get {
                return this._tuk_wallet_paymentsummaryTableAdapter;
            }
            set {
                this._tuk_wallet_paymentsummaryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._bank_brach_codeTableAdapter != null) 
                            && (this._bank_brach_codeTableAdapter.Connection != null))) {
                    return this._bank_brach_codeTableAdapter.Connection;
                }
                if (((this._bankcodeTableAdapter != null) 
                            && (this._bankcodeTableAdapter.Connection != null))) {
                    return this._bankcodeTableAdapter.Connection;
                }
                if (((this._bookingsTableAdapter != null) 
                            && (this._bookingsTableAdapter.Connection != null))) {
                    return this._bookingsTableAdapter.Connection;
                }
                if (((this._cashier_cashTableAdapter != null) 
                            && (this._cashier_cashTableAdapter.Connection != null))) {
                    return this._cashier_cashTableAdapter.Connection;
                }
                if (((this._hibernate_sequenceTableAdapter != null) 
                            && (this._hibernate_sequenceTableAdapter.Connection != null))) {
                    return this._hibernate_sequenceTableAdapter.Connection;
                }
                if (((this._tuk_acc_detailTableAdapter != null) 
                            && (this._tuk_acc_detailTableAdapter.Connection != null))) {
                    return this._tuk_acc_detailTableAdapter.Connection;
                }
                if (((this._tuk_lastbalanceTableAdapter != null) 
                            && (this._tuk_lastbalanceTableAdapter.Connection != null))) {
                    return this._tuk_lastbalanceTableAdapter.Connection;
                }
                if (((this._tuk_sp_promoTableAdapter != null) 
                            && (this._tuk_sp_promoTableAdapter.Connection != null))) {
                    return this._tuk_sp_promoTableAdapter.Connection;
                }
                if (((this._tuk_transferpayment_DateTableAdapter != null) 
                            && (this._tuk_transferpayment_DateTableAdapter.Connection != null))) {
                    return this._tuk_transferpayment_DateTableAdapter.Connection;
                }
                if (((this._tuk_wallet_hiresTableAdapter != null) 
                            && (this._tuk_wallet_hiresTableAdapter.Connection != null))) {
                    return this._tuk_wallet_hiresTableAdapter.Connection;
                }
                if (((this._tuk_wallet_paymentTableAdapter != null) 
                            && (this._tuk_wallet_paymentTableAdapter.Connection != null))) {
                    return this._tuk_wallet_paymentTableAdapter.Connection;
                }
                if (((this._tuk_wallet_paymentsummaryTableAdapter != null) 
                            && (this._tuk_wallet_paymentsummaryTableAdapter.Connection != null))) {
                    return this._tuk_wallet_paymentsummaryTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._bank_brach_codeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bankcodeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bookingsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cashier_cashTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hibernate_sequenceTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tuk_acc_detailTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tuk_lastbalanceTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tuk_sp_promoTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tuk_transferpayment_DateTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tuk_wallet_hiresTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tuk_wallet_paymentTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tuk_wallet_paymentsummaryTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(accounts_reportsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._bank_brach_codeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.bank_brach_code.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bank_brach_codeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bankcodeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.bankcode.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bankcodeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bookingsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.bookings.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bookingsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cashier_cashTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.cashier_cash.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cashier_cashTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hibernate_sequenceTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.hibernate_sequence.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hibernate_sequenceTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tuk_acc_detailTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tuk_acc_detail.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tuk_acc_detailTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tuk_lastbalanceTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tuk_lastbalance.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tuk_lastbalanceTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tuk_sp_promoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tuk_sp_promo.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tuk_sp_promoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tuk_transferpayment_DateTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tuk_transferpayment_Date.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tuk_transferpayment_DateTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tuk_wallet_hiresTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tuk_wallet_hires.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tuk_wallet_hiresTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tuk_wallet_paymentTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tuk_wallet_payment.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tuk_wallet_paymentTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tuk_wallet_paymentsummaryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tuk_wallet_paymentsummary.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tuk_wallet_paymentsummaryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(accounts_reportsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._bank_brach_codeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.bank_brach_code.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bank_brach_codeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bankcodeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.bankcode.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bankcodeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bookingsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.bookings.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bookingsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cashier_cashTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.cashier_cash.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cashier_cashTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hibernate_sequenceTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.hibernate_sequence.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hibernate_sequenceTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tuk_acc_detailTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tuk_acc_detail.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tuk_acc_detailTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tuk_lastbalanceTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tuk_lastbalance.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tuk_lastbalanceTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tuk_sp_promoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tuk_sp_promo.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tuk_sp_promoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tuk_transferpayment_DateTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tuk_transferpayment_Date.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tuk_transferpayment_DateTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tuk_wallet_hiresTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tuk_wallet_hires.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tuk_wallet_hiresTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tuk_wallet_paymentTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tuk_wallet_payment.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tuk_wallet_paymentTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tuk_wallet_paymentsummaryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tuk_wallet_paymentsummary.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tuk_wallet_paymentsummaryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(accounts_reportsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tuk_wallet_paymentsummaryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tuk_wallet_paymentsummary.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tuk_wallet_paymentsummaryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tuk_wallet_paymentTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tuk_wallet_payment.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tuk_wallet_paymentTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tuk_wallet_hiresTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tuk_wallet_hires.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tuk_wallet_hiresTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tuk_transferpayment_DateTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tuk_transferpayment_Date.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tuk_transferpayment_DateTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tuk_sp_promoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tuk_sp_promo.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tuk_sp_promoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tuk_lastbalanceTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tuk_lastbalance.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tuk_lastbalanceTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tuk_acc_detailTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tuk_acc_detail.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tuk_acc_detailTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hibernate_sequenceTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.hibernate_sequence.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hibernate_sequenceTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cashier_cashTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.cashier_cash.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cashier_cashTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bookingsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.bookings.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bookingsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bankcodeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.bankcode.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bankcodeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bank_brach_codeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.bank_brach_code.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bank_brach_codeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(accounts_reportsDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._bank_brach_codeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bank_brach_codeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bankcodeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bankcodeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bookingsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bookingsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cashier_cashTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cashier_cashTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._hibernate_sequenceTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hibernate_sequenceTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tuk_acc_detailTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tuk_acc_detailTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tuk_lastbalanceTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tuk_lastbalanceTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tuk_sp_promoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tuk_sp_promoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tuk_transferpayment_DateTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tuk_transferpayment_DateTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tuk_wallet_hiresTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tuk_wallet_hiresTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tuk_wallet_paymentTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tuk_wallet_paymentTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tuk_wallet_paymentsummaryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tuk_wallet_paymentsummaryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._bank_brach_codeTableAdapter != null)) {
                    revertConnections.Add(this._bank_brach_codeTableAdapter, this._bank_brach_codeTableAdapter.Connection);
                    this._bank_brach_codeTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._bank_brach_codeTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._bank_brach_codeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bank_brach_codeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bank_brach_codeTableAdapter.Adapter);
                    }
                }
                if ((this._bankcodeTableAdapter != null)) {
                    revertConnections.Add(this._bankcodeTableAdapter, this._bankcodeTableAdapter.Connection);
                    this._bankcodeTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._bankcodeTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._bankcodeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bankcodeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bankcodeTableAdapter.Adapter);
                    }
                }
                if ((this._bookingsTableAdapter != null)) {
                    revertConnections.Add(this._bookingsTableAdapter, this._bookingsTableAdapter.Connection);
                    this._bookingsTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._bookingsTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._bookingsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bookingsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bookingsTableAdapter.Adapter);
                    }
                }
                if ((this._cashier_cashTableAdapter != null)) {
                    revertConnections.Add(this._cashier_cashTableAdapter, this._cashier_cashTableAdapter.Connection);
                    this._cashier_cashTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._cashier_cashTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._cashier_cashTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cashier_cashTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cashier_cashTableAdapter.Adapter);
                    }
                }
                if ((this._hibernate_sequenceTableAdapter != null)) {
                    revertConnections.Add(this._hibernate_sequenceTableAdapter, this._hibernate_sequenceTableAdapter.Connection);
                    this._hibernate_sequenceTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._hibernate_sequenceTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._hibernate_sequenceTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hibernate_sequenceTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hibernate_sequenceTableAdapter.Adapter);
                    }
                }
                if ((this._tuk_acc_detailTableAdapter != null)) {
                    revertConnections.Add(this._tuk_acc_detailTableAdapter, this._tuk_acc_detailTableAdapter.Connection);
                    this._tuk_acc_detailTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._tuk_acc_detailTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._tuk_acc_detailTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tuk_acc_detailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tuk_acc_detailTableAdapter.Adapter);
                    }
                }
                if ((this._tuk_lastbalanceTableAdapter != null)) {
                    revertConnections.Add(this._tuk_lastbalanceTableAdapter, this._tuk_lastbalanceTableAdapter.Connection);
                    this._tuk_lastbalanceTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._tuk_lastbalanceTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._tuk_lastbalanceTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tuk_lastbalanceTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tuk_lastbalanceTableAdapter.Adapter);
                    }
                }
                if ((this._tuk_sp_promoTableAdapter != null)) {
                    revertConnections.Add(this._tuk_sp_promoTableAdapter, this._tuk_sp_promoTableAdapter.Connection);
                    this._tuk_sp_promoTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._tuk_sp_promoTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._tuk_sp_promoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tuk_sp_promoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tuk_sp_promoTableAdapter.Adapter);
                    }
                }
                if ((this._tuk_transferpayment_DateTableAdapter != null)) {
                    revertConnections.Add(this._tuk_transferpayment_DateTableAdapter, this._tuk_transferpayment_DateTableAdapter.Connection);
                    this._tuk_transferpayment_DateTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._tuk_transferpayment_DateTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._tuk_transferpayment_DateTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tuk_transferpayment_DateTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tuk_transferpayment_DateTableAdapter.Adapter);
                    }
                }
                if ((this._tuk_wallet_hiresTableAdapter != null)) {
                    revertConnections.Add(this._tuk_wallet_hiresTableAdapter, this._tuk_wallet_hiresTableAdapter.Connection);
                    this._tuk_wallet_hiresTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._tuk_wallet_hiresTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._tuk_wallet_hiresTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tuk_wallet_hiresTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tuk_wallet_hiresTableAdapter.Adapter);
                    }
                }
                if ((this._tuk_wallet_paymentTableAdapter != null)) {
                    revertConnections.Add(this._tuk_wallet_paymentTableAdapter, this._tuk_wallet_paymentTableAdapter.Connection);
                    this._tuk_wallet_paymentTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._tuk_wallet_paymentTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._tuk_wallet_paymentTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tuk_wallet_paymentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tuk_wallet_paymentTableAdapter.Adapter);
                    }
                }
                if ((this._tuk_wallet_paymentsummaryTableAdapter != null)) {
                    revertConnections.Add(this._tuk_wallet_paymentsummaryTableAdapter, this._tuk_wallet_paymentsummaryTableAdapter.Connection);
                    this._tuk_wallet_paymentsummaryTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._tuk_wallet_paymentsummaryTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._tuk_wallet_paymentsummaryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tuk_wallet_paymentsummaryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tuk_wallet_paymentsummaryTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._bank_brach_codeTableAdapter != null)) {
                    this._bank_brach_codeTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._bank_brach_codeTableAdapter]));
                    this._bank_brach_codeTableAdapter.Transaction = null;
                }
                if ((this._bankcodeTableAdapter != null)) {
                    this._bankcodeTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._bankcodeTableAdapter]));
                    this._bankcodeTableAdapter.Transaction = null;
                }
                if ((this._bookingsTableAdapter != null)) {
                    this._bookingsTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._bookingsTableAdapter]));
                    this._bookingsTableAdapter.Transaction = null;
                }
                if ((this._cashier_cashTableAdapter != null)) {
                    this._cashier_cashTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._cashier_cashTableAdapter]));
                    this._cashier_cashTableAdapter.Transaction = null;
                }
                if ((this._hibernate_sequenceTableAdapter != null)) {
                    this._hibernate_sequenceTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._hibernate_sequenceTableAdapter]));
                    this._hibernate_sequenceTableAdapter.Transaction = null;
                }
                if ((this._tuk_acc_detailTableAdapter != null)) {
                    this._tuk_acc_detailTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._tuk_acc_detailTableAdapter]));
                    this._tuk_acc_detailTableAdapter.Transaction = null;
                }
                if ((this._tuk_lastbalanceTableAdapter != null)) {
                    this._tuk_lastbalanceTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._tuk_lastbalanceTableAdapter]));
                    this._tuk_lastbalanceTableAdapter.Transaction = null;
                }
                if ((this._tuk_sp_promoTableAdapter != null)) {
                    this._tuk_sp_promoTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._tuk_sp_promoTableAdapter]));
                    this._tuk_sp_promoTableAdapter.Transaction = null;
                }
                if ((this._tuk_transferpayment_DateTableAdapter != null)) {
                    this._tuk_transferpayment_DateTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._tuk_transferpayment_DateTableAdapter]));
                    this._tuk_transferpayment_DateTableAdapter.Transaction = null;
                }
                if ((this._tuk_wallet_hiresTableAdapter != null)) {
                    this._tuk_wallet_hiresTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._tuk_wallet_hiresTableAdapter]));
                    this._tuk_wallet_hiresTableAdapter.Transaction = null;
                }
                if ((this._tuk_wallet_paymentTableAdapter != null)) {
                    this._tuk_wallet_paymentTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._tuk_wallet_paymentTableAdapter]));
                    this._tuk_wallet_paymentTableAdapter.Transaction = null;
                }
                if ((this._tuk_wallet_paymentsummaryTableAdapter != null)) {
                    this._tuk_wallet_paymentsummaryTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._tuk_wallet_paymentsummaryTableAdapter]));
                    this._tuk_wallet_paymentsummaryTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591
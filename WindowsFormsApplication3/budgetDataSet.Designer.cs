//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WindowsFormsApplication3 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("budgetDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class budgetDataSet : global::System.Data.DataSet {
        
        private AppBookingCancelationDataTable tableAppBookingCancelation;
        
        private booking_statusDataTable tablebooking_status;
        
        private BookinStatusLogDataTable tableBookinStatusLog;
        
        private CancelBookingDataTable tableCancelBooking;
        
        private CancelBookingNewDataTable tableCancelBookingNew;
        
        private ClientFavoriteDataTable tableClientFavorite;
        
        private ClientMobileRegistrationOldDataTable tableClientMobileRegistrationOld;
        
        private DespatchBookingDataTable tableDespatchBooking;
        
        private DespatchBookingStatusDataTable tableDespatchBookingStatus;
        
        private DisEngageBookingDataTable tableDisEngageBooking;
        
        private driver_log_onoffDataTable tabledriver_log_onoff;
        
        private driver_mobile_registrationDataTable tabledriver_mobile_registration;
        
        private driver_status_identifierDataTable tabledriver_status_identifier;
        
        private DriverStatusDataTable tableDriverStatus;
        
        private EMAILDataTable tableEMAIL;
        
        private fleet_monitorDataTable tablefleet_monitor;
        
        private GpsFailDataTable tableGpsFail;
        
        private GPSMStatDataTable tableGPSMStat;
        
        private log_dataDataTable tablelog_data;
        
        private LogOffDataTable tableLogOff;
        
        private LogSheetDataTable tableLogSheet;
        
        private NonAcceptBookingDataTable tableNonAcceptBooking;
        
        private NonAcceptDespatchBookingDataTable tableNonAcceptDespatchBooking;
        
        private NonDespatchBookingsDataTable tableNonDespatchBookings;
        
        private paraDataTable tablepara;
        
        private PCUsedDataTable tablePCUsed;
        
        private RatesDataTable tableRates;
        
        private RatesNightDataTable tableRatesNight;
        
        private SMSDataTable tableSMS;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public budgetDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected budgetDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["AppBookingCancelation"] != null)) {
                    base.Tables.Add(new AppBookingCancelationDataTable(ds.Tables["AppBookingCancelation"]));
                }
                if ((ds.Tables["booking_status"] != null)) {
                    base.Tables.Add(new booking_statusDataTable(ds.Tables["booking_status"]));
                }
                if ((ds.Tables["BookinStatusLog"] != null)) {
                    base.Tables.Add(new BookinStatusLogDataTable(ds.Tables["BookinStatusLog"]));
                }
                if ((ds.Tables["CancelBooking"] != null)) {
                    base.Tables.Add(new CancelBookingDataTable(ds.Tables["CancelBooking"]));
                }
                if ((ds.Tables["CancelBookingNew"] != null)) {
                    base.Tables.Add(new CancelBookingNewDataTable(ds.Tables["CancelBookingNew"]));
                }
                if ((ds.Tables["ClientFavorite"] != null)) {
                    base.Tables.Add(new ClientFavoriteDataTable(ds.Tables["ClientFavorite"]));
                }
                if ((ds.Tables["ClientMobileRegistrationOld"] != null)) {
                    base.Tables.Add(new ClientMobileRegistrationOldDataTable(ds.Tables["ClientMobileRegistrationOld"]));
                }
                if ((ds.Tables["DespatchBooking"] != null)) {
                    base.Tables.Add(new DespatchBookingDataTable(ds.Tables["DespatchBooking"]));
                }
                if ((ds.Tables["DespatchBookingStatus"] != null)) {
                    base.Tables.Add(new DespatchBookingStatusDataTable(ds.Tables["DespatchBookingStatus"]));
                }
                if ((ds.Tables["DisEngageBooking"] != null)) {
                    base.Tables.Add(new DisEngageBookingDataTable(ds.Tables["DisEngageBooking"]));
                }
                if ((ds.Tables["driver_log_onoff"] != null)) {
                    base.Tables.Add(new driver_log_onoffDataTable(ds.Tables["driver_log_onoff"]));
                }
                if ((ds.Tables["driver_mobile_registration"] != null)) {
                    base.Tables.Add(new driver_mobile_registrationDataTable(ds.Tables["driver_mobile_registration"]));
                }
                if ((ds.Tables["driver_status_identifier"] != null)) {
                    base.Tables.Add(new driver_status_identifierDataTable(ds.Tables["driver_status_identifier"]));
                }
                if ((ds.Tables["DriverStatus"] != null)) {
                    base.Tables.Add(new DriverStatusDataTable(ds.Tables["DriverStatus"]));
                }
                if ((ds.Tables["EMAIL"] != null)) {
                    base.Tables.Add(new EMAILDataTable(ds.Tables["EMAIL"]));
                }
                if ((ds.Tables["fleet_monitor"] != null)) {
                    base.Tables.Add(new fleet_monitorDataTable(ds.Tables["fleet_monitor"]));
                }
                if ((ds.Tables["GpsFail"] != null)) {
                    base.Tables.Add(new GpsFailDataTable(ds.Tables["GpsFail"]));
                }
                if ((ds.Tables["GPSMStat"] != null)) {
                    base.Tables.Add(new GPSMStatDataTable(ds.Tables["GPSMStat"]));
                }
                if ((ds.Tables["log_data"] != null)) {
                    base.Tables.Add(new log_dataDataTable(ds.Tables["log_data"]));
                }
                if ((ds.Tables["LogOff"] != null)) {
                    base.Tables.Add(new LogOffDataTable(ds.Tables["LogOff"]));
                }
                if ((ds.Tables["LogSheet"] != null)) {
                    base.Tables.Add(new LogSheetDataTable(ds.Tables["LogSheet"]));
                }
                if ((ds.Tables["NonAcceptBooking"] != null)) {
                    base.Tables.Add(new NonAcceptBookingDataTable(ds.Tables["NonAcceptBooking"]));
                }
                if ((ds.Tables["NonAcceptDespatchBooking"] != null)) {
                    base.Tables.Add(new NonAcceptDespatchBookingDataTable(ds.Tables["NonAcceptDespatchBooking"]));
                }
                if ((ds.Tables["NonDespatchBookings"] != null)) {
                    base.Tables.Add(new NonDespatchBookingsDataTable(ds.Tables["NonDespatchBookings"]));
                }
                if ((ds.Tables["para"] != null)) {
                    base.Tables.Add(new paraDataTable(ds.Tables["para"]));
                }
                if ((ds.Tables["PCUsed"] != null)) {
                    base.Tables.Add(new PCUsedDataTable(ds.Tables["PCUsed"]));
                }
                if ((ds.Tables["Rates"] != null)) {
                    base.Tables.Add(new RatesDataTable(ds.Tables["Rates"]));
                }
                if ((ds.Tables["RatesNight"] != null)) {
                    base.Tables.Add(new RatesNightDataTable(ds.Tables["RatesNight"]));
                }
                if ((ds.Tables["SMS"] != null)) {
                    base.Tables.Add(new SMSDataTable(ds.Tables["SMS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AppBookingCancelationDataTable AppBookingCancelation {
            get {
                return this.tableAppBookingCancelation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public booking_statusDataTable booking_status {
            get {
                return this.tablebooking_status;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BookinStatusLogDataTable BookinStatusLog {
            get {
                return this.tableBookinStatusLog;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CancelBookingDataTable CancelBooking {
            get {
                return this.tableCancelBooking;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CancelBookingNewDataTable CancelBookingNew {
            get {
                return this.tableCancelBookingNew;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClientFavoriteDataTable ClientFavorite {
            get {
                return this.tableClientFavorite;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClientMobileRegistrationOldDataTable ClientMobileRegistrationOld {
            get {
                return this.tableClientMobileRegistrationOld;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DespatchBookingDataTable DespatchBooking {
            get {
                return this.tableDespatchBooking;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DespatchBookingStatusDataTable DespatchBookingStatus {
            get {
                return this.tableDespatchBookingStatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DisEngageBookingDataTable DisEngageBooking {
            get {
                return this.tableDisEngageBooking;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public driver_log_onoffDataTable driver_log_onoff {
            get {
                return this.tabledriver_log_onoff;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public driver_mobile_registrationDataTable driver_mobile_registration {
            get {
                return this.tabledriver_mobile_registration;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public driver_status_identifierDataTable driver_status_identifier {
            get {
                return this.tabledriver_status_identifier;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DriverStatusDataTable DriverStatus {
            get {
                return this.tableDriverStatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EMAILDataTable EMAIL {
            get {
                return this.tableEMAIL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public fleet_monitorDataTable fleet_monitor {
            get {
                return this.tablefleet_monitor;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GpsFailDataTable GpsFail {
            get {
                return this.tableGpsFail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GPSMStatDataTable GPSMStat {
            get {
                return this.tableGPSMStat;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public log_dataDataTable log_data {
            get {
                return this.tablelog_data;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LogOffDataTable LogOff {
            get {
                return this.tableLogOff;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LogSheetDataTable LogSheet {
            get {
                return this.tableLogSheet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NonAcceptBookingDataTable NonAcceptBooking {
            get {
                return this.tableNonAcceptBooking;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NonAcceptDespatchBookingDataTable NonAcceptDespatchBooking {
            get {
                return this.tableNonAcceptDespatchBooking;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NonDespatchBookingsDataTable NonDespatchBookings {
            get {
                return this.tableNonDespatchBookings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public paraDataTable para {
            get {
                return this.tablepara;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PCUsedDataTable PCUsed {
            get {
                return this.tablePCUsed;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RatesDataTable Rates {
            get {
                return this.tableRates;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RatesNightDataTable RatesNight {
            get {
                return this.tableRatesNight;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SMSDataTable SMS {
            get {
                return this.tableSMS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            budgetDataSet cln = ((budgetDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["AppBookingCancelation"] != null)) {
                    base.Tables.Add(new AppBookingCancelationDataTable(ds.Tables["AppBookingCancelation"]));
                }
                if ((ds.Tables["booking_status"] != null)) {
                    base.Tables.Add(new booking_statusDataTable(ds.Tables["booking_status"]));
                }
                if ((ds.Tables["BookinStatusLog"] != null)) {
                    base.Tables.Add(new BookinStatusLogDataTable(ds.Tables["BookinStatusLog"]));
                }
                if ((ds.Tables["CancelBooking"] != null)) {
                    base.Tables.Add(new CancelBookingDataTable(ds.Tables["CancelBooking"]));
                }
                if ((ds.Tables["CancelBookingNew"] != null)) {
                    base.Tables.Add(new CancelBookingNewDataTable(ds.Tables["CancelBookingNew"]));
                }
                if ((ds.Tables["ClientFavorite"] != null)) {
                    base.Tables.Add(new ClientFavoriteDataTable(ds.Tables["ClientFavorite"]));
                }
                if ((ds.Tables["ClientMobileRegistrationOld"] != null)) {
                    base.Tables.Add(new ClientMobileRegistrationOldDataTable(ds.Tables["ClientMobileRegistrationOld"]));
                }
                if ((ds.Tables["DespatchBooking"] != null)) {
                    base.Tables.Add(new DespatchBookingDataTable(ds.Tables["DespatchBooking"]));
                }
                if ((ds.Tables["DespatchBookingStatus"] != null)) {
                    base.Tables.Add(new DespatchBookingStatusDataTable(ds.Tables["DespatchBookingStatus"]));
                }
                if ((ds.Tables["DisEngageBooking"] != null)) {
                    base.Tables.Add(new DisEngageBookingDataTable(ds.Tables["DisEngageBooking"]));
                }
                if ((ds.Tables["driver_log_onoff"] != null)) {
                    base.Tables.Add(new driver_log_onoffDataTable(ds.Tables["driver_log_onoff"]));
                }
                if ((ds.Tables["driver_mobile_registration"] != null)) {
                    base.Tables.Add(new driver_mobile_registrationDataTable(ds.Tables["driver_mobile_registration"]));
                }
                if ((ds.Tables["driver_status_identifier"] != null)) {
                    base.Tables.Add(new driver_status_identifierDataTable(ds.Tables["driver_status_identifier"]));
                }
                if ((ds.Tables["DriverStatus"] != null)) {
                    base.Tables.Add(new DriverStatusDataTable(ds.Tables["DriverStatus"]));
                }
                if ((ds.Tables["EMAIL"] != null)) {
                    base.Tables.Add(new EMAILDataTable(ds.Tables["EMAIL"]));
                }
                if ((ds.Tables["fleet_monitor"] != null)) {
                    base.Tables.Add(new fleet_monitorDataTable(ds.Tables["fleet_monitor"]));
                }
                if ((ds.Tables["GpsFail"] != null)) {
                    base.Tables.Add(new GpsFailDataTable(ds.Tables["GpsFail"]));
                }
                if ((ds.Tables["GPSMStat"] != null)) {
                    base.Tables.Add(new GPSMStatDataTable(ds.Tables["GPSMStat"]));
                }
                if ((ds.Tables["log_data"] != null)) {
                    base.Tables.Add(new log_dataDataTable(ds.Tables["log_data"]));
                }
                if ((ds.Tables["LogOff"] != null)) {
                    base.Tables.Add(new LogOffDataTable(ds.Tables["LogOff"]));
                }
                if ((ds.Tables["LogSheet"] != null)) {
                    base.Tables.Add(new LogSheetDataTable(ds.Tables["LogSheet"]));
                }
                if ((ds.Tables["NonAcceptBooking"] != null)) {
                    base.Tables.Add(new NonAcceptBookingDataTable(ds.Tables["NonAcceptBooking"]));
                }
                if ((ds.Tables["NonAcceptDespatchBooking"] != null)) {
                    base.Tables.Add(new NonAcceptDespatchBookingDataTable(ds.Tables["NonAcceptDespatchBooking"]));
                }
                if ((ds.Tables["NonDespatchBookings"] != null)) {
                    base.Tables.Add(new NonDespatchBookingsDataTable(ds.Tables["NonDespatchBookings"]));
                }
                if ((ds.Tables["para"] != null)) {
                    base.Tables.Add(new paraDataTable(ds.Tables["para"]));
                }
                if ((ds.Tables["PCUsed"] != null)) {
                    base.Tables.Add(new PCUsedDataTable(ds.Tables["PCUsed"]));
                }
                if ((ds.Tables["Rates"] != null)) {
                    base.Tables.Add(new RatesDataTable(ds.Tables["Rates"]));
                }
                if ((ds.Tables["RatesNight"] != null)) {
                    base.Tables.Add(new RatesNightDataTable(ds.Tables["RatesNight"]));
                }
                if ((ds.Tables["SMS"] != null)) {
                    base.Tables.Add(new SMSDataTable(ds.Tables["SMS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableAppBookingCancelation = ((AppBookingCancelationDataTable)(base.Tables["AppBookingCancelation"]));
            if ((initTable == true)) {
                if ((this.tableAppBookingCancelation != null)) {
                    this.tableAppBookingCancelation.InitVars();
                }
            }
            this.tablebooking_status = ((booking_statusDataTable)(base.Tables["booking_status"]));
            if ((initTable == true)) {
                if ((this.tablebooking_status != null)) {
                    this.tablebooking_status.InitVars();
                }
            }
            this.tableBookinStatusLog = ((BookinStatusLogDataTable)(base.Tables["BookinStatusLog"]));
            if ((initTable == true)) {
                if ((this.tableBookinStatusLog != null)) {
                    this.tableBookinStatusLog.InitVars();
                }
            }
            this.tableCancelBooking = ((CancelBookingDataTable)(base.Tables["CancelBooking"]));
            if ((initTable == true)) {
                if ((this.tableCancelBooking != null)) {
                    this.tableCancelBooking.InitVars();
                }
            }
            this.tableCancelBookingNew = ((CancelBookingNewDataTable)(base.Tables["CancelBookingNew"]));
            if ((initTable == true)) {
                if ((this.tableCancelBookingNew != null)) {
                    this.tableCancelBookingNew.InitVars();
                }
            }
            this.tableClientFavorite = ((ClientFavoriteDataTable)(base.Tables["ClientFavorite"]));
            if ((initTable == true)) {
                if ((this.tableClientFavorite != null)) {
                    this.tableClientFavorite.InitVars();
                }
            }
            this.tableClientMobileRegistrationOld = ((ClientMobileRegistrationOldDataTable)(base.Tables["ClientMobileRegistrationOld"]));
            if ((initTable == true)) {
                if ((this.tableClientMobileRegistrationOld != null)) {
                    this.tableClientMobileRegistrationOld.InitVars();
                }
            }
            this.tableDespatchBooking = ((DespatchBookingDataTable)(base.Tables["DespatchBooking"]));
            if ((initTable == true)) {
                if ((this.tableDespatchBooking != null)) {
                    this.tableDespatchBooking.InitVars();
                }
            }
            this.tableDespatchBookingStatus = ((DespatchBookingStatusDataTable)(base.Tables["DespatchBookingStatus"]));
            if ((initTable == true)) {
                if ((this.tableDespatchBookingStatus != null)) {
                    this.tableDespatchBookingStatus.InitVars();
                }
            }
            this.tableDisEngageBooking = ((DisEngageBookingDataTable)(base.Tables["DisEngageBooking"]));
            if ((initTable == true)) {
                if ((this.tableDisEngageBooking != null)) {
                    this.tableDisEngageBooking.InitVars();
                }
            }
            this.tabledriver_log_onoff = ((driver_log_onoffDataTable)(base.Tables["driver_log_onoff"]));
            if ((initTable == true)) {
                if ((this.tabledriver_log_onoff != null)) {
                    this.tabledriver_log_onoff.InitVars();
                }
            }
            this.tabledriver_mobile_registration = ((driver_mobile_registrationDataTable)(base.Tables["driver_mobile_registration"]));
            if ((initTable == true)) {
                if ((this.tabledriver_mobile_registration != null)) {
                    this.tabledriver_mobile_registration.InitVars();
                }
            }
            this.tabledriver_status_identifier = ((driver_status_identifierDataTable)(base.Tables["driver_status_identifier"]));
            if ((initTable == true)) {
                if ((this.tabledriver_status_identifier != null)) {
                    this.tabledriver_status_identifier.InitVars();
                }
            }
            this.tableDriverStatus = ((DriverStatusDataTable)(base.Tables["DriverStatus"]));
            if ((initTable == true)) {
                if ((this.tableDriverStatus != null)) {
                    this.tableDriverStatus.InitVars();
                }
            }
            this.tableEMAIL = ((EMAILDataTable)(base.Tables["EMAIL"]));
            if ((initTable == true)) {
                if ((this.tableEMAIL != null)) {
                    this.tableEMAIL.InitVars();
                }
            }
            this.tablefleet_monitor = ((fleet_monitorDataTable)(base.Tables["fleet_monitor"]));
            if ((initTable == true)) {
                if ((this.tablefleet_monitor != null)) {
                    this.tablefleet_monitor.InitVars();
                }
            }
            this.tableGpsFail = ((GpsFailDataTable)(base.Tables["GpsFail"]));
            if ((initTable == true)) {
                if ((this.tableGpsFail != null)) {
                    this.tableGpsFail.InitVars();
                }
            }
            this.tableGPSMStat = ((GPSMStatDataTable)(base.Tables["GPSMStat"]));
            if ((initTable == true)) {
                if ((this.tableGPSMStat != null)) {
                    this.tableGPSMStat.InitVars();
                }
            }
            this.tablelog_data = ((log_dataDataTable)(base.Tables["log_data"]));
            if ((initTable == true)) {
                if ((this.tablelog_data != null)) {
                    this.tablelog_data.InitVars();
                }
            }
            this.tableLogOff = ((LogOffDataTable)(base.Tables["LogOff"]));
            if ((initTable == true)) {
                if ((this.tableLogOff != null)) {
                    this.tableLogOff.InitVars();
                }
            }
            this.tableLogSheet = ((LogSheetDataTable)(base.Tables["LogSheet"]));
            if ((initTable == true)) {
                if ((this.tableLogSheet != null)) {
                    this.tableLogSheet.InitVars();
                }
            }
            this.tableNonAcceptBooking = ((NonAcceptBookingDataTable)(base.Tables["NonAcceptBooking"]));
            if ((initTable == true)) {
                if ((this.tableNonAcceptBooking != null)) {
                    this.tableNonAcceptBooking.InitVars();
                }
            }
            this.tableNonAcceptDespatchBooking = ((NonAcceptDespatchBookingDataTable)(base.Tables["NonAcceptDespatchBooking"]));
            if ((initTable == true)) {
                if ((this.tableNonAcceptDespatchBooking != null)) {
                    this.tableNonAcceptDespatchBooking.InitVars();
                }
            }
            this.tableNonDespatchBookings = ((NonDespatchBookingsDataTable)(base.Tables["NonDespatchBookings"]));
            if ((initTable == true)) {
                if ((this.tableNonDespatchBookings != null)) {
                    this.tableNonDespatchBookings.InitVars();
                }
            }
            this.tablepara = ((paraDataTable)(base.Tables["para"]));
            if ((initTable == true)) {
                if ((this.tablepara != null)) {
                    this.tablepara.InitVars();
                }
            }
            this.tablePCUsed = ((PCUsedDataTable)(base.Tables["PCUsed"]));
            if ((initTable == true)) {
                if ((this.tablePCUsed != null)) {
                    this.tablePCUsed.InitVars();
                }
            }
            this.tableRates = ((RatesDataTable)(base.Tables["Rates"]));
            if ((initTable == true)) {
                if ((this.tableRates != null)) {
                    this.tableRates.InitVars();
                }
            }
            this.tableRatesNight = ((RatesNightDataTable)(base.Tables["RatesNight"]));
            if ((initTable == true)) {
                if ((this.tableRatesNight != null)) {
                    this.tableRatesNight.InitVars();
                }
            }
            this.tableSMS = ((SMSDataTable)(base.Tables["SMS"]));
            if ((initTable == true)) {
                if ((this.tableSMS != null)) {
                    this.tableSMS.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "budgetDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/budgetDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAppBookingCancelation = new AppBookingCancelationDataTable();
            base.Tables.Add(this.tableAppBookingCancelation);
            this.tablebooking_status = new booking_statusDataTable();
            base.Tables.Add(this.tablebooking_status);
            this.tableBookinStatusLog = new BookinStatusLogDataTable();
            base.Tables.Add(this.tableBookinStatusLog);
            this.tableCancelBooking = new CancelBookingDataTable();
            base.Tables.Add(this.tableCancelBooking);
            this.tableCancelBookingNew = new CancelBookingNewDataTable();
            base.Tables.Add(this.tableCancelBookingNew);
            this.tableClientFavorite = new ClientFavoriteDataTable();
            base.Tables.Add(this.tableClientFavorite);
            this.tableClientMobileRegistrationOld = new ClientMobileRegistrationOldDataTable();
            base.Tables.Add(this.tableClientMobileRegistrationOld);
            this.tableDespatchBooking = new DespatchBookingDataTable();
            base.Tables.Add(this.tableDespatchBooking);
            this.tableDespatchBookingStatus = new DespatchBookingStatusDataTable();
            base.Tables.Add(this.tableDespatchBookingStatus);
            this.tableDisEngageBooking = new DisEngageBookingDataTable();
            base.Tables.Add(this.tableDisEngageBooking);
            this.tabledriver_log_onoff = new driver_log_onoffDataTable();
            base.Tables.Add(this.tabledriver_log_onoff);
            this.tabledriver_mobile_registration = new driver_mobile_registrationDataTable();
            base.Tables.Add(this.tabledriver_mobile_registration);
            this.tabledriver_status_identifier = new driver_status_identifierDataTable();
            base.Tables.Add(this.tabledriver_status_identifier);
            this.tableDriverStatus = new DriverStatusDataTable();
            base.Tables.Add(this.tableDriverStatus);
            this.tableEMAIL = new EMAILDataTable();
            base.Tables.Add(this.tableEMAIL);
            this.tablefleet_monitor = new fleet_monitorDataTable();
            base.Tables.Add(this.tablefleet_monitor);
            this.tableGpsFail = new GpsFailDataTable();
            base.Tables.Add(this.tableGpsFail);
            this.tableGPSMStat = new GPSMStatDataTable();
            base.Tables.Add(this.tableGPSMStat);
            this.tablelog_data = new log_dataDataTable();
            base.Tables.Add(this.tablelog_data);
            this.tableLogOff = new LogOffDataTable();
            base.Tables.Add(this.tableLogOff);
            this.tableLogSheet = new LogSheetDataTable();
            base.Tables.Add(this.tableLogSheet);
            this.tableNonAcceptBooking = new NonAcceptBookingDataTable();
            base.Tables.Add(this.tableNonAcceptBooking);
            this.tableNonAcceptDespatchBooking = new NonAcceptDespatchBookingDataTable();
            base.Tables.Add(this.tableNonAcceptDespatchBooking);
            this.tableNonDespatchBookings = new NonDespatchBookingsDataTable();
            base.Tables.Add(this.tableNonDespatchBookings);
            this.tablepara = new paraDataTable();
            base.Tables.Add(this.tablepara);
            this.tablePCUsed = new PCUsedDataTable();
            base.Tables.Add(this.tablePCUsed);
            this.tableRates = new RatesDataTable();
            base.Tables.Add(this.tableRates);
            this.tableRatesNight = new RatesNightDataTable();
            base.Tables.Add(this.tableRatesNight);
            this.tableSMS = new SMSDataTable();
            base.Tables.Add(this.tableSMS);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAppBookingCancelation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializebooking_status() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBookinStatusLog() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCancelBooking() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCancelBookingNew() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeClientFavorite() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeClientMobileRegistrationOld() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDespatchBooking() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDespatchBookingStatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDisEngageBooking() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedriver_log_onoff() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedriver_mobile_registration() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedriver_status_identifier() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDriverStatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEMAIL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializefleet_monitor() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGpsFail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGPSMStat() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializelog_data() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLogOff() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLogSheet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeNonAcceptBooking() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeNonAcceptDespatchBooking() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeNonDespatchBookings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializepara() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePCUsed() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRates() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRatesNight() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSMS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            budgetDataSet ds = new budgetDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AppBookingCancelationRowChangeEventHandler(object sender, AppBookingCancelationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void booking_statusRowChangeEventHandler(object sender, booking_statusRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BookinStatusLogRowChangeEventHandler(object sender, BookinStatusLogRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CancelBookingRowChangeEventHandler(object sender, CancelBookingRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CancelBookingNewRowChangeEventHandler(object sender, CancelBookingNewRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ClientFavoriteRowChangeEventHandler(object sender, ClientFavoriteRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ClientMobileRegistrationOldRowChangeEventHandler(object sender, ClientMobileRegistrationOldRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DespatchBookingRowChangeEventHandler(object sender, DespatchBookingRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DespatchBookingStatusRowChangeEventHandler(object sender, DespatchBookingStatusRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DisEngageBookingRowChangeEventHandler(object sender, DisEngageBookingRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void driver_log_onoffRowChangeEventHandler(object sender, driver_log_onoffRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void driver_mobile_registrationRowChangeEventHandler(object sender, driver_mobile_registrationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void driver_status_identifierRowChangeEventHandler(object sender, driver_status_identifierRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DriverStatusRowChangeEventHandler(object sender, DriverStatusRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EMAILRowChangeEventHandler(object sender, EMAILRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void fleet_monitorRowChangeEventHandler(object sender, fleet_monitorRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GpsFailRowChangeEventHandler(object sender, GpsFailRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GPSMStatRowChangeEventHandler(object sender, GPSMStatRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void log_dataRowChangeEventHandler(object sender, log_dataRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LogOffRowChangeEventHandler(object sender, LogOffRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LogSheetRowChangeEventHandler(object sender, LogSheetRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void NonAcceptBookingRowChangeEventHandler(object sender, NonAcceptBookingRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void NonAcceptDespatchBookingRowChangeEventHandler(object sender, NonAcceptDespatchBookingRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void NonDespatchBookingsRowChangeEventHandler(object sender, NonDespatchBookingsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void paraRowChangeEventHandler(object sender, paraRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PCUsedRowChangeEventHandler(object sender, PCUsedRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RatesRowChangeEventHandler(object sender, RatesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RatesNightRowChangeEventHandler(object sender, RatesNightRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SMSRowChangeEventHandler(object sender, SMSRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AppBookingCancelationDataTable : global::System.Data.TypedTableBase<AppBookingCancelationRow> {
            
            private global::System.Data.DataColumn columnBookingID;
            
            private global::System.Data.DataColumn columnCancelTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AppBookingCancelationDataTable() {
                this.TableName = "AppBookingCancelation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AppBookingCancelationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AppBookingCancelationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingIDColumn {
                get {
                    return this.columnBookingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CancelTimeColumn {
                get {
                    return this.columnCancelTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AppBookingCancelationRow this[int index] {
                get {
                    return ((AppBookingCancelationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AppBookingCancelationRowChangeEventHandler AppBookingCancelationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AppBookingCancelationRowChangeEventHandler AppBookingCancelationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AppBookingCancelationRowChangeEventHandler AppBookingCancelationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AppBookingCancelationRowChangeEventHandler AppBookingCancelationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAppBookingCancelationRow(AppBookingCancelationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AppBookingCancelationRow AddAppBookingCancelationRow(long BookingID, System.DateTime CancelTime) {
                AppBookingCancelationRow rowAppBookingCancelationRow = ((AppBookingCancelationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BookingID,
                        CancelTime};
                rowAppBookingCancelationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAppBookingCancelationRow);
                return rowAppBookingCancelationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AppBookingCancelationDataTable cln = ((AppBookingCancelationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AppBookingCancelationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnBookingID = base.Columns["BookingID"];
                this.columnCancelTime = base.Columns["CancelTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnBookingID = new global::System.Data.DataColumn("BookingID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingID);
                this.columnCancelTime = new global::System.Data.DataColumn("CancelTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelTime);
                this.columnBookingID.AllowDBNull = false;
                this.columnCancelTime.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AppBookingCancelationRow NewAppBookingCancelationRow() {
                return ((AppBookingCancelationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AppBookingCancelationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AppBookingCancelationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AppBookingCancelationRowChanged != null)) {
                    this.AppBookingCancelationRowChanged(this, new AppBookingCancelationRowChangeEvent(((AppBookingCancelationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AppBookingCancelationRowChanging != null)) {
                    this.AppBookingCancelationRowChanging(this, new AppBookingCancelationRowChangeEvent(((AppBookingCancelationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AppBookingCancelationRowDeleted != null)) {
                    this.AppBookingCancelationRowDeleted(this, new AppBookingCancelationRowChangeEvent(((AppBookingCancelationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AppBookingCancelationRowDeleting != null)) {
                    this.AppBookingCancelationRowDeleting(this, new AppBookingCancelationRowChangeEvent(((AppBookingCancelationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAppBookingCancelationRow(AppBookingCancelationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AppBookingCancelationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class booking_statusDataTable : global::System.Data.TypedTableBase<booking_statusRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnaddeddate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public booking_statusDataTable() {
                this.TableName = "booking_status";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal booking_statusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected booking_statusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn addeddateColumn {
                get {
                    return this.columnaddeddate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public booking_statusRow this[int index] {
                get {
                    return ((booking_statusRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event booking_statusRowChangeEventHandler booking_statusRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event booking_statusRowChangeEventHandler booking_statusRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event booking_statusRowChangeEventHandler booking_statusRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event booking_statusRowChangeEventHandler booking_statusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addbooking_statusRow(booking_statusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public booking_statusRow Addbooking_statusRow(string name, string description, System.DateTime addeddate) {
                booking_statusRow rowbooking_statusRow = ((booking_statusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        name,
                        description,
                        addeddate};
                rowbooking_statusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbooking_statusRow);
                return rowbooking_statusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public booking_statusRow FindByid(int id) {
                return ((booking_statusRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                booking_statusDataTable cln = ((booking_statusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new booking_statusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnname = base.Columns["name"];
                this.columndescription = base.Columns["description"];
                this.columnaddeddate = base.Columns["addeddate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnaddeddate = new global::System.Data.DataColumn("addeddate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddeddate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnname.MaxLength = 100;
                this.columndescription.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public booking_statusRow Newbooking_statusRow() {
                return ((booking_statusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new booking_statusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(booking_statusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.booking_statusRowChanged != null)) {
                    this.booking_statusRowChanged(this, new booking_statusRowChangeEvent(((booking_statusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.booking_statusRowChanging != null)) {
                    this.booking_statusRowChanging(this, new booking_statusRowChangeEvent(((booking_statusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.booking_statusRowDeleted != null)) {
                    this.booking_statusRowDeleted(this, new booking_statusRowChangeEvent(((booking_statusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.booking_statusRowDeleting != null)) {
                    this.booking_statusRowDeleting(this, new booking_statusRowChangeEvent(((booking_statusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removebooking_statusRow(booking_statusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "booking_statusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BookinStatusLogDataTable : global::System.Data.TypedTableBase<BookinStatusLogRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnBookingID;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnTriggerTime;
            
            private global::System.Data.DataColumn columnTriggerBy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BookinStatusLogDataTable() {
                this.TableName = "BookinStatusLog";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BookinStatusLogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BookinStatusLogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingIDColumn {
                get {
                    return this.columnBookingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TriggerTimeColumn {
                get {
                    return this.columnTriggerTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TriggerByColumn {
                get {
                    return this.columnTriggerBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BookinStatusLogRow this[int index] {
                get {
                    return ((BookinStatusLogRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BookinStatusLogRowChangeEventHandler BookinStatusLogRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BookinStatusLogRowChangeEventHandler BookinStatusLogRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BookinStatusLogRowChangeEventHandler BookinStatusLogRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BookinStatusLogRowChangeEventHandler BookinStatusLogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBookinStatusLogRow(BookinStatusLogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BookinStatusLogRow AddBookinStatusLogRow(long BookingID, int Status, System.DateTime TriggerTime, string TriggerBy) {
                BookinStatusLogRow rowBookinStatusLogRow = ((BookinStatusLogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BookingID,
                        Status,
                        TriggerTime,
                        TriggerBy};
                rowBookinStatusLogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBookinStatusLogRow);
                return rowBookinStatusLogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BookinStatusLogRow FindByID(long ID) {
                return ((BookinStatusLogRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BookinStatusLogDataTable cln = ((BookinStatusLogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BookinStatusLogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnBookingID = base.Columns["BookingID"];
                this.columnStatus = base.Columns["Status"];
                this.columnTriggerTime = base.Columns["TriggerTime"];
                this.columnTriggerBy = base.Columns["TriggerBy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnBookingID = new global::System.Data.DataColumn("BookingID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingID);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnTriggerTime = new global::System.Data.DataColumn("TriggerTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTriggerTime);
                this.columnTriggerBy = new global::System.Data.DataColumn("TriggerBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTriggerBy);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnBookingID.AllowDBNull = false;
                this.columnStatus.AllowDBNull = false;
                this.columnTriggerTime.AllowDBNull = false;
                this.columnTriggerBy.AllowDBNull = false;
                this.columnTriggerBy.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BookinStatusLogRow NewBookinStatusLogRow() {
                return ((BookinStatusLogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BookinStatusLogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BookinStatusLogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BookinStatusLogRowChanged != null)) {
                    this.BookinStatusLogRowChanged(this, new BookinStatusLogRowChangeEvent(((BookinStatusLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BookinStatusLogRowChanging != null)) {
                    this.BookinStatusLogRowChanging(this, new BookinStatusLogRowChangeEvent(((BookinStatusLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BookinStatusLogRowDeleted != null)) {
                    this.BookinStatusLogRowDeleted(this, new BookinStatusLogRowChangeEvent(((BookinStatusLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BookinStatusLogRowDeleting != null)) {
                    this.BookinStatusLogRowDeleting(this, new BookinStatusLogRowChangeEvent(((BookinStatusLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBookinStatusLogRow(BookinStatusLogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BookinStatusLogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CancelBookingDataTable : global::System.Data.TypedTableBase<CancelBookingRow> {
            
            private global::System.Data.DataColumn columnAutoID;
            
            private global::System.Data.DataColumn columnBookingID;
            
            private global::System.Data.DataColumn columnBookingStatus;
            
            private global::System.Data.DataColumn columnRefNo;
            
            private global::System.Data.DataColumn columnImiNo;
            
            private global::System.Data.DataColumn columnCabNo;
            
            private global::System.Data.DataColumn columnClientMobile;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnClientAddress;
            
            private global::System.Data.DataColumn columnLandMark;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnRQTime;
            
            private global::System.Data.DataColumn columnLAT;
            
            private global::System.Data.DataColumn columnLON;
            
            private global::System.Data.DataColumn columnAcceptTime;
            
            private global::System.Data.DataColumn columnAtThePlaceTime;
            
            private global::System.Data.DataColumn columnMeterOnTime;
            
            private global::System.Data.DataColumn columnMeterOffTime;
            
            private global::System.Data.DataColumn columnMeterOffLAT;
            
            private global::System.Data.DataColumn columnMeterOffLON;
            
            private global::System.Data.DataColumn columnMeterOffAddress;
            
            private global::System.Data.DataColumn columnRunningKM;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnInitialKm;
            
            private global::System.Data.DataColumn columnPerKMCharge;
            
            private global::System.Data.DataColumn columnFlag;
            
            private global::System.Data.DataColumn columnWaitingPerMinute;
            
            private global::System.Data.DataColumn columnFixAmount;
            
            private global::System.Data.DataColumn columnRecordInsertTime;
            
            private global::System.Data.DataColumn columnGCMFlag;
            
            private global::System.Data.DataColumn columnkangarooupdate;
            
            private global::System.Data.DataColumn columnWaitingTime;
            
            private global::System.Data.DataColumn columnWaitingCost;
            
            private global::System.Data.DataColumn columnRating;
            
            private global::System.Data.DataColumn columnDNo;
            
            private global::System.Data.DataColumn columnDRating;
            
            private global::System.Data.DataColumn columnCabType;
            
            private global::System.Data.DataColumn columnBookingType;
            
            private global::System.Data.DataColumn columnFreeWaiting;
            
            private global::System.Data.DataColumn columnPCode;
            
            private global::System.Data.DataColumn columnPaymentType;
            
            private global::System.Data.DataColumn columnDiscountAmount;
            
            private global::System.Data.DataColumn columnDRatinNew;
            
            private global::System.Data.DataColumn columnCancelTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CancelBookingDataTable() {
                this.TableName = "CancelBooking";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CancelBookingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CancelBookingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoIDColumn {
                get {
                    return this.columnAutoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingIDColumn {
                get {
                    return this.columnBookingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingStatusColumn {
                get {
                    return this.columnBookingStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefNoColumn {
                get {
                    return this.columnRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImiNoColumn {
                get {
                    return this.columnImiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CabNoColumn {
                get {
                    return this.columnCabNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientMobileColumn {
                get {
                    return this.columnClientMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientAddressColumn {
                get {
                    return this.columnClientAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LandMarkColumn {
                get {
                    return this.columnLandMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RQTimeColumn {
                get {
                    return this.columnRQTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LATColumn {
                get {
                    return this.columnLAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LONColumn {
                get {
                    return this.columnLON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AcceptTimeColumn {
                get {
                    return this.columnAcceptTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AtThePlaceTimeColumn {
                get {
                    return this.columnAtThePlaceTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOnTimeColumn {
                get {
                    return this.columnMeterOnTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffTimeColumn {
                get {
                    return this.columnMeterOffTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffLATColumn {
                get {
                    return this.columnMeterOffLAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffLONColumn {
                get {
                    return this.columnMeterOffLON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffAddressColumn {
                get {
                    return this.columnMeterOffAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RunningKMColumn {
                get {
                    return this.columnRunningKM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InitialKmColumn {
                get {
                    return this.columnInitialKm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerKMChargeColumn {
                get {
                    return this.columnPerKMCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FlagColumn {
                get {
                    return this.columnFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingPerMinuteColumn {
                get {
                    return this.columnWaitingPerMinute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FixAmountColumn {
                get {
                    return this.columnFixAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordInsertTimeColumn {
                get {
                    return this.columnRecordInsertTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GCMFlagColumn {
                get {
                    return this.columnGCMFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kangarooupdateColumn {
                get {
                    return this.columnkangarooupdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingTimeColumn {
                get {
                    return this.columnWaitingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingCostColumn {
                get {
                    return this.columnWaitingCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RatingColumn {
                get {
                    return this.columnRating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DNoColumn {
                get {
                    return this.columnDNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DRatingColumn {
                get {
                    return this.columnDRating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CabTypeColumn {
                get {
                    return this.columnCabType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingTypeColumn {
                get {
                    return this.columnBookingType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeWaitingColumn {
                get {
                    return this.columnFreeWaiting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCodeColumn {
                get {
                    return this.columnPCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentTypeColumn {
                get {
                    return this.columnPaymentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiscountAmountColumn {
                get {
                    return this.columnDiscountAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DRatinNewColumn {
                get {
                    return this.columnDRatinNew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CancelTimeColumn {
                get {
                    return this.columnCancelTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CancelBookingRow this[int index] {
                get {
                    return ((CancelBookingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CancelBookingRowChangeEventHandler CancelBookingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CancelBookingRowChangeEventHandler CancelBookingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CancelBookingRowChangeEventHandler CancelBookingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CancelBookingRowChangeEventHandler CancelBookingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCancelBookingRow(CancelBookingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CancelBookingRow AddCancelBookingRow(
                        long BookingID, 
                        string BookingStatus, 
                        string RefNo, 
                        string ImiNo, 
                        string CabNo, 
                        string ClientMobile, 
                        string ClientName, 
                        string ClientAddress, 
                        string LandMark, 
                        string Remark, 
                        string RQTime, 
                        double LAT, 
                        double LON, 
                        System.DateTime AcceptTime, 
                        System.DateTime AtThePlaceTime, 
                        System.DateTime MeterOnTime, 
                        System.DateTime MeterOffTime, 
                        float MeterOffLAT, 
                        float MeterOffLON, 
                        string MeterOffAddress, 
                        double RunningKM, 
                        double Amount, 
                        double InitialKm, 
                        double PerKMCharge, 
                        string Flag, 
                        float WaitingPerMinute, 
                        float FixAmount, 
                        System.DateTime RecordInsertTime, 
                        bool GCMFlag, 
                        int kangarooupdate, 
                        float WaitingTime, 
                        float WaitingCost, 
                        int Rating, 
                        string DNo, 
                        double DRating, 
                        string CabType, 
                        string BookingType, 
                        int FreeWaiting, 
                        string PCode, 
                        string PaymentType, 
                        double DiscountAmount, 
                        double DRatinNew, 
                        System.DateTime CancelTime) {
                CancelBookingRow rowCancelBookingRow = ((CancelBookingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BookingID,
                        BookingStatus,
                        RefNo,
                        ImiNo,
                        CabNo,
                        ClientMobile,
                        ClientName,
                        ClientAddress,
                        LandMark,
                        Remark,
                        RQTime,
                        LAT,
                        LON,
                        AcceptTime,
                        AtThePlaceTime,
                        MeterOnTime,
                        MeterOffTime,
                        MeterOffLAT,
                        MeterOffLON,
                        MeterOffAddress,
                        RunningKM,
                        Amount,
                        InitialKm,
                        PerKMCharge,
                        Flag,
                        WaitingPerMinute,
                        FixAmount,
                        RecordInsertTime,
                        GCMFlag,
                        kangarooupdate,
                        WaitingTime,
                        WaitingCost,
                        Rating,
                        DNo,
                        DRating,
                        CabType,
                        BookingType,
                        FreeWaiting,
                        PCode,
                        PaymentType,
                        DiscountAmount,
                        DRatinNew,
                        CancelTime};
                rowCancelBookingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCancelBookingRow);
                return rowCancelBookingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CancelBookingDataTable cln = ((CancelBookingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CancelBookingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAutoID = base.Columns["AutoID"];
                this.columnBookingID = base.Columns["BookingID"];
                this.columnBookingStatus = base.Columns["BookingStatus"];
                this.columnRefNo = base.Columns["RefNo"];
                this.columnImiNo = base.Columns["ImiNo"];
                this.columnCabNo = base.Columns["CabNo"];
                this.columnClientMobile = base.Columns["ClientMobile"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnClientAddress = base.Columns["ClientAddress"];
                this.columnLandMark = base.Columns["LandMark"];
                this.columnRemark = base.Columns["Remark"];
                this.columnRQTime = base.Columns["RQTime"];
                this.columnLAT = base.Columns["LAT"];
                this.columnLON = base.Columns["LON"];
                this.columnAcceptTime = base.Columns["AcceptTime"];
                this.columnAtThePlaceTime = base.Columns["AtThePlaceTime"];
                this.columnMeterOnTime = base.Columns["MeterOnTime"];
                this.columnMeterOffTime = base.Columns["MeterOffTime"];
                this.columnMeterOffLAT = base.Columns["MeterOffLAT"];
                this.columnMeterOffLON = base.Columns["MeterOffLON"];
                this.columnMeterOffAddress = base.Columns["MeterOffAddress"];
                this.columnRunningKM = base.Columns["RunningKM"];
                this.columnAmount = base.Columns["Amount"];
                this.columnInitialKm = base.Columns["InitialKm"];
                this.columnPerKMCharge = base.Columns["PerKMCharge"];
                this.columnFlag = base.Columns["Flag"];
                this.columnWaitingPerMinute = base.Columns["WaitingPerMinute"];
                this.columnFixAmount = base.Columns["FixAmount"];
                this.columnRecordInsertTime = base.Columns["RecordInsertTime"];
                this.columnGCMFlag = base.Columns["GCMFlag"];
                this.columnkangarooupdate = base.Columns["kangarooupdate"];
                this.columnWaitingTime = base.Columns["WaitingTime"];
                this.columnWaitingCost = base.Columns["WaitingCost"];
                this.columnRating = base.Columns["Rating"];
                this.columnDNo = base.Columns["DNo"];
                this.columnDRating = base.Columns["DRating"];
                this.columnCabType = base.Columns["CabType"];
                this.columnBookingType = base.Columns["BookingType"];
                this.columnFreeWaiting = base.Columns["FreeWaiting"];
                this.columnPCode = base.Columns["PCode"];
                this.columnPaymentType = base.Columns["PaymentType"];
                this.columnDiscountAmount = base.Columns["DiscountAmount"];
                this.columnDRatinNew = base.Columns["DRatinNew"];
                this.columnCancelTime = base.Columns["CancelTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAutoID = new global::System.Data.DataColumn("AutoID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoID);
                this.columnBookingID = new global::System.Data.DataColumn("BookingID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingID);
                this.columnBookingStatus = new global::System.Data.DataColumn("BookingStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingStatus);
                this.columnRefNo = new global::System.Data.DataColumn("RefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefNo);
                this.columnImiNo = new global::System.Data.DataColumn("ImiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImiNo);
                this.columnCabNo = new global::System.Data.DataColumn("CabNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabNo);
                this.columnClientMobile = new global::System.Data.DataColumn("ClientMobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientMobile);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnClientAddress = new global::System.Data.DataColumn("ClientAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientAddress);
                this.columnLandMark = new global::System.Data.DataColumn("LandMark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandMark);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnRQTime = new global::System.Data.DataColumn("RQTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRQTime);
                this.columnLAT = new global::System.Data.DataColumn("LAT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT);
                this.columnLON = new global::System.Data.DataColumn("LON", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLON);
                this.columnAcceptTime = new global::System.Data.DataColumn("AcceptTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptTime);
                this.columnAtThePlaceTime = new global::System.Data.DataColumn("AtThePlaceTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAtThePlaceTime);
                this.columnMeterOnTime = new global::System.Data.DataColumn("MeterOnTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOnTime);
                this.columnMeterOffTime = new global::System.Data.DataColumn("MeterOffTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffTime);
                this.columnMeterOffLAT = new global::System.Data.DataColumn("MeterOffLAT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffLAT);
                this.columnMeterOffLON = new global::System.Data.DataColumn("MeterOffLON", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffLON);
                this.columnMeterOffAddress = new global::System.Data.DataColumn("MeterOffAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffAddress);
                this.columnRunningKM = new global::System.Data.DataColumn("RunningKM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunningKM);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnInitialKm = new global::System.Data.DataColumn("InitialKm", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialKm);
                this.columnPerKMCharge = new global::System.Data.DataColumn("PerKMCharge", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerKMCharge);
                this.columnFlag = new global::System.Data.DataColumn("Flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag);
                this.columnWaitingPerMinute = new global::System.Data.DataColumn("WaitingPerMinute", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingPerMinute);
                this.columnFixAmount = new global::System.Data.DataColumn("FixAmount", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixAmount);
                this.columnRecordInsertTime = new global::System.Data.DataColumn("RecordInsertTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordInsertTime);
                this.columnGCMFlag = new global::System.Data.DataColumn("GCMFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCMFlag);
                this.columnkangarooupdate = new global::System.Data.DataColumn("kangarooupdate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkangarooupdate);
                this.columnWaitingTime = new global::System.Data.DataColumn("WaitingTime", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingTime);
                this.columnWaitingCost = new global::System.Data.DataColumn("WaitingCost", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingCost);
                this.columnRating = new global::System.Data.DataColumn("Rating", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRating);
                this.columnDNo = new global::System.Data.DataColumn("DNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDNo);
                this.columnDRating = new global::System.Data.DataColumn("DRating", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRating);
                this.columnCabType = new global::System.Data.DataColumn("CabType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabType);
                this.columnBookingType = new global::System.Data.DataColumn("BookingType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingType);
                this.columnFreeWaiting = new global::System.Data.DataColumn("FreeWaiting", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeWaiting);
                this.columnPCode = new global::System.Data.DataColumn("PCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCode);
                this.columnPaymentType = new global::System.Data.DataColumn("PaymentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentType);
                this.columnDiscountAmount = new global::System.Data.DataColumn("DiscountAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountAmount);
                this.columnDRatinNew = new global::System.Data.DataColumn("DRatinNew", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRatinNew);
                this.columnCancelTime = new global::System.Data.DataColumn("CancelTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelTime);
                this.columnAutoID.AutoIncrement = true;
                this.columnAutoID.AutoIncrementSeed = -1;
                this.columnAutoID.AutoIncrementStep = -1;
                this.columnAutoID.AllowDBNull = false;
                this.columnBookingID.AllowDBNull = false;
                this.columnBookingStatus.AllowDBNull = false;
                this.columnBookingStatus.MaxLength = 2;
                this.columnRefNo.AllowDBNull = false;
                this.columnRefNo.MaxLength = 6;
                this.columnImiNo.AllowDBNull = false;
                this.columnImiNo.MaxLength = 20;
                this.columnCabNo.AllowDBNull = false;
                this.columnCabNo.MaxLength = 5;
                this.columnClientMobile.AllowDBNull = false;
                this.columnClientMobile.MaxLength = 20;
                this.columnClientName.AllowDBNull = false;
                this.columnClientName.MaxLength = 100;
                this.columnClientAddress.AllowDBNull = false;
                this.columnClientAddress.MaxLength = 150;
                this.columnLandMark.AllowDBNull = false;
                this.columnLandMark.MaxLength = 100;
                this.columnRemark.AllowDBNull = false;
                this.columnRemark.MaxLength = 100;
                this.columnRQTime.AllowDBNull = false;
                this.columnRQTime.MaxLength = 5;
                this.columnLAT.AllowDBNull = false;
                this.columnLON.AllowDBNull = false;
                this.columnAcceptTime.AllowDBNull = false;
                this.columnAtThePlaceTime.AllowDBNull = false;
                this.columnMeterOnTime.AllowDBNull = false;
                this.columnMeterOffTime.AllowDBNull = false;
                this.columnMeterOffLAT.AllowDBNull = false;
                this.columnMeterOffLON.AllowDBNull = false;
                this.columnMeterOffAddress.AllowDBNull = false;
                this.columnMeterOffAddress.MaxLength = 150;
                this.columnRunningKM.AllowDBNull = false;
                this.columnAmount.AllowDBNull = false;
                this.columnInitialKm.AllowDBNull = false;
                this.columnPerKMCharge.AllowDBNull = false;
                this.columnFlag.AllowDBNull = false;
                this.columnFlag.MaxLength = 2;
                this.columnWaitingPerMinute.AllowDBNull = false;
                this.columnFixAmount.AllowDBNull = false;
                this.columnRecordInsertTime.AllowDBNull = false;
                this.columnGCMFlag.AllowDBNull = false;
                this.columnkangarooupdate.AllowDBNull = false;
                this.columnWaitingTime.AllowDBNull = false;
                this.columnWaitingCost.AllowDBNull = false;
                this.columnRating.AllowDBNull = false;
                this.columnDNo.AllowDBNull = false;
                this.columnDNo.MaxLength = 5;
                this.columnDRating.AllowDBNull = false;
                this.columnCabType.AllowDBNull = false;
                this.columnCabType.MaxLength = 1;
                this.columnBookingType.AllowDBNull = false;
                this.columnBookingType.MaxLength = 2;
                this.columnFreeWaiting.AllowDBNull = false;
                this.columnPCode.AllowDBNull = false;
                this.columnPCode.MaxLength = 20;
                this.columnPaymentType.AllowDBNull = false;
                this.columnPaymentType.MaxLength = 2;
                this.columnDiscountAmount.AllowDBNull = false;
                this.columnDRatinNew.AllowDBNull = false;
                this.columnCancelTime.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CancelBookingRow NewCancelBookingRow() {
                return ((CancelBookingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CancelBookingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CancelBookingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CancelBookingRowChanged != null)) {
                    this.CancelBookingRowChanged(this, new CancelBookingRowChangeEvent(((CancelBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CancelBookingRowChanging != null)) {
                    this.CancelBookingRowChanging(this, new CancelBookingRowChangeEvent(((CancelBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CancelBookingRowDeleted != null)) {
                    this.CancelBookingRowDeleted(this, new CancelBookingRowChangeEvent(((CancelBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CancelBookingRowDeleting != null)) {
                    this.CancelBookingRowDeleting(this, new CancelBookingRowChangeEvent(((CancelBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCancelBookingRow(CancelBookingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CancelBookingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CancelBookingNewDataTable : global::System.Data.TypedTableBase<CancelBookingNewRow> {
            
            private global::System.Data.DataColumn columnAutoID;
            
            private global::System.Data.DataColumn columnBookingID;
            
            private global::System.Data.DataColumn columnBookingStatus;
            
            private global::System.Data.DataColumn columnRefNo;
            
            private global::System.Data.DataColumn columnImiNo;
            
            private global::System.Data.DataColumn columnCabNo;
            
            private global::System.Data.DataColumn columnClientMobile;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnClientAddress;
            
            private global::System.Data.DataColumn columnLandMark;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnRQTime;
            
            private global::System.Data.DataColumn columnLAT;
            
            private global::System.Data.DataColumn columnLON;
            
            private global::System.Data.DataColumn columnAcceptTime;
            
            private global::System.Data.DataColumn columnAtThePlaceTime;
            
            private global::System.Data.DataColumn columnMeterOnTime;
            
            private global::System.Data.DataColumn columnMeterOffTime;
            
            private global::System.Data.DataColumn columnMeterOffLAT;
            
            private global::System.Data.DataColumn columnMeterOffLON;
            
            private global::System.Data.DataColumn columnMeterOffAddress;
            
            private global::System.Data.DataColumn columnRunningKM;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnInitialKm;
            
            private global::System.Data.DataColumn columnPerKMCharge;
            
            private global::System.Data.DataColumn columnFlag;
            
            private global::System.Data.DataColumn columnWaitingPerMinute;
            
            private global::System.Data.DataColumn columnFixAmount;
            
            private global::System.Data.DataColumn columnRecordInsertTime;
            
            private global::System.Data.DataColumn columnGCMFlag;
            
            private global::System.Data.DataColumn columnkangarooupdate;
            
            private global::System.Data.DataColumn columnWaitingTime;
            
            private global::System.Data.DataColumn columnWaitingCost;
            
            private global::System.Data.DataColumn columnRating;
            
            private global::System.Data.DataColumn columnDNo;
            
            private global::System.Data.DataColumn columnDRating;
            
            private global::System.Data.DataColumn columnCabType;
            
            private global::System.Data.DataColumn columnBookingType;
            
            private global::System.Data.DataColumn columnFreeWaiting;
            
            private global::System.Data.DataColumn columnDiscountAmount;
            
            private global::System.Data.DataColumn columnPCode;
            
            private global::System.Data.DataColumn columnPaymentType;
            
            private global::System.Data.DataColumn columnDRatinNew;
            
            private global::System.Data.DataColumn columnCancelTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CancelBookingNewDataTable() {
                this.TableName = "CancelBookingNew";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CancelBookingNewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CancelBookingNewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoIDColumn {
                get {
                    return this.columnAutoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingIDColumn {
                get {
                    return this.columnBookingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingStatusColumn {
                get {
                    return this.columnBookingStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefNoColumn {
                get {
                    return this.columnRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImiNoColumn {
                get {
                    return this.columnImiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CabNoColumn {
                get {
                    return this.columnCabNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientMobileColumn {
                get {
                    return this.columnClientMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientAddressColumn {
                get {
                    return this.columnClientAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LandMarkColumn {
                get {
                    return this.columnLandMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RQTimeColumn {
                get {
                    return this.columnRQTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LATColumn {
                get {
                    return this.columnLAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LONColumn {
                get {
                    return this.columnLON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AcceptTimeColumn {
                get {
                    return this.columnAcceptTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AtThePlaceTimeColumn {
                get {
                    return this.columnAtThePlaceTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOnTimeColumn {
                get {
                    return this.columnMeterOnTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffTimeColumn {
                get {
                    return this.columnMeterOffTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffLATColumn {
                get {
                    return this.columnMeterOffLAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffLONColumn {
                get {
                    return this.columnMeterOffLON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffAddressColumn {
                get {
                    return this.columnMeterOffAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RunningKMColumn {
                get {
                    return this.columnRunningKM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InitialKmColumn {
                get {
                    return this.columnInitialKm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerKMChargeColumn {
                get {
                    return this.columnPerKMCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FlagColumn {
                get {
                    return this.columnFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingPerMinuteColumn {
                get {
                    return this.columnWaitingPerMinute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FixAmountColumn {
                get {
                    return this.columnFixAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordInsertTimeColumn {
                get {
                    return this.columnRecordInsertTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GCMFlagColumn {
                get {
                    return this.columnGCMFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kangarooupdateColumn {
                get {
                    return this.columnkangarooupdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingTimeColumn {
                get {
                    return this.columnWaitingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingCostColumn {
                get {
                    return this.columnWaitingCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RatingColumn {
                get {
                    return this.columnRating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DNoColumn {
                get {
                    return this.columnDNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DRatingColumn {
                get {
                    return this.columnDRating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CabTypeColumn {
                get {
                    return this.columnCabType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingTypeColumn {
                get {
                    return this.columnBookingType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeWaitingColumn {
                get {
                    return this.columnFreeWaiting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiscountAmountColumn {
                get {
                    return this.columnDiscountAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCodeColumn {
                get {
                    return this.columnPCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentTypeColumn {
                get {
                    return this.columnPaymentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DRatinNewColumn {
                get {
                    return this.columnDRatinNew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CancelTimeColumn {
                get {
                    return this.columnCancelTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CancelBookingNewRow this[int index] {
                get {
                    return ((CancelBookingNewRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CancelBookingNewRowChangeEventHandler CancelBookingNewRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CancelBookingNewRowChangeEventHandler CancelBookingNewRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CancelBookingNewRowChangeEventHandler CancelBookingNewRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CancelBookingNewRowChangeEventHandler CancelBookingNewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCancelBookingNewRow(CancelBookingNewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CancelBookingNewRow AddCancelBookingNewRow(
                        long BookingID, 
                        string BookingStatus, 
                        string RefNo, 
                        string ImiNo, 
                        string CabNo, 
                        string ClientMobile, 
                        string ClientName, 
                        string ClientAddress, 
                        string LandMark, 
                        string Remark, 
                        string RQTime, 
                        double LAT, 
                        double LON, 
                        System.DateTime AcceptTime, 
                        System.DateTime AtThePlaceTime, 
                        System.DateTime MeterOnTime, 
                        System.DateTime MeterOffTime, 
                        float MeterOffLAT, 
                        float MeterOffLON, 
                        string MeterOffAddress, 
                        double RunningKM, 
                        double Amount, 
                        double InitialKm, 
                        double PerKMCharge, 
                        string Flag, 
                        float WaitingPerMinute, 
                        float FixAmount, 
                        System.DateTime RecordInsertTime, 
                        bool GCMFlag, 
                        int kangarooupdate, 
                        float WaitingTime, 
                        float WaitingCost, 
                        int Rating, 
                        string DNo, 
                        double DRating, 
                        string CabType, 
                        string BookingType, 
                        int FreeWaiting, 
                        double DiscountAmount, 
                        string PCode, 
                        string PaymentType, 
                        double DRatinNew, 
                        System.DateTime CancelTime) {
                CancelBookingNewRow rowCancelBookingNewRow = ((CancelBookingNewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BookingID,
                        BookingStatus,
                        RefNo,
                        ImiNo,
                        CabNo,
                        ClientMobile,
                        ClientName,
                        ClientAddress,
                        LandMark,
                        Remark,
                        RQTime,
                        LAT,
                        LON,
                        AcceptTime,
                        AtThePlaceTime,
                        MeterOnTime,
                        MeterOffTime,
                        MeterOffLAT,
                        MeterOffLON,
                        MeterOffAddress,
                        RunningKM,
                        Amount,
                        InitialKm,
                        PerKMCharge,
                        Flag,
                        WaitingPerMinute,
                        FixAmount,
                        RecordInsertTime,
                        GCMFlag,
                        kangarooupdate,
                        WaitingTime,
                        WaitingCost,
                        Rating,
                        DNo,
                        DRating,
                        CabType,
                        BookingType,
                        FreeWaiting,
                        DiscountAmount,
                        PCode,
                        PaymentType,
                        DRatinNew,
                        CancelTime};
                rowCancelBookingNewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCancelBookingNewRow);
                return rowCancelBookingNewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CancelBookingNewDataTable cln = ((CancelBookingNewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CancelBookingNewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAutoID = base.Columns["AutoID"];
                this.columnBookingID = base.Columns["BookingID"];
                this.columnBookingStatus = base.Columns["BookingStatus"];
                this.columnRefNo = base.Columns["RefNo"];
                this.columnImiNo = base.Columns["ImiNo"];
                this.columnCabNo = base.Columns["CabNo"];
                this.columnClientMobile = base.Columns["ClientMobile"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnClientAddress = base.Columns["ClientAddress"];
                this.columnLandMark = base.Columns["LandMark"];
                this.columnRemark = base.Columns["Remark"];
                this.columnRQTime = base.Columns["RQTime"];
                this.columnLAT = base.Columns["LAT"];
                this.columnLON = base.Columns["LON"];
                this.columnAcceptTime = base.Columns["AcceptTime"];
                this.columnAtThePlaceTime = base.Columns["AtThePlaceTime"];
                this.columnMeterOnTime = base.Columns["MeterOnTime"];
                this.columnMeterOffTime = base.Columns["MeterOffTime"];
                this.columnMeterOffLAT = base.Columns["MeterOffLAT"];
                this.columnMeterOffLON = base.Columns["MeterOffLON"];
                this.columnMeterOffAddress = base.Columns["MeterOffAddress"];
                this.columnRunningKM = base.Columns["RunningKM"];
                this.columnAmount = base.Columns["Amount"];
                this.columnInitialKm = base.Columns["InitialKm"];
                this.columnPerKMCharge = base.Columns["PerKMCharge"];
                this.columnFlag = base.Columns["Flag"];
                this.columnWaitingPerMinute = base.Columns["WaitingPerMinute"];
                this.columnFixAmount = base.Columns["FixAmount"];
                this.columnRecordInsertTime = base.Columns["RecordInsertTime"];
                this.columnGCMFlag = base.Columns["GCMFlag"];
                this.columnkangarooupdate = base.Columns["kangarooupdate"];
                this.columnWaitingTime = base.Columns["WaitingTime"];
                this.columnWaitingCost = base.Columns["WaitingCost"];
                this.columnRating = base.Columns["Rating"];
                this.columnDNo = base.Columns["DNo"];
                this.columnDRating = base.Columns["DRating"];
                this.columnCabType = base.Columns["CabType"];
                this.columnBookingType = base.Columns["BookingType"];
                this.columnFreeWaiting = base.Columns["FreeWaiting"];
                this.columnDiscountAmount = base.Columns["DiscountAmount"];
                this.columnPCode = base.Columns["PCode"];
                this.columnPaymentType = base.Columns["PaymentType"];
                this.columnDRatinNew = base.Columns["DRatinNew"];
                this.columnCancelTime = base.Columns["CancelTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAutoID = new global::System.Data.DataColumn("AutoID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoID);
                this.columnBookingID = new global::System.Data.DataColumn("BookingID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingID);
                this.columnBookingStatus = new global::System.Data.DataColumn("BookingStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingStatus);
                this.columnRefNo = new global::System.Data.DataColumn("RefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefNo);
                this.columnImiNo = new global::System.Data.DataColumn("ImiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImiNo);
                this.columnCabNo = new global::System.Data.DataColumn("CabNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabNo);
                this.columnClientMobile = new global::System.Data.DataColumn("ClientMobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientMobile);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnClientAddress = new global::System.Data.DataColumn("ClientAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientAddress);
                this.columnLandMark = new global::System.Data.DataColumn("LandMark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandMark);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnRQTime = new global::System.Data.DataColumn("RQTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRQTime);
                this.columnLAT = new global::System.Data.DataColumn("LAT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT);
                this.columnLON = new global::System.Data.DataColumn("LON", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLON);
                this.columnAcceptTime = new global::System.Data.DataColumn("AcceptTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptTime);
                this.columnAtThePlaceTime = new global::System.Data.DataColumn("AtThePlaceTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAtThePlaceTime);
                this.columnMeterOnTime = new global::System.Data.DataColumn("MeterOnTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOnTime);
                this.columnMeterOffTime = new global::System.Data.DataColumn("MeterOffTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffTime);
                this.columnMeterOffLAT = new global::System.Data.DataColumn("MeterOffLAT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffLAT);
                this.columnMeterOffLON = new global::System.Data.DataColumn("MeterOffLON", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffLON);
                this.columnMeterOffAddress = new global::System.Data.DataColumn("MeterOffAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffAddress);
                this.columnRunningKM = new global::System.Data.DataColumn("RunningKM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunningKM);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnInitialKm = new global::System.Data.DataColumn("InitialKm", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialKm);
                this.columnPerKMCharge = new global::System.Data.DataColumn("PerKMCharge", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerKMCharge);
                this.columnFlag = new global::System.Data.DataColumn("Flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag);
                this.columnWaitingPerMinute = new global::System.Data.DataColumn("WaitingPerMinute", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingPerMinute);
                this.columnFixAmount = new global::System.Data.DataColumn("FixAmount", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixAmount);
                this.columnRecordInsertTime = new global::System.Data.DataColumn("RecordInsertTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordInsertTime);
                this.columnGCMFlag = new global::System.Data.DataColumn("GCMFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCMFlag);
                this.columnkangarooupdate = new global::System.Data.DataColumn("kangarooupdate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkangarooupdate);
                this.columnWaitingTime = new global::System.Data.DataColumn("WaitingTime", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingTime);
                this.columnWaitingCost = new global::System.Data.DataColumn("WaitingCost", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingCost);
                this.columnRating = new global::System.Data.DataColumn("Rating", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRating);
                this.columnDNo = new global::System.Data.DataColumn("DNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDNo);
                this.columnDRating = new global::System.Data.DataColumn("DRating", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRating);
                this.columnCabType = new global::System.Data.DataColumn("CabType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabType);
                this.columnBookingType = new global::System.Data.DataColumn("BookingType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingType);
                this.columnFreeWaiting = new global::System.Data.DataColumn("FreeWaiting", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeWaiting);
                this.columnDiscountAmount = new global::System.Data.DataColumn("DiscountAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountAmount);
                this.columnPCode = new global::System.Data.DataColumn("PCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCode);
                this.columnPaymentType = new global::System.Data.DataColumn("PaymentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentType);
                this.columnDRatinNew = new global::System.Data.DataColumn("DRatinNew", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRatinNew);
                this.columnCancelTime = new global::System.Data.DataColumn("CancelTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelTime);
                this.columnAutoID.AutoIncrement = true;
                this.columnAutoID.AutoIncrementSeed = -1;
                this.columnAutoID.AutoIncrementStep = -1;
                this.columnAutoID.AllowDBNull = false;
                this.columnBookingID.AllowDBNull = false;
                this.columnBookingStatus.AllowDBNull = false;
                this.columnBookingStatus.MaxLength = 2;
                this.columnRefNo.AllowDBNull = false;
                this.columnRefNo.MaxLength = 6;
                this.columnImiNo.AllowDBNull = false;
                this.columnImiNo.MaxLength = 20;
                this.columnCabNo.AllowDBNull = false;
                this.columnCabNo.MaxLength = 5;
                this.columnClientMobile.AllowDBNull = false;
                this.columnClientMobile.MaxLength = 20;
                this.columnClientName.AllowDBNull = false;
                this.columnClientName.MaxLength = 100;
                this.columnClientAddress.AllowDBNull = false;
                this.columnClientAddress.MaxLength = 150;
                this.columnLandMark.AllowDBNull = false;
                this.columnLandMark.MaxLength = 100;
                this.columnRemark.AllowDBNull = false;
                this.columnRemark.MaxLength = 100;
                this.columnRQTime.AllowDBNull = false;
                this.columnRQTime.MaxLength = 5;
                this.columnLAT.AllowDBNull = false;
                this.columnLON.AllowDBNull = false;
                this.columnAcceptTime.AllowDBNull = false;
                this.columnAtThePlaceTime.AllowDBNull = false;
                this.columnMeterOnTime.AllowDBNull = false;
                this.columnMeterOffTime.AllowDBNull = false;
                this.columnMeterOffLAT.AllowDBNull = false;
                this.columnMeterOffLON.AllowDBNull = false;
                this.columnMeterOffAddress.AllowDBNull = false;
                this.columnMeterOffAddress.MaxLength = 150;
                this.columnRunningKM.AllowDBNull = false;
                this.columnAmount.AllowDBNull = false;
                this.columnInitialKm.AllowDBNull = false;
                this.columnPerKMCharge.AllowDBNull = false;
                this.columnFlag.AllowDBNull = false;
                this.columnFlag.MaxLength = 2;
                this.columnWaitingPerMinute.AllowDBNull = false;
                this.columnFixAmount.AllowDBNull = false;
                this.columnRecordInsertTime.AllowDBNull = false;
                this.columnGCMFlag.AllowDBNull = false;
                this.columnkangarooupdate.AllowDBNull = false;
                this.columnWaitingTime.AllowDBNull = false;
                this.columnWaitingCost.AllowDBNull = false;
                this.columnRating.AllowDBNull = false;
                this.columnDNo.AllowDBNull = false;
                this.columnDNo.MaxLength = 5;
                this.columnDRating.AllowDBNull = false;
                this.columnCabType.AllowDBNull = false;
                this.columnCabType.MaxLength = 1;
                this.columnBookingType.AllowDBNull = false;
                this.columnBookingType.MaxLength = 2;
                this.columnFreeWaiting.AllowDBNull = false;
                this.columnDiscountAmount.AllowDBNull = false;
                this.columnPCode.AllowDBNull = false;
                this.columnPCode.MaxLength = 20;
                this.columnPaymentType.AllowDBNull = false;
                this.columnPaymentType.MaxLength = 2;
                this.columnDRatinNew.AllowDBNull = false;
                this.columnCancelTime.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CancelBookingNewRow NewCancelBookingNewRow() {
                return ((CancelBookingNewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CancelBookingNewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CancelBookingNewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CancelBookingNewRowChanged != null)) {
                    this.CancelBookingNewRowChanged(this, new CancelBookingNewRowChangeEvent(((CancelBookingNewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CancelBookingNewRowChanging != null)) {
                    this.CancelBookingNewRowChanging(this, new CancelBookingNewRowChangeEvent(((CancelBookingNewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CancelBookingNewRowDeleted != null)) {
                    this.CancelBookingNewRowDeleted(this, new CancelBookingNewRowChangeEvent(((CancelBookingNewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CancelBookingNewRowDeleting != null)) {
                    this.CancelBookingNewRowDeleting(this, new CancelBookingNewRowChangeEvent(((CancelBookingNewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCancelBookingNewRow(CancelBookingNewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CancelBookingNewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClientFavoriteDataTable : global::System.Data.TypedTableBase<ClientFavoriteRow> {
            
            private global::System.Data.DataColumn columnmobile;
            
            private global::System.Data.DataColumn columntitle;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columnlat;
            
            private global::System.Data.DataColumn columnlon;
            
            private global::System.Data.DataColumn columntype;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientFavoriteDataTable() {
                this.TableName = "ClientFavorite";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ClientFavoriteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ClientFavoriteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn mobileColumn {
                get {
                    return this.columnmobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn titleColumn {
                get {
                    return this.columntitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn latColumn {
                get {
                    return this.columnlat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn lonColumn {
                get {
                    return this.columnlon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientFavoriteRow this[int index] {
                get {
                    return ((ClientFavoriteRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClientFavoriteRowChangeEventHandler ClientFavoriteRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClientFavoriteRowChangeEventHandler ClientFavoriteRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClientFavoriteRowChangeEventHandler ClientFavoriteRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClientFavoriteRowChangeEventHandler ClientFavoriteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddClientFavoriteRow(ClientFavoriteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientFavoriteRow AddClientFavoriteRow(string mobile, string title, string address, double lat, double lon, string type) {
                ClientFavoriteRow rowClientFavoriteRow = ((ClientFavoriteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        mobile,
                        title,
                        address,
                        lat,
                        lon,
                        type};
                rowClientFavoriteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClientFavoriteRow);
                return rowClientFavoriteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientFavoriteRow FindBymobiletitle(string mobile, string title) {
                return ((ClientFavoriteRow)(this.Rows.Find(new object[] {
                            mobile,
                            title})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ClientFavoriteDataTable cln = ((ClientFavoriteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClientFavoriteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnmobile = base.Columns["mobile"];
                this.columntitle = base.Columns["title"];
                this.columnaddress = base.Columns["address"];
                this.columnlat = base.Columns["lat"];
                this.columnlon = base.Columns["lon"];
                this.columntype = base.Columns["type"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnmobile = new global::System.Data.DataColumn("mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmobile);
                this.columntitle = new global::System.Data.DataColumn("title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntitle);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columnlat = new global::System.Data.DataColumn("lat", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlat);
                this.columnlon = new global::System.Data.DataColumn("lon", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlon);
                this.columntype = new global::System.Data.DataColumn("type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnmobile,
                                this.columntitle}, true));
                this.columnmobile.AllowDBNull = false;
                this.columnmobile.MaxLength = 15;
                this.columntitle.AllowDBNull = false;
                this.columntitle.MaxLength = 25;
                this.columnaddress.AllowDBNull = false;
                this.columnaddress.MaxLength = 150;
                this.columnlat.AllowDBNull = false;
                this.columnlon.AllowDBNull = false;
                this.columntype.AllowDBNull = false;
                this.columntype.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientFavoriteRow NewClientFavoriteRow() {
                return ((ClientFavoriteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClientFavoriteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ClientFavoriteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClientFavoriteRowChanged != null)) {
                    this.ClientFavoriteRowChanged(this, new ClientFavoriteRowChangeEvent(((ClientFavoriteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClientFavoriteRowChanging != null)) {
                    this.ClientFavoriteRowChanging(this, new ClientFavoriteRowChangeEvent(((ClientFavoriteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClientFavoriteRowDeleted != null)) {
                    this.ClientFavoriteRowDeleted(this, new ClientFavoriteRowChangeEvent(((ClientFavoriteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClientFavoriteRowDeleting != null)) {
                    this.ClientFavoriteRowDeleting(this, new ClientFavoriteRowChangeEvent(((ClientFavoriteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveClientFavoriteRow(ClientFavoriteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClientFavoriteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClientMobileRegistrationOldDataTable : global::System.Data.TypedTableBase<ClientMobileRegistrationOldRow> {
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnDeviceID;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnEMail;
            
            private global::System.Data.DataColumn columnPassword;
            
            private global::System.Data.DataColumn columnPin;
            
            private global::System.Data.DataColumn columnRegDateTime;
            
            private global::System.Data.DataColumn columnBookingCount;
            
            private global::System.Data.DataColumn columnCancelCount;
            
            private global::System.Data.DataColumn columnInsertTime;
            
            private global::System.Data.DataColumn columnUpdateTime;
            
            private global::System.Data.DataColumn columnPhoneModel;
            
            private global::System.Data.DataColumn columnOS;
            
            private global::System.Data.DataColumn columnCountryCode;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnEMailSubcription;
            
            private global::System.Data.DataColumn columnRequestSendTime;
            
            private global::System.Data.DataColumn columnPinExpairDuration;
            
            private global::System.Data.DataColumn columnPreferedLangauge;
            
            private global::System.Data.DataColumn columnlogin;
            
            private global::System.Data.DataColumn columnLastLogin;
            
            private global::System.Data.DataColumn columnPinValidate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientMobileRegistrationOldDataTable() {
                this.TableName = "ClientMobileRegistrationOld";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ClientMobileRegistrationOldDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ClientMobileRegistrationOldDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeviceIDColumn {
                get {
                    return this.columnDeviceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMailColumn {
                get {
                    return this.columnEMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PasswordColumn {
                get {
                    return this.columnPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PinColumn {
                get {
                    return this.columnPin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegDateTimeColumn {
                get {
                    return this.columnRegDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingCountColumn {
                get {
                    return this.columnBookingCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CancelCountColumn {
                get {
                    return this.columnCancelCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertTimeColumn {
                get {
                    return this.columnInsertTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateTimeColumn {
                get {
                    return this.columnUpdateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhoneModelColumn {
                get {
                    return this.columnPhoneModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OSColumn {
                get {
                    return this.columnOS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryCodeColumn {
                get {
                    return this.columnCountryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMailSubcriptionColumn {
                get {
                    return this.columnEMailSubcription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequestSendTimeColumn {
                get {
                    return this.columnRequestSendTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PinExpairDurationColumn {
                get {
                    return this.columnPinExpairDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PreferedLangaugeColumn {
                get {
                    return this.columnPreferedLangauge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn loginColumn {
                get {
                    return this.columnlogin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastLoginColumn {
                get {
                    return this.columnLastLogin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PinValidateColumn {
                get {
                    return this.columnPinValidate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientMobileRegistrationOldRow this[int index] {
                get {
                    return ((ClientMobileRegistrationOldRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClientMobileRegistrationOldRowChangeEventHandler ClientMobileRegistrationOldRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClientMobileRegistrationOldRowChangeEventHandler ClientMobileRegistrationOldRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClientMobileRegistrationOldRowChangeEventHandler ClientMobileRegistrationOldRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClientMobileRegistrationOldRowChangeEventHandler ClientMobileRegistrationOldRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddClientMobileRegistrationOldRow(ClientMobileRegistrationOldRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientMobileRegistrationOldRow AddClientMobileRegistrationOldRow(
                        string Mobile, 
                        string DeviceID, 
                        string Title, 
                        string Name, 
                        string EMail, 
                        string Password, 
                        int Pin, 
                        System.DateTime RegDateTime, 
                        int BookingCount, 
                        int CancelCount, 
                        System.DateTime InsertTime, 
                        System.DateTime UpdateTime, 
                        string PhoneModel, 
                        string OS, 
                        string CountryCode, 
                        string Country, 
                        sbyte EMailSubcription, 
                        System.DateTime RequestSendTime, 
                        int PinExpairDuration, 
                        string PreferedLangauge, 
                        int login, 
                        System.DateTime LastLogin, 
                        bool PinValidate) {
                ClientMobileRegistrationOldRow rowClientMobileRegistrationOldRow = ((ClientMobileRegistrationOldRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Mobile,
                        DeviceID,
                        Title,
                        Name,
                        EMail,
                        Password,
                        Pin,
                        RegDateTime,
                        BookingCount,
                        CancelCount,
                        InsertTime,
                        UpdateTime,
                        PhoneModel,
                        OS,
                        CountryCode,
                        Country,
                        EMailSubcription,
                        RequestSendTime,
                        PinExpairDuration,
                        PreferedLangauge,
                        login,
                        LastLogin,
                        PinValidate};
                rowClientMobileRegistrationOldRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClientMobileRegistrationOldRow);
                return rowClientMobileRegistrationOldRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientMobileRegistrationOldRow FindByMobile(string Mobile) {
                return ((ClientMobileRegistrationOldRow)(this.Rows.Find(new object[] {
                            Mobile})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ClientMobileRegistrationOldDataTable cln = ((ClientMobileRegistrationOldDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClientMobileRegistrationOldDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMobile = base.Columns["Mobile"];
                this.columnDeviceID = base.Columns["DeviceID"];
                this.columnTitle = base.Columns["Title"];
                this.columnName = base.Columns["Name"];
                this.columnEMail = base.Columns["EMail"];
                this.columnPassword = base.Columns["Password"];
                this.columnPin = base.Columns["Pin"];
                this.columnRegDateTime = base.Columns["RegDateTime"];
                this.columnBookingCount = base.Columns["BookingCount"];
                this.columnCancelCount = base.Columns["CancelCount"];
                this.columnInsertTime = base.Columns["InsertTime"];
                this.columnUpdateTime = base.Columns["UpdateTime"];
                this.columnPhoneModel = base.Columns["PhoneModel"];
                this.columnOS = base.Columns["OS"];
                this.columnCountryCode = base.Columns["CountryCode"];
                this.columnCountry = base.Columns["Country"];
                this.columnEMailSubcription = base.Columns["EMailSubcription"];
                this.columnRequestSendTime = base.Columns["RequestSendTime"];
                this.columnPinExpairDuration = base.Columns["PinExpairDuration"];
                this.columnPreferedLangauge = base.Columns["PreferedLangauge"];
                this.columnlogin = base.Columns["login"];
                this.columnLastLogin = base.Columns["LastLogin"];
                this.columnPinValidate = base.Columns["PinValidate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnDeviceID = new global::System.Data.DataColumn("DeviceID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeviceID);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnEMail = new global::System.Data.DataColumn("EMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMail);
                this.columnPassword = new global::System.Data.DataColumn("Password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassword);
                this.columnPin = new global::System.Data.DataColumn("Pin", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPin);
                this.columnRegDateTime = new global::System.Data.DataColumn("RegDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegDateTime);
                this.columnBookingCount = new global::System.Data.DataColumn("BookingCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingCount);
                this.columnCancelCount = new global::System.Data.DataColumn("CancelCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancelCount);
                this.columnInsertTime = new global::System.Data.DataColumn("InsertTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertTime);
                this.columnUpdateTime = new global::System.Data.DataColumn("UpdateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTime);
                this.columnPhoneModel = new global::System.Data.DataColumn("PhoneModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneModel);
                this.columnOS = new global::System.Data.DataColumn("OS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOS);
                this.columnCountryCode = new global::System.Data.DataColumn("CountryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryCode);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnEMailSubcription = new global::System.Data.DataColumn("EMailSubcription", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMailSubcription);
                this.columnRequestSendTime = new global::System.Data.DataColumn("RequestSendTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestSendTime);
                this.columnPinExpairDuration = new global::System.Data.DataColumn("PinExpairDuration", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPinExpairDuration);
                this.columnPreferedLangauge = new global::System.Data.DataColumn("PreferedLangauge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreferedLangauge);
                this.columnlogin = new global::System.Data.DataColumn("login", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogin);
                this.columnLastLogin = new global::System.Data.DataColumn("LastLogin", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastLogin);
                this.columnPinValidate = new global::System.Data.DataColumn("PinValidate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPinValidate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMobile}, true));
                this.columnMobile.AllowDBNull = false;
                this.columnMobile.Unique = true;
                this.columnMobile.MaxLength = 15;
                this.columnDeviceID.AllowDBNull = false;
                this.columnDeviceID.MaxLength = 75;
                this.columnTitle.AllowDBNull = false;
                this.columnTitle.MaxLength = 5;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 500;
                this.columnEMail.AllowDBNull = false;
                this.columnEMail.MaxLength = 75;
                this.columnPassword.AllowDBNull = false;
                this.columnPassword.MaxLength = 32;
                this.columnPin.AllowDBNull = false;
                this.columnRegDateTime.AllowDBNull = false;
                this.columnBookingCount.AllowDBNull = false;
                this.columnCancelCount.AllowDBNull = false;
                this.columnInsertTime.AllowDBNull = false;
                this.columnUpdateTime.AllowDBNull = false;
                this.columnPhoneModel.AllowDBNull = false;
                this.columnPhoneModel.MaxLength = 25;
                this.columnOS.AllowDBNull = false;
                this.columnOS.MaxLength = 20;
                this.columnCountryCode.AllowDBNull = false;
                this.columnCountryCode.MaxLength = 10;
                this.columnCountry.AllowDBNull = false;
                this.columnCountry.MaxLength = 25;
                this.columnEMailSubcription.AllowDBNull = false;
                this.columnRequestSendTime.AllowDBNull = false;
                this.columnPinExpairDuration.AllowDBNull = false;
                this.columnPreferedLangauge.AllowDBNull = false;
                this.columnPreferedLangauge.MaxLength = 30;
                this.columnlogin.AllowDBNull = false;
                this.columnLastLogin.AllowDBNull = false;
                this.columnPinValidate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientMobileRegistrationOldRow NewClientMobileRegistrationOldRow() {
                return ((ClientMobileRegistrationOldRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClientMobileRegistrationOldRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ClientMobileRegistrationOldRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClientMobileRegistrationOldRowChanged != null)) {
                    this.ClientMobileRegistrationOldRowChanged(this, new ClientMobileRegistrationOldRowChangeEvent(((ClientMobileRegistrationOldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClientMobileRegistrationOldRowChanging != null)) {
                    this.ClientMobileRegistrationOldRowChanging(this, new ClientMobileRegistrationOldRowChangeEvent(((ClientMobileRegistrationOldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClientMobileRegistrationOldRowDeleted != null)) {
                    this.ClientMobileRegistrationOldRowDeleted(this, new ClientMobileRegistrationOldRowChangeEvent(((ClientMobileRegistrationOldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClientMobileRegistrationOldRowDeleting != null)) {
                    this.ClientMobileRegistrationOldRowDeleting(this, new ClientMobileRegistrationOldRowChangeEvent(((ClientMobileRegistrationOldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveClientMobileRegistrationOldRow(ClientMobileRegistrationOldRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClientMobileRegistrationOldDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DespatchBookingDataTable : global::System.Data.TypedTableBase<DespatchBookingRow> {
            
            private global::System.Data.DataColumn columnAutoID;
            
            private global::System.Data.DataColumn columnBookingID;
            
            private global::System.Data.DataColumn columnBookingStatus;
            
            private global::System.Data.DataColumn columnRefNo;
            
            private global::System.Data.DataColumn columnImiNo;
            
            private global::System.Data.DataColumn columnCabNo;
            
            private global::System.Data.DataColumn columnClientMobile;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnClientAddress;
            
            private global::System.Data.DataColumn columnLandMark;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnRQTime;
            
            private global::System.Data.DataColumn columnLAT;
            
            private global::System.Data.DataColumn columnLON;
            
            private global::System.Data.DataColumn columnAcceptTime;
            
            private global::System.Data.DataColumn columnAtThePlaceTime;
            
            private global::System.Data.DataColumn columnMeterOnTime;
            
            private global::System.Data.DataColumn columnMeterOffTime;
            
            private global::System.Data.DataColumn columnMeterOffLAT;
            
            private global::System.Data.DataColumn columnMeterOffLON;
            
            private global::System.Data.DataColumn columnMeterOffAddress;
            
            private global::System.Data.DataColumn columnRunningKM;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnInitialKm;
            
            private global::System.Data.DataColumn columnPerKMCharge;
            
            private global::System.Data.DataColumn columnFlag;
            
            private global::System.Data.DataColumn columnWaitingPerMinute;
            
            private global::System.Data.DataColumn columnFixAmount;
            
            private global::System.Data.DataColumn columnRecordInsertTime;
            
            private global::System.Data.DataColumn columnGCMFlag;
            
            private global::System.Data.DataColumn columnkangarooupdate;
            
            private global::System.Data.DataColumn columnWaitingTime;
            
            private global::System.Data.DataColumn columnWaitingCost;
            
            private global::System.Data.DataColumn columnRating;
            
            private global::System.Data.DataColumn columnDNo;
            
            private global::System.Data.DataColumn columnDRating;
            
            private global::System.Data.DataColumn columnCabType;
            
            private global::System.Data.DataColumn columnBookingType;
            
            private global::System.Data.DataColumn columnFreeWaiting;
            
            private global::System.Data.DataColumn columnPCode;
            
            private global::System.Data.DataColumn columnPaymentType;
            
            private global::System.Data.DataColumn columnDiscountAmount;
            
            private global::System.Data.DataColumn columnDRatinNew;
            
            private global::System.Data.DataColumn columnPaid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DespatchBookingDataTable() {
                this.TableName = "DespatchBooking";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DespatchBookingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DespatchBookingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoIDColumn {
                get {
                    return this.columnAutoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingIDColumn {
                get {
                    return this.columnBookingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingStatusColumn {
                get {
                    return this.columnBookingStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefNoColumn {
                get {
                    return this.columnRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImiNoColumn {
                get {
                    return this.columnImiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CabNoColumn {
                get {
                    return this.columnCabNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientMobileColumn {
                get {
                    return this.columnClientMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientAddressColumn {
                get {
                    return this.columnClientAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LandMarkColumn {
                get {
                    return this.columnLandMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RQTimeColumn {
                get {
                    return this.columnRQTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LATColumn {
                get {
                    return this.columnLAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LONColumn {
                get {
                    return this.columnLON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AcceptTimeColumn {
                get {
                    return this.columnAcceptTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AtThePlaceTimeColumn {
                get {
                    return this.columnAtThePlaceTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOnTimeColumn {
                get {
                    return this.columnMeterOnTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffTimeColumn {
                get {
                    return this.columnMeterOffTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffLATColumn {
                get {
                    return this.columnMeterOffLAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffLONColumn {
                get {
                    return this.columnMeterOffLON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffAddressColumn {
                get {
                    return this.columnMeterOffAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RunningKMColumn {
                get {
                    return this.columnRunningKM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InitialKmColumn {
                get {
                    return this.columnInitialKm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerKMChargeColumn {
                get {
                    return this.columnPerKMCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FlagColumn {
                get {
                    return this.columnFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingPerMinuteColumn {
                get {
                    return this.columnWaitingPerMinute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FixAmountColumn {
                get {
                    return this.columnFixAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordInsertTimeColumn {
                get {
                    return this.columnRecordInsertTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GCMFlagColumn {
                get {
                    return this.columnGCMFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kangarooupdateColumn {
                get {
                    return this.columnkangarooupdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingTimeColumn {
                get {
                    return this.columnWaitingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingCostColumn {
                get {
                    return this.columnWaitingCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RatingColumn {
                get {
                    return this.columnRating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DNoColumn {
                get {
                    return this.columnDNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DRatingColumn {
                get {
                    return this.columnDRating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CabTypeColumn {
                get {
                    return this.columnCabType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingTypeColumn {
                get {
                    return this.columnBookingType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeWaitingColumn {
                get {
                    return this.columnFreeWaiting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCodeColumn {
                get {
                    return this.columnPCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentTypeColumn {
                get {
                    return this.columnPaymentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiscountAmountColumn {
                get {
                    return this.columnDiscountAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DRatinNewColumn {
                get {
                    return this.columnDRatinNew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaidColumn {
                get {
                    return this.columnPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DespatchBookingRow this[int index] {
                get {
                    return ((DespatchBookingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DespatchBookingRowChangeEventHandler DespatchBookingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DespatchBookingRowChangeEventHandler DespatchBookingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DespatchBookingRowChangeEventHandler DespatchBookingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DespatchBookingRowChangeEventHandler DespatchBookingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDespatchBookingRow(DespatchBookingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DespatchBookingRow AddDespatchBookingRow(
                        long BookingID, 
                        string BookingStatus, 
                        string RefNo, 
                        string ImiNo, 
                        string CabNo, 
                        string ClientMobile, 
                        string ClientName, 
                        string ClientAddress, 
                        string LandMark, 
                        string Remark, 
                        string RQTime, 
                        double LAT, 
                        double LON, 
                        System.DateTime AcceptTime, 
                        System.DateTime AtThePlaceTime, 
                        System.DateTime MeterOnTime, 
                        System.DateTime MeterOffTime, 
                        float MeterOffLAT, 
                        float MeterOffLON, 
                        string MeterOffAddress, 
                        double RunningKM, 
                        double Amount, 
                        double InitialKm, 
                        double PerKMCharge, 
                        string Flag, 
                        float WaitingPerMinute, 
                        float FixAmount, 
                        System.DateTime RecordInsertTime, 
                        bool GCMFlag, 
                        int kangarooupdate, 
                        float WaitingTime, 
                        float WaitingCost, 
                        int Rating, 
                        string DNo, 
                        double DRating, 
                        string CabType, 
                        string BookingType, 
                        int FreeWaiting, 
                        string PCode, 
                        string PaymentType, 
                        double DiscountAmount, 
                        double DRatinNew, 
                        int Paid) {
                DespatchBookingRow rowDespatchBookingRow = ((DespatchBookingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BookingID,
                        BookingStatus,
                        RefNo,
                        ImiNo,
                        CabNo,
                        ClientMobile,
                        ClientName,
                        ClientAddress,
                        LandMark,
                        Remark,
                        RQTime,
                        LAT,
                        LON,
                        AcceptTime,
                        AtThePlaceTime,
                        MeterOnTime,
                        MeterOffTime,
                        MeterOffLAT,
                        MeterOffLON,
                        MeterOffAddress,
                        RunningKM,
                        Amount,
                        InitialKm,
                        PerKMCharge,
                        Flag,
                        WaitingPerMinute,
                        FixAmount,
                        RecordInsertTime,
                        GCMFlag,
                        kangarooupdate,
                        WaitingTime,
                        WaitingCost,
                        Rating,
                        DNo,
                        DRating,
                        CabType,
                        BookingType,
                        FreeWaiting,
                        PCode,
                        PaymentType,
                        DiscountAmount,
                        DRatinNew,
                        Paid};
                rowDespatchBookingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDespatchBookingRow);
                return rowDespatchBookingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DespatchBookingRow FindByBookingID(long BookingID) {
                return ((DespatchBookingRow)(this.Rows.Find(new object[] {
                            BookingID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DespatchBookingDataTable cln = ((DespatchBookingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DespatchBookingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAutoID = base.Columns["AutoID"];
                this.columnBookingID = base.Columns["BookingID"];
                this.columnBookingStatus = base.Columns["BookingStatus"];
                this.columnRefNo = base.Columns["RefNo"];
                this.columnImiNo = base.Columns["ImiNo"];
                this.columnCabNo = base.Columns["CabNo"];
                this.columnClientMobile = base.Columns["ClientMobile"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnClientAddress = base.Columns["ClientAddress"];
                this.columnLandMark = base.Columns["LandMark"];
                this.columnRemark = base.Columns["Remark"];
                this.columnRQTime = base.Columns["RQTime"];
                this.columnLAT = base.Columns["LAT"];
                this.columnLON = base.Columns["LON"];
                this.columnAcceptTime = base.Columns["AcceptTime"];
                this.columnAtThePlaceTime = base.Columns["AtThePlaceTime"];
                this.columnMeterOnTime = base.Columns["MeterOnTime"];
                this.columnMeterOffTime = base.Columns["MeterOffTime"];
                this.columnMeterOffLAT = base.Columns["MeterOffLAT"];
                this.columnMeterOffLON = base.Columns["MeterOffLON"];
                this.columnMeterOffAddress = base.Columns["MeterOffAddress"];
                this.columnRunningKM = base.Columns["RunningKM"];
                this.columnAmount = base.Columns["Amount"];
                this.columnInitialKm = base.Columns["InitialKm"];
                this.columnPerKMCharge = base.Columns["PerKMCharge"];
                this.columnFlag = base.Columns["Flag"];
                this.columnWaitingPerMinute = base.Columns["WaitingPerMinute"];
                this.columnFixAmount = base.Columns["FixAmount"];
                this.columnRecordInsertTime = base.Columns["RecordInsertTime"];
                this.columnGCMFlag = base.Columns["GCMFlag"];
                this.columnkangarooupdate = base.Columns["kangarooupdate"];
                this.columnWaitingTime = base.Columns["WaitingTime"];
                this.columnWaitingCost = base.Columns["WaitingCost"];
                this.columnRating = base.Columns["Rating"];
                this.columnDNo = base.Columns["DNo"];
                this.columnDRating = base.Columns["DRating"];
                this.columnCabType = base.Columns["CabType"];
                this.columnBookingType = base.Columns["BookingType"];
                this.columnFreeWaiting = base.Columns["FreeWaiting"];
                this.columnPCode = base.Columns["PCode"];
                this.columnPaymentType = base.Columns["PaymentType"];
                this.columnDiscountAmount = base.Columns["DiscountAmount"];
                this.columnDRatinNew = base.Columns["DRatinNew"];
                this.columnPaid = base.Columns["Paid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAutoID = new global::System.Data.DataColumn("AutoID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoID);
                this.columnBookingID = new global::System.Data.DataColumn("BookingID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingID);
                this.columnBookingStatus = new global::System.Data.DataColumn("BookingStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingStatus);
                this.columnRefNo = new global::System.Data.DataColumn("RefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefNo);
                this.columnImiNo = new global::System.Data.DataColumn("ImiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImiNo);
                this.columnCabNo = new global::System.Data.DataColumn("CabNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabNo);
                this.columnClientMobile = new global::System.Data.DataColumn("ClientMobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientMobile);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnClientAddress = new global::System.Data.DataColumn("ClientAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientAddress);
                this.columnLandMark = new global::System.Data.DataColumn("LandMark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandMark);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnRQTime = new global::System.Data.DataColumn("RQTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRQTime);
                this.columnLAT = new global::System.Data.DataColumn("LAT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT);
                this.columnLON = new global::System.Data.DataColumn("LON", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLON);
                this.columnAcceptTime = new global::System.Data.DataColumn("AcceptTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptTime);
                this.columnAtThePlaceTime = new global::System.Data.DataColumn("AtThePlaceTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAtThePlaceTime);
                this.columnMeterOnTime = new global::System.Data.DataColumn("MeterOnTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOnTime);
                this.columnMeterOffTime = new global::System.Data.DataColumn("MeterOffTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffTime);
                this.columnMeterOffLAT = new global::System.Data.DataColumn("MeterOffLAT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffLAT);
                this.columnMeterOffLON = new global::System.Data.DataColumn("MeterOffLON", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffLON);
                this.columnMeterOffAddress = new global::System.Data.DataColumn("MeterOffAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffAddress);
                this.columnRunningKM = new global::System.Data.DataColumn("RunningKM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunningKM);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnInitialKm = new global::System.Data.DataColumn("InitialKm", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialKm);
                this.columnPerKMCharge = new global::System.Data.DataColumn("PerKMCharge", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerKMCharge);
                this.columnFlag = new global::System.Data.DataColumn("Flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag);
                this.columnWaitingPerMinute = new global::System.Data.DataColumn("WaitingPerMinute", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingPerMinute);
                this.columnFixAmount = new global::System.Data.DataColumn("FixAmount", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixAmount);
                this.columnRecordInsertTime = new global::System.Data.DataColumn("RecordInsertTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordInsertTime);
                this.columnGCMFlag = new global::System.Data.DataColumn("GCMFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCMFlag);
                this.columnkangarooupdate = new global::System.Data.DataColumn("kangarooupdate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkangarooupdate);
                this.columnWaitingTime = new global::System.Data.DataColumn("WaitingTime", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingTime);
                this.columnWaitingCost = new global::System.Data.DataColumn("WaitingCost", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingCost);
                this.columnRating = new global::System.Data.DataColumn("Rating", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRating);
                this.columnDNo = new global::System.Data.DataColumn("DNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDNo);
                this.columnDRating = new global::System.Data.DataColumn("DRating", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRating);
                this.columnCabType = new global::System.Data.DataColumn("CabType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabType);
                this.columnBookingType = new global::System.Data.DataColumn("BookingType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingType);
                this.columnFreeWaiting = new global::System.Data.DataColumn("FreeWaiting", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeWaiting);
                this.columnPCode = new global::System.Data.DataColumn("PCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCode);
                this.columnPaymentType = new global::System.Data.DataColumn("PaymentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentType);
                this.columnDiscountAmount = new global::System.Data.DataColumn("DiscountAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountAmount);
                this.columnDRatinNew = new global::System.Data.DataColumn("DRatinNew", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRatinNew);
                this.columnPaid = new global::System.Data.DataColumn("Paid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBookingID}, true));
                this.columnAutoID.AutoIncrement = true;
                this.columnAutoID.AutoIncrementSeed = -1;
                this.columnAutoID.AutoIncrementStep = -1;
                this.columnAutoID.AllowDBNull = false;
                this.columnBookingID.AllowDBNull = false;
                this.columnBookingID.Unique = true;
                this.columnBookingStatus.AllowDBNull = false;
                this.columnBookingStatus.MaxLength = 2;
                this.columnRefNo.AllowDBNull = false;
                this.columnRefNo.MaxLength = 6;
                this.columnImiNo.AllowDBNull = false;
                this.columnImiNo.MaxLength = 20;
                this.columnCabNo.AllowDBNull = false;
                this.columnCabNo.MaxLength = 5;
                this.columnClientMobile.AllowDBNull = false;
                this.columnClientMobile.MaxLength = 20;
                this.columnClientName.AllowDBNull = false;
                this.columnClientName.MaxLength = 100;
                this.columnClientAddress.AllowDBNull = false;
                this.columnClientAddress.MaxLength = 150;
                this.columnLandMark.AllowDBNull = false;
                this.columnLandMark.MaxLength = 100;
                this.columnRemark.AllowDBNull = false;
                this.columnRemark.MaxLength = 100;
                this.columnRQTime.AllowDBNull = false;
                this.columnRQTime.MaxLength = 5;
                this.columnLAT.AllowDBNull = false;
                this.columnLON.AllowDBNull = false;
                this.columnAcceptTime.AllowDBNull = false;
                this.columnAtThePlaceTime.AllowDBNull = false;
                this.columnMeterOnTime.AllowDBNull = false;
                this.columnMeterOffTime.AllowDBNull = false;
                this.columnMeterOffLAT.AllowDBNull = false;
                this.columnMeterOffLON.AllowDBNull = false;
                this.columnMeterOffAddress.AllowDBNull = false;
                this.columnMeterOffAddress.MaxLength = 150;
                this.columnRunningKM.AllowDBNull = false;
                this.columnAmount.AllowDBNull = false;
                this.columnInitialKm.AllowDBNull = false;
                this.columnPerKMCharge.AllowDBNull = false;
                this.columnFlag.AllowDBNull = false;
                this.columnFlag.MaxLength = 2;
                this.columnWaitingPerMinute.AllowDBNull = false;
                this.columnFixAmount.AllowDBNull = false;
                this.columnRecordInsertTime.AllowDBNull = false;
                this.columnGCMFlag.AllowDBNull = false;
                this.columnkangarooupdate.AllowDBNull = false;
                this.columnWaitingTime.AllowDBNull = false;
                this.columnWaitingCost.AllowDBNull = false;
                this.columnRating.AllowDBNull = false;
                this.columnDNo.AllowDBNull = false;
                this.columnDNo.MaxLength = 5;
                this.columnDRating.AllowDBNull = false;
                this.columnCabType.AllowDBNull = false;
                this.columnCabType.MaxLength = 1;
                this.columnBookingType.AllowDBNull = false;
                this.columnBookingType.MaxLength = 2;
                this.columnFreeWaiting.AllowDBNull = false;
                this.columnPCode.AllowDBNull = false;
                this.columnPCode.MaxLength = 20;
                this.columnPaymentType.AllowDBNull = false;
                this.columnPaymentType.MaxLength = 2;
                this.columnDiscountAmount.AllowDBNull = false;
                this.columnDRatinNew.AllowDBNull = false;
                this.columnPaid.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DespatchBookingRow NewDespatchBookingRow() {
                return ((DespatchBookingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DespatchBookingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DespatchBookingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DespatchBookingRowChanged != null)) {
                    this.DespatchBookingRowChanged(this, new DespatchBookingRowChangeEvent(((DespatchBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DespatchBookingRowChanging != null)) {
                    this.DespatchBookingRowChanging(this, new DespatchBookingRowChangeEvent(((DespatchBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DespatchBookingRowDeleted != null)) {
                    this.DespatchBookingRowDeleted(this, new DespatchBookingRowChangeEvent(((DespatchBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DespatchBookingRowDeleting != null)) {
                    this.DespatchBookingRowDeleting(this, new DespatchBookingRowChangeEvent(((DespatchBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDespatchBookingRow(DespatchBookingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DespatchBookingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DespatchBookingStatusDataTable : global::System.Data.TypedTableBase<DespatchBookingStatusRow> {
            
            private global::System.Data.DataColumn columnAutoNo;
            
            private global::System.Data.DataColumn columnBookingID;
            
            private global::System.Data.DataColumn columnGCMId;
            
            private global::System.Data.DataColumn columnGCMCount;
            
            private global::System.Data.DataColumn columnGCMSendTime;
            
            private global::System.Data.DataColumn columnCabNo;
            
            private global::System.Data.DataColumn columnFlag;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DespatchBookingStatusDataTable() {
                this.TableName = "DespatchBookingStatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DespatchBookingStatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DespatchBookingStatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoNoColumn {
                get {
                    return this.columnAutoNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingIDColumn {
                get {
                    return this.columnBookingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GCMIdColumn {
                get {
                    return this.columnGCMId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GCMCountColumn {
                get {
                    return this.columnGCMCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GCMSendTimeColumn {
                get {
                    return this.columnGCMSendTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CabNoColumn {
                get {
                    return this.columnCabNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FlagColumn {
                get {
                    return this.columnFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DespatchBookingStatusRow this[int index] {
                get {
                    return ((DespatchBookingStatusRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DespatchBookingStatusRowChangeEventHandler DespatchBookingStatusRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DespatchBookingStatusRowChangeEventHandler DespatchBookingStatusRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DespatchBookingStatusRowChangeEventHandler DespatchBookingStatusRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DespatchBookingStatusRowChangeEventHandler DespatchBookingStatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDespatchBookingStatusRow(DespatchBookingStatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DespatchBookingStatusRow AddDespatchBookingStatusRow(long BookingID, string GCMId, sbyte GCMCount, System.DateTime GCMSendTime, string CabNo, bool Flag) {
                DespatchBookingStatusRow rowDespatchBookingStatusRow = ((DespatchBookingStatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BookingID,
                        GCMId,
                        GCMCount,
                        GCMSendTime,
                        CabNo,
                        Flag};
                rowDespatchBookingStatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDespatchBookingStatusRow);
                return rowDespatchBookingStatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DespatchBookingStatusRow FindByAutoNo(long AutoNo) {
                return ((DespatchBookingStatusRow)(this.Rows.Find(new object[] {
                            AutoNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DespatchBookingStatusDataTable cln = ((DespatchBookingStatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DespatchBookingStatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAutoNo = base.Columns["AutoNo"];
                this.columnBookingID = base.Columns["BookingID"];
                this.columnGCMId = base.Columns["GCMId"];
                this.columnGCMCount = base.Columns["GCMCount"];
                this.columnGCMSendTime = base.Columns["GCMSendTime"];
                this.columnCabNo = base.Columns["CabNo"];
                this.columnFlag = base.Columns["Flag"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAutoNo = new global::System.Data.DataColumn("AutoNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoNo);
                this.columnBookingID = new global::System.Data.DataColumn("BookingID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingID);
                this.columnGCMId = new global::System.Data.DataColumn("GCMId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCMId);
                this.columnGCMCount = new global::System.Data.DataColumn("GCMCount", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCMCount);
                this.columnGCMSendTime = new global::System.Data.DataColumn("GCMSendTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCMSendTime);
                this.columnCabNo = new global::System.Data.DataColumn("CabNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabNo);
                this.columnFlag = new global::System.Data.DataColumn("Flag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAutoNo}, true));
                this.columnAutoNo.AutoIncrement = true;
                this.columnAutoNo.AutoIncrementSeed = -1;
                this.columnAutoNo.AutoIncrementStep = -1;
                this.columnAutoNo.AllowDBNull = false;
                this.columnAutoNo.Unique = true;
                this.columnBookingID.AllowDBNull = false;
                this.columnGCMId.AllowDBNull = false;
                this.columnGCMId.MaxLength = 500;
                this.columnGCMCount.AllowDBNull = false;
                this.columnGCMSendTime.AllowDBNull = false;
                this.columnCabNo.AllowDBNull = false;
                this.columnCabNo.MaxLength = 5;
                this.columnFlag.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DespatchBookingStatusRow NewDespatchBookingStatusRow() {
                return ((DespatchBookingStatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DespatchBookingStatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DespatchBookingStatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DespatchBookingStatusRowChanged != null)) {
                    this.DespatchBookingStatusRowChanged(this, new DespatchBookingStatusRowChangeEvent(((DespatchBookingStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DespatchBookingStatusRowChanging != null)) {
                    this.DespatchBookingStatusRowChanging(this, new DespatchBookingStatusRowChangeEvent(((DespatchBookingStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DespatchBookingStatusRowDeleted != null)) {
                    this.DespatchBookingStatusRowDeleted(this, new DespatchBookingStatusRowChangeEvent(((DespatchBookingStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DespatchBookingStatusRowDeleting != null)) {
                    this.DespatchBookingStatusRowDeleting(this, new DespatchBookingStatusRowChangeEvent(((DespatchBookingStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDespatchBookingStatusRow(DespatchBookingStatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DespatchBookingStatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DisEngageBookingDataTable : global::System.Data.TypedTableBase<DisEngageBookingRow> {
            
            private global::System.Data.DataColumn columnAutoID;
            
            private global::System.Data.DataColumn columnBookingID;
            
            private global::System.Data.DataColumn columnRefNo;
            
            private global::System.Data.DataColumn columnClientMobile;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnDisTime;
            
            private global::System.Data.DataColumn columnCabNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DisEngageBookingDataTable() {
                this.TableName = "DisEngageBooking";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DisEngageBookingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DisEngageBookingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoIDColumn {
                get {
                    return this.columnAutoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingIDColumn {
                get {
                    return this.columnBookingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefNoColumn {
                get {
                    return this.columnRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientMobileColumn {
                get {
                    return this.columnClientMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DisTimeColumn {
                get {
                    return this.columnDisTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CabNoColumn {
                get {
                    return this.columnCabNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DisEngageBookingRow this[int index] {
                get {
                    return ((DisEngageBookingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DisEngageBookingRowChangeEventHandler DisEngageBookingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DisEngageBookingRowChangeEventHandler DisEngageBookingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DisEngageBookingRowChangeEventHandler DisEngageBookingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DisEngageBookingRowChangeEventHandler DisEngageBookingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDisEngageBookingRow(DisEngageBookingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DisEngageBookingRow AddDisEngageBookingRow(long BookingID, string RefNo, string ClientMobile, string ClientName, System.DateTime DisTime, string CabNo) {
                DisEngageBookingRow rowDisEngageBookingRow = ((DisEngageBookingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BookingID,
                        RefNo,
                        ClientMobile,
                        ClientName,
                        DisTime,
                        CabNo};
                rowDisEngageBookingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDisEngageBookingRow);
                return rowDisEngageBookingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DisEngageBookingRow FindByAutoID(int AutoID) {
                return ((DisEngageBookingRow)(this.Rows.Find(new object[] {
                            AutoID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DisEngageBookingDataTable cln = ((DisEngageBookingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DisEngageBookingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAutoID = base.Columns["AutoID"];
                this.columnBookingID = base.Columns["BookingID"];
                this.columnRefNo = base.Columns["RefNo"];
                this.columnClientMobile = base.Columns["ClientMobile"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnDisTime = base.Columns["DisTime"];
                this.columnCabNo = base.Columns["CabNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAutoID = new global::System.Data.DataColumn("AutoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoID);
                this.columnBookingID = new global::System.Data.DataColumn("BookingID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingID);
                this.columnRefNo = new global::System.Data.DataColumn("RefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefNo);
                this.columnClientMobile = new global::System.Data.DataColumn("ClientMobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientMobile);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnDisTime = new global::System.Data.DataColumn("DisTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisTime);
                this.columnCabNo = new global::System.Data.DataColumn("CabNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAutoID}, true));
                this.columnAutoID.AutoIncrement = true;
                this.columnAutoID.AutoIncrementSeed = -1;
                this.columnAutoID.AutoIncrementStep = -1;
                this.columnAutoID.AllowDBNull = false;
                this.columnAutoID.Unique = true;
                this.columnBookingID.AllowDBNull = false;
                this.columnRefNo.AllowDBNull = false;
                this.columnRefNo.MaxLength = 6;
                this.columnClientMobile.AllowDBNull = false;
                this.columnClientMobile.MaxLength = 20;
                this.columnClientName.AllowDBNull = false;
                this.columnClientName.MaxLength = 100;
                this.columnDisTime.AllowDBNull = false;
                this.columnCabNo.AllowDBNull = false;
                this.columnCabNo.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DisEngageBookingRow NewDisEngageBookingRow() {
                return ((DisEngageBookingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DisEngageBookingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DisEngageBookingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DisEngageBookingRowChanged != null)) {
                    this.DisEngageBookingRowChanged(this, new DisEngageBookingRowChangeEvent(((DisEngageBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DisEngageBookingRowChanging != null)) {
                    this.DisEngageBookingRowChanging(this, new DisEngageBookingRowChangeEvent(((DisEngageBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DisEngageBookingRowDeleted != null)) {
                    this.DisEngageBookingRowDeleted(this, new DisEngageBookingRowChangeEvent(((DisEngageBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DisEngageBookingRowDeleting != null)) {
                    this.DisEngageBookingRowDeleting(this, new DisEngageBookingRowChangeEvent(((DisEngageBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDisEngageBookingRow(DisEngageBookingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DisEngageBookingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class driver_log_onoffDataTable : global::System.Data.TypedTableBase<driver_log_onoffRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnimei;
            
            private global::System.Data.DataColumn columndriver_id;
            
            private global::System.Data.DataColumn columnvehicle_id;
            
            private global::System.Data.DataColumn columnlogin_time;
            
            private global::System.Data.DataColumn columnlogin_location;
            
            private global::System.Data.DataColumn columninsert_time;
            
            private global::System.Data.DataColumn columnlogoff_time;
            
            private global::System.Data.DataColumn columnlogoff_location;
            
            private global::System.Data.DataColumn columnupdate_time;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_log_onoffDataTable() {
                this.TableName = "driver_log_onoff";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal driver_log_onoffDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected driver_log_onoffDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn imeiColumn {
                get {
                    return this.columnimei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn driver_idColumn {
                get {
                    return this.columndriver_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn vehicle_idColumn {
                get {
                    return this.columnvehicle_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn login_timeColumn {
                get {
                    return this.columnlogin_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn login_locationColumn {
                get {
                    return this.columnlogin_location;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn insert_timeColumn {
                get {
                    return this.columninsert_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn logoff_timeColumn {
                get {
                    return this.columnlogoff_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn logoff_locationColumn {
                get {
                    return this.columnlogoff_location;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn update_timeColumn {
                get {
                    return this.columnupdate_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_log_onoffRow this[int index] {
                get {
                    return ((driver_log_onoffRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event driver_log_onoffRowChangeEventHandler driver_log_onoffRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event driver_log_onoffRowChangeEventHandler driver_log_onoffRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event driver_log_onoffRowChangeEventHandler driver_log_onoffRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event driver_log_onoffRowChangeEventHandler driver_log_onoffRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Adddriver_log_onoffRow(driver_log_onoffRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_log_onoffRow Adddriver_log_onoffRow(string imei, string driver_id, int vehicle_id, System.DateTime login_time, string login_location, System.DateTime insert_time, System.DateTime logoff_time, string logoff_location, System.DateTime update_time) {
                driver_log_onoffRow rowdriver_log_onoffRow = ((driver_log_onoffRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        imei,
                        driver_id,
                        vehicle_id,
                        login_time,
                        login_location,
                        insert_time,
                        logoff_time,
                        logoff_location,
                        update_time};
                rowdriver_log_onoffRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdriver_log_onoffRow);
                return rowdriver_log_onoffRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_log_onoffRow FindByid(int id) {
                return ((driver_log_onoffRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                driver_log_onoffDataTable cln = ((driver_log_onoffDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new driver_log_onoffDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnimei = base.Columns["imei"];
                this.columndriver_id = base.Columns["driver_id"];
                this.columnvehicle_id = base.Columns["vehicle_id"];
                this.columnlogin_time = base.Columns["login_time"];
                this.columnlogin_location = base.Columns["login_location"];
                this.columninsert_time = base.Columns["insert_time"];
                this.columnlogoff_time = base.Columns["logoff_time"];
                this.columnlogoff_location = base.Columns["logoff_location"];
                this.columnupdate_time = base.Columns["update_time"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnimei = new global::System.Data.DataColumn("imei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimei);
                this.columndriver_id = new global::System.Data.DataColumn("driver_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriver_id);
                this.columnvehicle_id = new global::System.Data.DataColumn("vehicle_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehicle_id);
                this.columnlogin_time = new global::System.Data.DataColumn("login_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogin_time);
                this.columnlogin_location = new global::System.Data.DataColumn("login_location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogin_location);
                this.columninsert_time = new global::System.Data.DataColumn("insert_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninsert_time);
                this.columnlogoff_time = new global::System.Data.DataColumn("logoff_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogoff_time);
                this.columnlogoff_location = new global::System.Data.DataColumn("logoff_location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogoff_location);
                this.columnupdate_time = new global::System.Data.DataColumn("update_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_time);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnimei.AllowDBNull = false;
                this.columnimei.MaxLength = 20;
                this.columndriver_id.AllowDBNull = false;
                this.columndriver_id.MaxLength = 5;
                this.columnvehicle_id.AllowDBNull = false;
                this.columnlogin_time.AllowDBNull = false;
                this.columnlogin_location.AllowDBNull = false;
                this.columnlogin_location.MaxLength = 100;
                this.columninsert_time.AllowDBNull = false;
                this.columnlogoff_time.AllowDBNull = false;
                this.columnlogoff_location.AllowDBNull = false;
                this.columnlogoff_location.MaxLength = 100;
                this.columnupdate_time.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_log_onoffRow Newdriver_log_onoffRow() {
                return ((driver_log_onoffRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new driver_log_onoffRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(driver_log_onoffRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.driver_log_onoffRowChanged != null)) {
                    this.driver_log_onoffRowChanged(this, new driver_log_onoffRowChangeEvent(((driver_log_onoffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.driver_log_onoffRowChanging != null)) {
                    this.driver_log_onoffRowChanging(this, new driver_log_onoffRowChangeEvent(((driver_log_onoffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.driver_log_onoffRowDeleted != null)) {
                    this.driver_log_onoffRowDeleted(this, new driver_log_onoffRowChangeEvent(((driver_log_onoffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.driver_log_onoffRowDeleting != null)) {
                    this.driver_log_onoffRowDeleting(this, new driver_log_onoffRowChangeEvent(((driver_log_onoffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removedriver_log_onoffRow(driver_log_onoffRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "driver_log_onoffDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class driver_mobile_registrationDataTable : global::System.Data.TypedTableBase<driver_mobile_registrationRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnmobile_no;
            
            private global::System.Data.DataColumn columnimei_no;
            
            private global::System.Data.DataColumn columnvehicle_id;
            
            private global::System.Data.DataColumn columndriver_app_id;
            
            private global::System.Data.DataColumn columnsend_time;
            
            private global::System.Data.DataColumn columnaddeddate;
            
            private global::System.Data.DataColumn columnupdateddate;
            
            private global::System.Data.DataColumn columndeleted;
            
            private global::System.Data.DataColumn columndeleteddate;
            
            private global::System.Data.DataColumn columnsync;
            
            private global::System.Data.DataColumn columnsyncdate;
            
            private global::System.Data.DataColumn columntaxi_type_id;
            
            private global::System.Data.DataColumn columnstatus_id;
            
            private global::System.Data.DataColumn columnpulse;
            
            private global::System.Data.DataColumn columnTaxiType;
            
            private global::System.Data.DataColumn columnBluetoothSerial;
            
            private global::System.Data.DataColumn columnvcode;
            
            private global::System.Data.DataColumn columnvname;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_mobile_registrationDataTable() {
                this.TableName = "driver_mobile_registration";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal driver_mobile_registrationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected driver_mobile_registrationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn mobile_noColumn {
                get {
                    return this.columnmobile_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn imei_noColumn {
                get {
                    return this.columnimei_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn vehicle_idColumn {
                get {
                    return this.columnvehicle_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn driver_app_idColumn {
                get {
                    return this.columndriver_app_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn send_timeColumn {
                get {
                    return this.columnsend_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn addeddateColumn {
                get {
                    return this.columnaddeddate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn updateddateColumn {
                get {
                    return this.columnupdateddate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn deletedColumn {
                get {
                    return this.columndeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn deleteddateColumn {
                get {
                    return this.columndeleteddate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn syncColumn {
                get {
                    return this.columnsync;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn syncdateColumn {
                get {
                    return this.columnsyncdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn taxi_type_idColumn {
                get {
                    return this.columntaxi_type_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn status_idColumn {
                get {
                    return this.columnstatus_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pulseColumn {
                get {
                    return this.columnpulse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxiTypeColumn {
                get {
                    return this.columnTaxiType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BluetoothSerialColumn {
                get {
                    return this.columnBluetoothSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn vcodeColumn {
                get {
                    return this.columnvcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn vnameColumn {
                get {
                    return this.columnvname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_mobile_registrationRow this[int index] {
                get {
                    return ((driver_mobile_registrationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event driver_mobile_registrationRowChangeEventHandler driver_mobile_registrationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event driver_mobile_registrationRowChangeEventHandler driver_mobile_registrationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event driver_mobile_registrationRowChangeEventHandler driver_mobile_registrationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event driver_mobile_registrationRowChangeEventHandler driver_mobile_registrationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Adddriver_mobile_registrationRow(driver_mobile_registrationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_mobile_registrationRow Adddriver_mobile_registrationRow(
                        string mobile_no, 
                        string imei_no, 
                        string vehicle_id, 
                        string driver_app_id, 
                        System.DateTime send_time, 
                        System.DateTime addeddate, 
                        System.DateTime updateddate, 
                        int deleted, 
                        System.DateTime deleteddate, 
                        int sync, 
                        System.DateTime syncdate, 
                        int taxi_type_id, 
                        int status_id, 
                        int pulse, 
                        string TaxiType, 
                        string BluetoothSerial, 
                        int vcode, 
                        string vname) {
                driver_mobile_registrationRow rowdriver_mobile_registrationRow = ((driver_mobile_registrationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        mobile_no,
                        imei_no,
                        vehicle_id,
                        driver_app_id,
                        send_time,
                        addeddate,
                        updateddate,
                        deleted,
                        deleteddate,
                        sync,
                        syncdate,
                        taxi_type_id,
                        status_id,
                        pulse,
                        TaxiType,
                        BluetoothSerial,
                        vcode,
                        vname};
                rowdriver_mobile_registrationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdriver_mobile_registrationRow);
                return rowdriver_mobile_registrationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_mobile_registrationRow FindByid(int id) {
                return ((driver_mobile_registrationRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                driver_mobile_registrationDataTable cln = ((driver_mobile_registrationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new driver_mobile_registrationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnmobile_no = base.Columns["mobile_no"];
                this.columnimei_no = base.Columns["imei_no"];
                this.columnvehicle_id = base.Columns["vehicle_id"];
                this.columndriver_app_id = base.Columns["driver_app_id"];
                this.columnsend_time = base.Columns["send_time"];
                this.columnaddeddate = base.Columns["addeddate"];
                this.columnupdateddate = base.Columns["updateddate"];
                this.columndeleted = base.Columns["deleted"];
                this.columndeleteddate = base.Columns["deleteddate"];
                this.columnsync = base.Columns["sync"];
                this.columnsyncdate = base.Columns["syncdate"];
                this.columntaxi_type_id = base.Columns["taxi_type_id"];
                this.columnstatus_id = base.Columns["status_id"];
                this.columnpulse = base.Columns["pulse"];
                this.columnTaxiType = base.Columns["TaxiType"];
                this.columnBluetoothSerial = base.Columns["BluetoothSerial"];
                this.columnvcode = base.Columns["vcode"];
                this.columnvname = base.Columns["vname"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnmobile_no = new global::System.Data.DataColumn("mobile_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmobile_no);
                this.columnimei_no = new global::System.Data.DataColumn("imei_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimei_no);
                this.columnvehicle_id = new global::System.Data.DataColumn("vehicle_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehicle_id);
                this.columndriver_app_id = new global::System.Data.DataColumn("driver_app_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriver_app_id);
                this.columnsend_time = new global::System.Data.DataColumn("send_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsend_time);
                this.columnaddeddate = new global::System.Data.DataColumn("addeddate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddeddate);
                this.columnupdateddate = new global::System.Data.DataColumn("updateddate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdateddate);
                this.columndeleted = new global::System.Data.DataColumn("deleted", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeleted);
                this.columndeleteddate = new global::System.Data.DataColumn("deleteddate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeleteddate);
                this.columnsync = new global::System.Data.DataColumn("sync", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsync);
                this.columnsyncdate = new global::System.Data.DataColumn("syncdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsyncdate);
                this.columntaxi_type_id = new global::System.Data.DataColumn("taxi_type_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxi_type_id);
                this.columnstatus_id = new global::System.Data.DataColumn("status_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus_id);
                this.columnpulse = new global::System.Data.DataColumn("pulse", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpulse);
                this.columnTaxiType = new global::System.Data.DataColumn("TaxiType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxiType);
                this.columnBluetoothSerial = new global::System.Data.DataColumn("BluetoothSerial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBluetoothSerial);
                this.columnvcode = new global::System.Data.DataColumn("vcode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvcode);
                this.columnvname = new global::System.Data.DataColumn("vname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvname);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnmobile_no.AllowDBNull = false;
                this.columnmobile_no.MaxLength = 20;
                this.columnimei_no.AllowDBNull = false;
                this.columnimei_no.MaxLength = 20;
                this.columnvehicle_id.AllowDBNull = false;
                this.columnvehicle_id.MaxLength = 5;
                this.columndriver_app_id.AllowDBNull = false;
                this.columndriver_app_id.MaxLength = 500;
                this.columnsend_time.AllowDBNull = false;
                this.columnaddeddate.AllowDBNull = false;
                this.columntaxi_type_id.AllowDBNull = false;
                this.columnstatus_id.AllowDBNull = false;
                this.columnpulse.AllowDBNull = false;
                this.columnTaxiType.AllowDBNull = false;
                this.columnTaxiType.MaxLength = 1;
                this.columnBluetoothSerial.AllowDBNull = false;
                this.columnBluetoothSerial.MaxLength = 20;
                this.columnvcode.AllowDBNull = false;
                this.columnvname.AllowDBNull = false;
                this.columnvname.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_mobile_registrationRow Newdriver_mobile_registrationRow() {
                return ((driver_mobile_registrationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new driver_mobile_registrationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(driver_mobile_registrationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.driver_mobile_registrationRowChanged != null)) {
                    this.driver_mobile_registrationRowChanged(this, new driver_mobile_registrationRowChangeEvent(((driver_mobile_registrationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.driver_mobile_registrationRowChanging != null)) {
                    this.driver_mobile_registrationRowChanging(this, new driver_mobile_registrationRowChangeEvent(((driver_mobile_registrationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.driver_mobile_registrationRowDeleted != null)) {
                    this.driver_mobile_registrationRowDeleted(this, new driver_mobile_registrationRowChangeEvent(((driver_mobile_registrationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.driver_mobile_registrationRowDeleting != null)) {
                    this.driver_mobile_registrationRowDeleting(this, new driver_mobile_registrationRowChangeEvent(((driver_mobile_registrationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removedriver_mobile_registrationRow(driver_mobile_registrationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "driver_mobile_registrationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class driver_status_identifierDataTable : global::System.Data.TypedTableBase<driver_status_identifierRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columntracker_name;
            
            private global::System.Data.DataColumn columndriver_id;
            
            private global::System.Data.DataColumn columnvehicle_id;
            
            private global::System.Data.DataColumn columndriver_app_id;
            
            private global::System.Data.DataColumn columnm_1_send;
            
            private global::System.Data.DataColumn columnm_1_send_time;
            
            private global::System.Data.DataColumn columnm_1_send_time_geo;
            
            private global::System.Data.DataColumn columnm_1_respond;
            
            private global::System.Data.DataColumn columnm_1_respond_time;
            
            private global::System.Data.DataColumn columnm_1_respond_time_geo;
            
            private global::System.Data.DataColumn columnm_1_respond_send_time;
            
            private global::System.Data.DataColumn columnfree_to_distance;
            
            private global::System.Data.DataColumn columnaddeddate;
            
            private global::System.Data.DataColumn columnupdateddate;
            
            private global::System.Data.DataColumn columndeleted;
            
            private global::System.Data.DataColumn columndeleteddate;
            
            private global::System.Data.DataColumn columnsync;
            
            private global::System.Data.DataColumn columnsyncdate;
            
            private global::System.Data.DataColumn columnstatus_id;
            
            private global::System.Data.DataColumn columnCurrentJobID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_status_identifierDataTable() {
                this.TableName = "driver_status_identifier";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal driver_status_identifierDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected driver_status_identifierDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn tracker_nameColumn {
                get {
                    return this.columntracker_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn driver_idColumn {
                get {
                    return this.columndriver_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn vehicle_idColumn {
                get {
                    return this.columnvehicle_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn driver_app_idColumn {
                get {
                    return this.columndriver_app_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn m_1_sendColumn {
                get {
                    return this.columnm_1_send;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn m_1_send_timeColumn {
                get {
                    return this.columnm_1_send_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn m_1_send_time_geoColumn {
                get {
                    return this.columnm_1_send_time_geo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn m_1_respondColumn {
                get {
                    return this.columnm_1_respond;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn m_1_respond_timeColumn {
                get {
                    return this.columnm_1_respond_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn m_1_respond_time_geoColumn {
                get {
                    return this.columnm_1_respond_time_geo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn m_1_respond_send_timeColumn {
                get {
                    return this.columnm_1_respond_send_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn free_to_distanceColumn {
                get {
                    return this.columnfree_to_distance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn addeddateColumn {
                get {
                    return this.columnaddeddate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn updateddateColumn {
                get {
                    return this.columnupdateddate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn deletedColumn {
                get {
                    return this.columndeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn deleteddateColumn {
                get {
                    return this.columndeleteddate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn syncColumn {
                get {
                    return this.columnsync;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn syncdateColumn {
                get {
                    return this.columnsyncdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn status_idColumn {
                get {
                    return this.columnstatus_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentJobIDColumn {
                get {
                    return this.columnCurrentJobID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_status_identifierRow this[int index] {
                get {
                    return ((driver_status_identifierRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event driver_status_identifierRowChangeEventHandler driver_status_identifierRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event driver_status_identifierRowChangeEventHandler driver_status_identifierRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event driver_status_identifierRowChangeEventHandler driver_status_identifierRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event driver_status_identifierRowChangeEventHandler driver_status_identifierRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Adddriver_status_identifierRow(driver_status_identifierRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_status_identifierRow Adddriver_status_identifierRow(
                        string tracker_name, 
                        string driver_id, 
                        string vehicle_id, 
                        string driver_app_id, 
                        int m_1_send, 
                        System.DateTime m_1_send_time, 
                        string m_1_send_time_geo, 
                        int m_1_respond, 
                        System.DateTime m_1_respond_time, 
                        string m_1_respond_time_geo, 
                        System.DateTime m_1_respond_send_time, 
                        double free_to_distance, 
                        System.DateTime addeddate, 
                        System.DateTime updateddate, 
                        int deleted, 
                        System.DateTime deleteddate, 
                        int sync, 
                        System.DateTime syncdate, 
                        int status_id, 
                        long CurrentJobID) {
                driver_status_identifierRow rowdriver_status_identifierRow = ((driver_status_identifierRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        tracker_name,
                        driver_id,
                        vehicle_id,
                        driver_app_id,
                        m_1_send,
                        m_1_send_time,
                        m_1_send_time_geo,
                        m_1_respond,
                        m_1_respond_time,
                        m_1_respond_time_geo,
                        m_1_respond_send_time,
                        free_to_distance,
                        addeddate,
                        updateddate,
                        deleted,
                        deleteddate,
                        sync,
                        syncdate,
                        status_id,
                        CurrentJobID};
                rowdriver_status_identifierRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdriver_status_identifierRow);
                return rowdriver_status_identifierRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_status_identifierRow FindByid(int id) {
                return ((driver_status_identifierRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                driver_status_identifierDataTable cln = ((driver_status_identifierDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new driver_status_identifierDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columntracker_name = base.Columns["tracker_name"];
                this.columndriver_id = base.Columns["driver_id"];
                this.columnvehicle_id = base.Columns["vehicle_id"];
                this.columndriver_app_id = base.Columns["driver_app_id"];
                this.columnm_1_send = base.Columns["m_1_send"];
                this.columnm_1_send_time = base.Columns["m_1_send_time"];
                this.columnm_1_send_time_geo = base.Columns["m_1_send_time_geo"];
                this.columnm_1_respond = base.Columns["m_1_respond"];
                this.columnm_1_respond_time = base.Columns["m_1_respond_time"];
                this.columnm_1_respond_time_geo = base.Columns["m_1_respond_time_geo"];
                this.columnm_1_respond_send_time = base.Columns["m_1_respond_send_time"];
                this.columnfree_to_distance = base.Columns["free_to_distance"];
                this.columnaddeddate = base.Columns["addeddate"];
                this.columnupdateddate = base.Columns["updateddate"];
                this.columndeleted = base.Columns["deleted"];
                this.columndeleteddate = base.Columns["deleteddate"];
                this.columnsync = base.Columns["sync"];
                this.columnsyncdate = base.Columns["syncdate"];
                this.columnstatus_id = base.Columns["status_id"];
                this.columnCurrentJobID = base.Columns["CurrentJobID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columntracker_name = new global::System.Data.DataColumn("tracker_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntracker_name);
                this.columndriver_id = new global::System.Data.DataColumn("driver_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriver_id);
                this.columnvehicle_id = new global::System.Data.DataColumn("vehicle_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehicle_id);
                this.columndriver_app_id = new global::System.Data.DataColumn("driver_app_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriver_app_id);
                this.columnm_1_send = new global::System.Data.DataColumn("m_1_send", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnm_1_send);
                this.columnm_1_send_time = new global::System.Data.DataColumn("m_1_send_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnm_1_send_time);
                this.columnm_1_send_time_geo = new global::System.Data.DataColumn("m_1_send_time_geo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnm_1_send_time_geo);
                this.columnm_1_respond = new global::System.Data.DataColumn("m_1_respond", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnm_1_respond);
                this.columnm_1_respond_time = new global::System.Data.DataColumn("m_1_respond_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnm_1_respond_time);
                this.columnm_1_respond_time_geo = new global::System.Data.DataColumn("m_1_respond_time_geo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnm_1_respond_time_geo);
                this.columnm_1_respond_send_time = new global::System.Data.DataColumn("m_1_respond_send_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnm_1_respond_send_time);
                this.columnfree_to_distance = new global::System.Data.DataColumn("free_to_distance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfree_to_distance);
                this.columnaddeddate = new global::System.Data.DataColumn("addeddate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddeddate);
                this.columnupdateddate = new global::System.Data.DataColumn("updateddate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdateddate);
                this.columndeleted = new global::System.Data.DataColumn("deleted", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeleted);
                this.columndeleteddate = new global::System.Data.DataColumn("deleteddate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeleteddate);
                this.columnsync = new global::System.Data.DataColumn("sync", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsync);
                this.columnsyncdate = new global::System.Data.DataColumn("syncdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsyncdate);
                this.columnstatus_id = new global::System.Data.DataColumn("status_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus_id);
                this.columnCurrentJobID = new global::System.Data.DataColumn("CurrentJobID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentJobID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columntracker_name.MaxLength = 50;
                this.columndriver_id.MaxLength = 10;
                this.columnvehicle_id.MaxLength = 20;
                this.columndriver_app_id.MaxLength = 500;
                this.columnm_1_send_time_geo.MaxLength = 50;
                this.columnm_1_respond_time_geo.MaxLength = 50;
                this.columnCurrentJobID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_status_identifierRow Newdriver_status_identifierRow() {
                return ((driver_status_identifierRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new driver_status_identifierRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(driver_status_identifierRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.driver_status_identifierRowChanged != null)) {
                    this.driver_status_identifierRowChanged(this, new driver_status_identifierRowChangeEvent(((driver_status_identifierRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.driver_status_identifierRowChanging != null)) {
                    this.driver_status_identifierRowChanging(this, new driver_status_identifierRowChangeEvent(((driver_status_identifierRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.driver_status_identifierRowDeleted != null)) {
                    this.driver_status_identifierRowDeleted(this, new driver_status_identifierRowChangeEvent(((driver_status_identifierRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.driver_status_identifierRowDeleting != null)) {
                    this.driver_status_identifierRowDeleting(this, new driver_status_identifierRowChangeEvent(((driver_status_identifierRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removedriver_status_identifierRow(driver_status_identifierRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "driver_status_identifierDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DriverStatusDataTable : global::System.Data.TypedTableBase<DriverStatusRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DriverStatusDataTable() {
                this.TableName = "DriverStatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DriverStatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DriverStatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DriverStatusRow this[int index] {
                get {
                    return ((DriverStatusRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DriverStatusRowChangeEventHandler DriverStatusRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DriverStatusRowChangeEventHandler DriverStatusRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DriverStatusRowChangeEventHandler DriverStatusRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DriverStatusRowChangeEventHandler DriverStatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDriverStatusRow(DriverStatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DriverStatusRow AddDriverStatusRow(int ID, string Description) {
                DriverStatusRow rowDriverStatusRow = ((DriverStatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        Description};
                rowDriverStatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDriverStatusRow);
                return rowDriverStatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DriverStatusRow FindByID(int ID) {
                return ((DriverStatusRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DriverStatusDataTable cln = ((DriverStatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DriverStatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DriverStatusRow NewDriverStatusRow() {
                return ((DriverStatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DriverStatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DriverStatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DriverStatusRowChanged != null)) {
                    this.DriverStatusRowChanged(this, new DriverStatusRowChangeEvent(((DriverStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DriverStatusRowChanging != null)) {
                    this.DriverStatusRowChanging(this, new DriverStatusRowChangeEvent(((DriverStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DriverStatusRowDeleted != null)) {
                    this.DriverStatusRowDeleted(this, new DriverStatusRowChangeEvent(((DriverStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DriverStatusRowDeleting != null)) {
                    this.DriverStatusRowDeleting(this, new DriverStatusRowChangeEvent(((DriverStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDriverStatusRow(DriverStatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DriverStatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EMAILDataTable : global::System.Data.TypedTableBase<EMAILRow> {
            
            private global::System.Data.DataColumn columnAutoID;
            
            private global::System.Data.DataColumn columnclientmobile;
            
            private global::System.Data.DataColumn columnbookingid;
            
            private global::System.Data.DataColumn columnRecordInsertTime;
            
            private global::System.Data.DataColumn columnsendtime;
            
            private global::System.Data.DataColumn columnsendflag;
            
            private global::System.Data.DataColumn columnrespond;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMAILDataTable() {
                this.TableName = "EMAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EMAILDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EMAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoIDColumn {
                get {
                    return this.columnAutoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn clientmobileColumn {
                get {
                    return this.columnclientmobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bookingidColumn {
                get {
                    return this.columnbookingid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordInsertTimeColumn {
                get {
                    return this.columnRecordInsertTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sendtimeColumn {
                get {
                    return this.columnsendtime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sendflagColumn {
                get {
                    return this.columnsendflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn respondColumn {
                get {
                    return this.columnrespond;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMAILRow this[int index] {
                get {
                    return ((EMAILRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EMAILRowChangeEventHandler EMAILRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EMAILRowChangeEventHandler EMAILRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EMAILRowChangeEventHandler EMAILRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EMAILRowChangeEventHandler EMAILRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEMAILRow(EMAILRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMAILRow AddEMAILRow(string clientmobile, long bookingid, System.DateTime RecordInsertTime, System.DateTime sendtime, string sendflag, string respond) {
                EMAILRow rowEMAILRow = ((EMAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        clientmobile,
                        bookingid,
                        RecordInsertTime,
                        sendtime,
                        sendflag,
                        respond};
                rowEMAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEMAILRow);
                return rowEMAILRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMAILRow FindByAutoID(int AutoID) {
                return ((EMAILRow)(this.Rows.Find(new object[] {
                            AutoID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EMAILDataTable cln = ((EMAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EMAILDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAutoID = base.Columns["AutoID"];
                this.columnclientmobile = base.Columns["clientmobile"];
                this.columnbookingid = base.Columns["bookingid"];
                this.columnRecordInsertTime = base.Columns["RecordInsertTime"];
                this.columnsendtime = base.Columns["sendtime"];
                this.columnsendflag = base.Columns["sendflag"];
                this.columnrespond = base.Columns["respond"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAutoID = new global::System.Data.DataColumn("AutoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoID);
                this.columnclientmobile = new global::System.Data.DataColumn("clientmobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclientmobile);
                this.columnbookingid = new global::System.Data.DataColumn("bookingid", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbookingid);
                this.columnRecordInsertTime = new global::System.Data.DataColumn("RecordInsertTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordInsertTime);
                this.columnsendtime = new global::System.Data.DataColumn("sendtime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsendtime);
                this.columnsendflag = new global::System.Data.DataColumn("sendflag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsendflag);
                this.columnrespond = new global::System.Data.DataColumn("respond", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrespond);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAutoID}, true));
                this.columnAutoID.AutoIncrement = true;
                this.columnAutoID.AutoIncrementSeed = -1;
                this.columnAutoID.AutoIncrementStep = -1;
                this.columnAutoID.AllowDBNull = false;
                this.columnAutoID.Unique = true;
                this.columnclientmobile.AllowDBNull = false;
                this.columnclientmobile.MaxLength = 10;
                this.columnbookingid.AllowDBNull = false;
                this.columnRecordInsertTime.AllowDBNull = false;
                this.columnsendtime.AllowDBNull = false;
                this.columnsendflag.AllowDBNull = false;
                this.columnsendflag.MaxLength = 1;
                this.columnrespond.AllowDBNull = false;
                this.columnrespond.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMAILRow NewEMAILRow() {
                return ((EMAILRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EMAILRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EMAILRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EMAILRowChanged != null)) {
                    this.EMAILRowChanged(this, new EMAILRowChangeEvent(((EMAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EMAILRowChanging != null)) {
                    this.EMAILRowChanging(this, new EMAILRowChangeEvent(((EMAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EMAILRowDeleted != null)) {
                    this.EMAILRowDeleted(this, new EMAILRowChangeEvent(((EMAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EMAILRowDeleting != null)) {
                    this.EMAILRowDeleting(this, new EMAILRowChangeEvent(((EMAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEMAILRow(EMAILRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EMAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class fleet_monitorDataTable : global::System.Data.TypedTableBase<fleet_monitorRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnimei;
            
            private global::System.Data.DataColumn columndriver_id;
            
            private global::System.Data.DataColumn columntaxi_id;
            
            private global::System.Data.DataColumn columnbooking_id;
            
            private global::System.Data.DataColumn columndriver_status_id;
            
            private global::System.Data.DataColumn columntaxi_moving_status_id;
            
            private global::System.Data.DataColumn columnbooking_status_id;
            
            private global::System.Data.DataColumn columnmobile_battery;
            
            private global::System.Data.DataColumn columntaxi_meter_status_id;
            
            private global::System.Data.DataColumn columntime_waiting;
            
            private global::System.Data.DataColumn columnincome;
            
            private global::System.Data.DataColumn columnupdated_time;
            
            private global::System.Data.DataColumn columnlast_location;
            
            private global::System.Data.DataColumn columnFreeTime;
            
            private global::System.Data.DataColumn columnLastLogin;
            
            private global::System.Data.DataColumn columnLastGPSUpdate;
            
            private global::System.Data.DataColumn columnVSpeed;
            
            private global::System.Data.DataColumn columnnLAT;
            
            private global::System.Data.DataColumn columnnLON;
            
            private global::System.Data.DataColumn columnNonAcceptTime;
            
            private global::System.Data.DataColumn columnNonAcceptCount;
            
            private global::System.Data.DataColumn columnTaxiType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fleet_monitorDataTable() {
                this.TableName = "fleet_monitor";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fleet_monitorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected fleet_monitorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn imeiColumn {
                get {
                    return this.columnimei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn driver_idColumn {
                get {
                    return this.columndriver_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn taxi_idColumn {
                get {
                    return this.columntaxi_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn booking_idColumn {
                get {
                    return this.columnbooking_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn driver_status_idColumn {
                get {
                    return this.columndriver_status_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn taxi_moving_status_idColumn {
                get {
                    return this.columntaxi_moving_status_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn booking_status_idColumn {
                get {
                    return this.columnbooking_status_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn mobile_batteryColumn {
                get {
                    return this.columnmobile_battery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn taxi_meter_status_idColumn {
                get {
                    return this.columntaxi_meter_status_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn time_waitingColumn {
                get {
                    return this.columntime_waiting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn incomeColumn {
                get {
                    return this.columnincome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn updated_timeColumn {
                get {
                    return this.columnupdated_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn last_locationColumn {
                get {
                    return this.columnlast_location;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeTimeColumn {
                get {
                    return this.columnFreeTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastLoginColumn {
                get {
                    return this.columnLastLogin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastGPSUpdateColumn {
                get {
                    return this.columnLastGPSUpdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VSpeedColumn {
                get {
                    return this.columnVSpeed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nLATColumn {
                get {
                    return this.columnnLAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nLONColumn {
                get {
                    return this.columnnLON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NonAcceptTimeColumn {
                get {
                    return this.columnNonAcceptTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NonAcceptCountColumn {
                get {
                    return this.columnNonAcceptCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxiTypeColumn {
                get {
                    return this.columnTaxiType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fleet_monitorRow this[int index] {
                get {
                    return ((fleet_monitorRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event fleet_monitorRowChangeEventHandler fleet_monitorRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event fleet_monitorRowChangeEventHandler fleet_monitorRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event fleet_monitorRowChangeEventHandler fleet_monitorRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event fleet_monitorRowChangeEventHandler fleet_monitorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addfleet_monitorRow(fleet_monitorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fleet_monitorRow Addfleet_monitorRow(
                        string imei, 
                        string driver_id, 
                        string taxi_id, 
                        long booking_id, 
                        int driver_status_id, 
                        int taxi_moving_status_id, 
                        int booking_status_id, 
                        double mobile_battery, 
                        int taxi_meter_status_id, 
                        double time_waiting, 
                        double income, 
                        System.DateTime updated_time, 
                        string last_location, 
                        System.DateTime FreeTime, 
                        System.DateTime LastLogin, 
                        System.DateTime LastGPSUpdate, 
                        double VSpeed, 
                        double nLAT, 
                        double nLON, 
                        System.DateTime NonAcceptTime, 
                        int NonAcceptCount, 
                        string TaxiType) {
                fleet_monitorRow rowfleet_monitorRow = ((fleet_monitorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        imei,
                        driver_id,
                        taxi_id,
                        booking_id,
                        driver_status_id,
                        taxi_moving_status_id,
                        booking_status_id,
                        mobile_battery,
                        taxi_meter_status_id,
                        time_waiting,
                        income,
                        updated_time,
                        last_location,
                        FreeTime,
                        LastLogin,
                        LastGPSUpdate,
                        VSpeed,
                        nLAT,
                        nLON,
                        NonAcceptTime,
                        NonAcceptCount,
                        TaxiType};
                rowfleet_monitorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfleet_monitorRow);
                return rowfleet_monitorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fleet_monitorRow FindByid(int id) {
                return ((fleet_monitorRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                fleet_monitorDataTable cln = ((fleet_monitorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new fleet_monitorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnimei = base.Columns["imei"];
                this.columndriver_id = base.Columns["driver_id"];
                this.columntaxi_id = base.Columns["taxi_id"];
                this.columnbooking_id = base.Columns["booking_id"];
                this.columndriver_status_id = base.Columns["driver_status_id"];
                this.columntaxi_moving_status_id = base.Columns["taxi_moving_status_id"];
                this.columnbooking_status_id = base.Columns["booking_status_id"];
                this.columnmobile_battery = base.Columns["mobile_battery"];
                this.columntaxi_meter_status_id = base.Columns["taxi_meter_status_id"];
                this.columntime_waiting = base.Columns["time_waiting"];
                this.columnincome = base.Columns["income"];
                this.columnupdated_time = base.Columns["updated_time"];
                this.columnlast_location = base.Columns["last_location"];
                this.columnFreeTime = base.Columns["FreeTime"];
                this.columnLastLogin = base.Columns["LastLogin"];
                this.columnLastGPSUpdate = base.Columns["LastGPSUpdate"];
                this.columnVSpeed = base.Columns["VSpeed"];
                this.columnnLAT = base.Columns["nLAT"];
                this.columnnLON = base.Columns["nLON"];
                this.columnNonAcceptTime = base.Columns["NonAcceptTime"];
                this.columnNonAcceptCount = base.Columns["NonAcceptCount"];
                this.columnTaxiType = base.Columns["TaxiType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnimei = new global::System.Data.DataColumn("imei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimei);
                this.columndriver_id = new global::System.Data.DataColumn("driver_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriver_id);
                this.columntaxi_id = new global::System.Data.DataColumn("taxi_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxi_id);
                this.columnbooking_id = new global::System.Data.DataColumn("booking_id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbooking_id);
                this.columndriver_status_id = new global::System.Data.DataColumn("driver_status_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriver_status_id);
                this.columntaxi_moving_status_id = new global::System.Data.DataColumn("taxi_moving_status_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxi_moving_status_id);
                this.columnbooking_status_id = new global::System.Data.DataColumn("booking_status_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbooking_status_id);
                this.columnmobile_battery = new global::System.Data.DataColumn("mobile_battery", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmobile_battery);
                this.columntaxi_meter_status_id = new global::System.Data.DataColumn("taxi_meter_status_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntaxi_meter_status_id);
                this.columntime_waiting = new global::System.Data.DataColumn("time_waiting", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntime_waiting);
                this.columnincome = new global::System.Data.DataColumn("income", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnincome);
                this.columnupdated_time = new global::System.Data.DataColumn("updated_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdated_time);
                this.columnlast_location = new global::System.Data.DataColumn("last_location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlast_location);
                this.columnFreeTime = new global::System.Data.DataColumn("FreeTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeTime);
                this.columnLastLogin = new global::System.Data.DataColumn("LastLogin", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastLogin);
                this.columnLastGPSUpdate = new global::System.Data.DataColumn("LastGPSUpdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastGPSUpdate);
                this.columnVSpeed = new global::System.Data.DataColumn("VSpeed", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVSpeed);
                this.columnnLAT = new global::System.Data.DataColumn("nLAT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnLAT);
                this.columnnLON = new global::System.Data.DataColumn("nLON", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnLON);
                this.columnNonAcceptTime = new global::System.Data.DataColumn("NonAcceptTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonAcceptTime);
                this.columnNonAcceptCount = new global::System.Data.DataColumn("NonAcceptCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonAcceptCount);
                this.columnTaxiType = new global::System.Data.DataColumn("TaxiType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxiType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnimei}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columntaxi_id}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint3", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnimei.AllowDBNull = false;
                this.columnimei.Unique = true;
                this.columnimei.MaxLength = 20;
                this.columndriver_id.AllowDBNull = false;
                this.columndriver_id.MaxLength = 5;
                this.columntaxi_id.AllowDBNull = false;
                this.columntaxi_id.Unique = true;
                this.columntaxi_id.MaxLength = 5;
                this.columnbooking_id.AllowDBNull = false;
                this.columndriver_status_id.AllowDBNull = false;
                this.columntaxi_moving_status_id.AllowDBNull = false;
                this.columnbooking_status_id.AllowDBNull = false;
                this.columnmobile_battery.AllowDBNull = false;
                this.columntaxi_meter_status_id.AllowDBNull = false;
                this.columntime_waiting.AllowDBNull = false;
                this.columnincome.AllowDBNull = false;
                this.columnupdated_time.AllowDBNull = false;
                this.columnlast_location.MaxLength = 100;
                this.columnFreeTime.AllowDBNull = false;
                this.columnLastLogin.AllowDBNull = false;
                this.columnLastGPSUpdate.AllowDBNull = false;
                this.columnVSpeed.AllowDBNull = false;
                this.columnnLAT.AllowDBNull = false;
                this.columnnLON.AllowDBNull = false;
                this.columnNonAcceptTime.AllowDBNull = false;
                this.columnNonAcceptCount.AllowDBNull = false;
                this.columnTaxiType.AllowDBNull = false;
                this.columnTaxiType.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fleet_monitorRow Newfleet_monitorRow() {
                return ((fleet_monitorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new fleet_monitorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(fleet_monitorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.fleet_monitorRowChanged != null)) {
                    this.fleet_monitorRowChanged(this, new fleet_monitorRowChangeEvent(((fleet_monitorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.fleet_monitorRowChanging != null)) {
                    this.fleet_monitorRowChanging(this, new fleet_monitorRowChangeEvent(((fleet_monitorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.fleet_monitorRowDeleted != null)) {
                    this.fleet_monitorRowDeleted(this, new fleet_monitorRowChangeEvent(((fleet_monitorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.fleet_monitorRowDeleting != null)) {
                    this.fleet_monitorRowDeleting(this, new fleet_monitorRowChangeEvent(((fleet_monitorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removefleet_monitorRow(fleet_monitorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "fleet_monitorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GpsFailDataTable : global::System.Data.TypedTableBase<GpsFailRow> {
            
            private global::System.Data.DataColumn columnAutoID;
            
            private global::System.Data.DataColumn columnCabNo;
            
            private global::System.Data.DataColumn columnFailTime;
            
            private global::System.Data.DataColumn columnEvent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GpsFailDataTable() {
                this.TableName = "GpsFail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GpsFailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GpsFailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoIDColumn {
                get {
                    return this.columnAutoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CabNoColumn {
                get {
                    return this.columnCabNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FailTimeColumn {
                get {
                    return this.columnFailTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EventColumn {
                get {
                    return this.columnEvent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GpsFailRow this[int index] {
                get {
                    return ((GpsFailRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GpsFailRowChangeEventHandler GpsFailRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GpsFailRowChangeEventHandler GpsFailRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GpsFailRowChangeEventHandler GpsFailRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GpsFailRowChangeEventHandler GpsFailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGpsFailRow(GpsFailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GpsFailRow AddGpsFailRow(string CabNo, System.DateTime FailTime, string Event) {
                GpsFailRow rowGpsFailRow = ((GpsFailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CabNo,
                        FailTime,
                        Event};
                rowGpsFailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGpsFailRow);
                return rowGpsFailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GpsFailRow FindByAutoID(int AutoID) {
                return ((GpsFailRow)(this.Rows.Find(new object[] {
                            AutoID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GpsFailDataTable cln = ((GpsFailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GpsFailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAutoID = base.Columns["AutoID"];
                this.columnCabNo = base.Columns["CabNo"];
                this.columnFailTime = base.Columns["FailTime"];
                this.columnEvent = base.Columns["Event"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAutoID = new global::System.Data.DataColumn("AutoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoID);
                this.columnCabNo = new global::System.Data.DataColumn("CabNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabNo);
                this.columnFailTime = new global::System.Data.DataColumn("FailTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFailTime);
                this.columnEvent = new global::System.Data.DataColumn("Event", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvent);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAutoID}, true));
                this.columnAutoID.AutoIncrement = true;
                this.columnAutoID.AutoIncrementSeed = -1;
                this.columnAutoID.AutoIncrementStep = -1;
                this.columnAutoID.AllowDBNull = false;
                this.columnAutoID.Unique = true;
                this.columnCabNo.AllowDBNull = false;
                this.columnCabNo.MaxLength = 5;
                this.columnFailTime.AllowDBNull = false;
                this.columnEvent.AllowDBNull = false;
                this.columnEvent.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GpsFailRow NewGpsFailRow() {
                return ((GpsFailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GpsFailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GpsFailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GpsFailRowChanged != null)) {
                    this.GpsFailRowChanged(this, new GpsFailRowChangeEvent(((GpsFailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GpsFailRowChanging != null)) {
                    this.GpsFailRowChanging(this, new GpsFailRowChangeEvent(((GpsFailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GpsFailRowDeleted != null)) {
                    this.GpsFailRowDeleted(this, new GpsFailRowChangeEvent(((GpsFailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GpsFailRowDeleting != null)) {
                    this.GpsFailRowDeleting(this, new GpsFailRowChangeEvent(((GpsFailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGpsFailRow(GpsFailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GpsFailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GPSMStatDataTable : global::System.Data.TypedTableBase<GPSMStatRow> {
            
            private global::System.Data.DataColumn columnS1Value;
            
            private global::System.Data.DataColumn columnS1Correction;
            
            private global::System.Data.DataColumn columnS2Value;
            
            private global::System.Data.DataColumn columnS2Correction;
            
            private global::System.Data.DataColumn columnD1Value;
            
            private global::System.Data.DataColumn columnD1Correction;
            
            private global::System.Data.DataColumn columnD2Value;
            
            private global::System.Data.DataColumn columnD2Correction;
            
            private global::System.Data.DataColumn columnD3Value;
            
            private global::System.Data.DataColumn columnD3Correction;
            
            private global::System.Data.DataColumn columnD0Value;
            
            private global::System.Data.DataColumn columnD0Correction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GPSMStatDataTable() {
                this.TableName = "GPSMStat";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GPSMStatDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GPSMStatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1ValueColumn {
                get {
                    return this.columnS1Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1CorrectionColumn {
                get {
                    return this.columnS1Correction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S2ValueColumn {
                get {
                    return this.columnS2Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S2CorrectionColumn {
                get {
                    return this.columnS2Correction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn D1ValueColumn {
                get {
                    return this.columnD1Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn D1CorrectionColumn {
                get {
                    return this.columnD1Correction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn D2ValueColumn {
                get {
                    return this.columnD2Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn D2CorrectionColumn {
                get {
                    return this.columnD2Correction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn D3ValueColumn {
                get {
                    return this.columnD3Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn D3CorrectionColumn {
                get {
                    return this.columnD3Correction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn D0ValueColumn {
                get {
                    return this.columnD0Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn D0CorrectionColumn {
                get {
                    return this.columnD0Correction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GPSMStatRow this[int index] {
                get {
                    return ((GPSMStatRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GPSMStatRowChangeEventHandler GPSMStatRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GPSMStatRowChangeEventHandler GPSMStatRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GPSMStatRowChangeEventHandler GPSMStatRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GPSMStatRowChangeEventHandler GPSMStatRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGPSMStatRow(GPSMStatRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GPSMStatRow AddGPSMStatRow(int S1Value, double S1Correction, int S2Value, double S2Correction, int D1Value, double D1Correction, int D2Value, double D2Correction, int D3Value, double D3Correction, int D0Value, double D0Correction) {
                GPSMStatRow rowGPSMStatRow = ((GPSMStatRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        S1Value,
                        S1Correction,
                        S2Value,
                        S2Correction,
                        D1Value,
                        D1Correction,
                        D2Value,
                        D2Correction,
                        D3Value,
                        D3Correction,
                        D0Value,
                        D0Correction};
                rowGPSMStatRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGPSMStatRow);
                return rowGPSMStatRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GPSMStatDataTable cln = ((GPSMStatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GPSMStatDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnS1Value = base.Columns["S1Value"];
                this.columnS1Correction = base.Columns["S1Correction"];
                this.columnS2Value = base.Columns["S2Value"];
                this.columnS2Correction = base.Columns["S2Correction"];
                this.columnD1Value = base.Columns["D1Value"];
                this.columnD1Correction = base.Columns["D1Correction"];
                this.columnD2Value = base.Columns["D2Value"];
                this.columnD2Correction = base.Columns["D2Correction"];
                this.columnD3Value = base.Columns["D3Value"];
                this.columnD3Correction = base.Columns["D3Correction"];
                this.columnD0Value = base.Columns["D0Value"];
                this.columnD0Correction = base.Columns["D0Correction"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnS1Value = new global::System.Data.DataColumn("S1Value", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1Value);
                this.columnS1Correction = new global::System.Data.DataColumn("S1Correction", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1Correction);
                this.columnS2Value = new global::System.Data.DataColumn("S2Value", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS2Value);
                this.columnS2Correction = new global::System.Data.DataColumn("S2Correction", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS2Correction);
                this.columnD1Value = new global::System.Data.DataColumn("D1Value", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD1Value);
                this.columnD1Correction = new global::System.Data.DataColumn("D1Correction", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD1Correction);
                this.columnD2Value = new global::System.Data.DataColumn("D2Value", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD2Value);
                this.columnD2Correction = new global::System.Data.DataColumn("D2Correction", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD2Correction);
                this.columnD3Value = new global::System.Data.DataColumn("D3Value", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD3Value);
                this.columnD3Correction = new global::System.Data.DataColumn("D3Correction", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD3Correction);
                this.columnD0Value = new global::System.Data.DataColumn("D0Value", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD0Value);
                this.columnD0Correction = new global::System.Data.DataColumn("D0Correction", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD0Correction);
                this.columnS1Value.AllowDBNull = false;
                this.columnS1Correction.AllowDBNull = false;
                this.columnS2Value.AllowDBNull = false;
                this.columnS2Correction.AllowDBNull = false;
                this.columnD1Value.AllowDBNull = false;
                this.columnD1Correction.AllowDBNull = false;
                this.columnD2Value.AllowDBNull = false;
                this.columnD2Correction.AllowDBNull = false;
                this.columnD3Value.AllowDBNull = false;
                this.columnD3Correction.AllowDBNull = false;
                this.columnD0Value.AllowDBNull = false;
                this.columnD0Correction.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GPSMStatRow NewGPSMStatRow() {
                return ((GPSMStatRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GPSMStatRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GPSMStatRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GPSMStatRowChanged != null)) {
                    this.GPSMStatRowChanged(this, new GPSMStatRowChangeEvent(((GPSMStatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GPSMStatRowChanging != null)) {
                    this.GPSMStatRowChanging(this, new GPSMStatRowChangeEvent(((GPSMStatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GPSMStatRowDeleted != null)) {
                    this.GPSMStatRowDeleted(this, new GPSMStatRowChangeEvent(((GPSMStatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GPSMStatRowDeleting != null)) {
                    this.GPSMStatRowDeleting(this, new GPSMStatRowChangeEvent(((GPSMStatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGPSMStatRow(GPSMStatRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GPSMStatDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class log_dataDataTable : global::System.Data.TypedTableBase<log_dataRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnservice_name;
            
            private global::System.Data.DataColumn columnlog;
            
            private global::System.Data.DataColumn columnaddeddate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public log_dataDataTable() {
                this.TableName = "log_data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal log_dataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected log_dataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn service_nameColumn {
                get {
                    return this.columnservice_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn logColumn {
                get {
                    return this.columnlog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn addeddateColumn {
                get {
                    return this.columnaddeddate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public log_dataRow this[int index] {
                get {
                    return ((log_dataRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event log_dataRowChangeEventHandler log_dataRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event log_dataRowChangeEventHandler log_dataRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event log_dataRowChangeEventHandler log_dataRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event log_dataRowChangeEventHandler log_dataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addlog_dataRow(log_dataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public log_dataRow Addlog_dataRow(string service_name, string log, System.DateTime addeddate) {
                log_dataRow rowlog_dataRow = ((log_dataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        service_name,
                        log,
                        addeddate};
                rowlog_dataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlog_dataRow);
                return rowlog_dataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public log_dataRow FindByid(int id) {
                return ((log_dataRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                log_dataDataTable cln = ((log_dataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new log_dataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnservice_name = base.Columns["service_name"];
                this.columnlog = base.Columns["log"];
                this.columnaddeddate = base.Columns["addeddate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnservice_name = new global::System.Data.DataColumn("service_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnservice_name);
                this.columnlog = new global::System.Data.DataColumn("log", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlog);
                this.columnaddeddate = new global::System.Data.DataColumn("addeddate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddeddate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnservice_name.AllowDBNull = false;
                this.columnservice_name.MaxLength = 100;
                this.columnlog.AllowDBNull = false;
                this.columnlog.MaxLength = 16777215;
                this.columnaddeddate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public log_dataRow Newlog_dataRow() {
                return ((log_dataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new log_dataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(log_dataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.log_dataRowChanged != null)) {
                    this.log_dataRowChanged(this, new log_dataRowChangeEvent(((log_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.log_dataRowChanging != null)) {
                    this.log_dataRowChanging(this, new log_dataRowChangeEvent(((log_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.log_dataRowDeleted != null)) {
                    this.log_dataRowDeleted(this, new log_dataRowChangeEvent(((log_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.log_dataRowDeleting != null)) {
                    this.log_dataRowDeleting(this, new log_dataRowChangeEvent(((log_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removelog_dataRow(log_dataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "log_dataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LogOffDataTable : global::System.Data.TypedTableBase<LogOffRow> {
            
            private global::System.Data.DataColumn columnCabNo;
            
            private global::System.Data.DataColumn columnAcDateTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogOffDataTable() {
                this.TableName = "LogOff";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LogOffDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LogOffDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CabNoColumn {
                get {
                    return this.columnCabNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AcDateTimeColumn {
                get {
                    return this.columnAcDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogOffRow this[int index] {
                get {
                    return ((LogOffRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogOffRowChangeEventHandler LogOffRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogOffRowChangeEventHandler LogOffRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogOffRowChangeEventHandler LogOffRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogOffRowChangeEventHandler LogOffRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLogOffRow(LogOffRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogOffRow AddLogOffRow(string CabNo, System.DateTime AcDateTime) {
                LogOffRow rowLogOffRow = ((LogOffRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CabNo,
                        AcDateTime};
                rowLogOffRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLogOffRow);
                return rowLogOffRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogOffRow FindByCabNo(string CabNo) {
                return ((LogOffRow)(this.Rows.Find(new object[] {
                            CabNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LogOffDataTable cln = ((LogOffDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LogOffDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCabNo = base.Columns["CabNo"];
                this.columnAcDateTime = base.Columns["AcDateTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCabNo = new global::System.Data.DataColumn("CabNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabNo);
                this.columnAcDateTime = new global::System.Data.DataColumn("AcDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcDateTime);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCabNo}, true));
                this.columnCabNo.AllowDBNull = false;
                this.columnCabNo.Unique = true;
                this.columnCabNo.MaxLength = 5;
                this.columnAcDateTime.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogOffRow NewLogOffRow() {
                return ((LogOffRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LogOffRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LogOffRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LogOffRowChanged != null)) {
                    this.LogOffRowChanged(this, new LogOffRowChangeEvent(((LogOffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LogOffRowChanging != null)) {
                    this.LogOffRowChanging(this, new LogOffRowChangeEvent(((LogOffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LogOffRowDeleted != null)) {
                    this.LogOffRowDeleted(this, new LogOffRowChangeEvent(((LogOffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LogOffRowDeleting != null)) {
                    this.LogOffRowDeleting(this, new LogOffRowChangeEvent(((LogOffRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLogOffRow(LogOffRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LogOffDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LogSheetDataTable : global::System.Data.TypedTableBase<LogSheetRow> {
            
            private global::System.Data.DataColumn columnAutoNo;
            
            private global::System.Data.DataColumn columnVehiclID;
            
            private global::System.Data.DataColumn columnDriverID;
            
            private global::System.Data.DataColumn columnBookingID;
            
            private global::System.Data.DataColumn columnMeterONTime;
            
            private global::System.Data.DataColumn columnMeterOnLocationLAT;
            
            private global::System.Data.DataColumn columnMeterOnLoationLON;
            
            private global::System.Data.DataColumn columnMeterOFFTime;
            
            private global::System.Data.DataColumn columnMeterOFFLocationLAT;
            
            private global::System.Data.DataColumn columnMeterOFFLocationLON;
            
            private global::System.Data.DataColumn columnRunningKM;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnWaitingTime;
            
            private global::System.Data.DataColumn columnWaitingCost;
            
            private global::System.Data.DataColumn columnPaymentType;
            
            private global::System.Data.DataColumn columnPaymentRecive;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnVoucherNo;
            
            private global::System.Data.DataColumn columnMType;
            
            private global::System.Data.DataColumn columnDiscountAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogSheetDataTable() {
                this.TableName = "LogSheet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LogSheetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LogSheetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoNoColumn {
                get {
                    return this.columnAutoNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VehiclIDColumn {
                get {
                    return this.columnVehiclID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DriverIDColumn {
                get {
                    return this.columnDriverID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingIDColumn {
                get {
                    return this.columnBookingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterONTimeColumn {
                get {
                    return this.columnMeterONTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOnLocationLATColumn {
                get {
                    return this.columnMeterOnLocationLAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOnLoationLONColumn {
                get {
                    return this.columnMeterOnLoationLON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOFFTimeColumn {
                get {
                    return this.columnMeterOFFTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOFFLocationLATColumn {
                get {
                    return this.columnMeterOFFLocationLAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOFFLocationLONColumn {
                get {
                    return this.columnMeterOFFLocationLON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RunningKMColumn {
                get {
                    return this.columnRunningKM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingTimeColumn {
                get {
                    return this.columnWaitingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingCostColumn {
                get {
                    return this.columnWaitingCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentTypeColumn {
                get {
                    return this.columnPaymentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentReciveColumn {
                get {
                    return this.columnPaymentRecive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoucherNoColumn {
                get {
                    return this.columnVoucherNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MTypeColumn {
                get {
                    return this.columnMType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiscountAmountColumn {
                get {
                    return this.columnDiscountAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogSheetRow this[int index] {
                get {
                    return ((LogSheetRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogSheetRowChangeEventHandler LogSheetRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogSheetRowChangeEventHandler LogSheetRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogSheetRowChangeEventHandler LogSheetRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogSheetRowChangeEventHandler LogSheetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLogSheetRow(LogSheetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogSheetRow AddLogSheetRow(
                        string VehiclID, 
                        string DriverID, 
                        long BookingID, 
                        System.DateTime MeterONTime, 
                        double MeterOnLocationLAT, 
                        double MeterOnLoationLON, 
                        System.DateTime MeterOFFTime, 
                        double MeterOFFLocationLAT, 
                        double MeterOFFLocationLON, 
                        double RunningKM, 
                        double Amount, 
                        float WaitingTime, 
                        float WaitingCost, 
                        string PaymentType, 
                        string PaymentRecive, 
                        double TotalAmount, 
                        string VoucherNo, 
                        string MType, 
                        double DiscountAmount) {
                LogSheetRow rowLogSheetRow = ((LogSheetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        VehiclID,
                        DriverID,
                        BookingID,
                        MeterONTime,
                        MeterOnLocationLAT,
                        MeterOnLoationLON,
                        MeterOFFTime,
                        MeterOFFLocationLAT,
                        MeterOFFLocationLON,
                        RunningKM,
                        Amount,
                        WaitingTime,
                        WaitingCost,
                        PaymentType,
                        PaymentRecive,
                        TotalAmount,
                        VoucherNo,
                        MType,
                        DiscountAmount};
                rowLogSheetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLogSheetRow);
                return rowLogSheetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogSheetRow FindByAutoNoVehiclIDDriverID(long AutoNo, string VehiclID, string DriverID) {
                return ((LogSheetRow)(this.Rows.Find(new object[] {
                            AutoNo,
                            VehiclID,
                            DriverID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LogSheetDataTable cln = ((LogSheetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LogSheetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAutoNo = base.Columns["AutoNo"];
                this.columnVehiclID = base.Columns["VehiclID"];
                this.columnDriverID = base.Columns["DriverID"];
                this.columnBookingID = base.Columns["BookingID"];
                this.columnMeterONTime = base.Columns["MeterONTime"];
                this.columnMeterOnLocationLAT = base.Columns["MeterOnLocationLAT"];
                this.columnMeterOnLoationLON = base.Columns["MeterOnLoationLON"];
                this.columnMeterOFFTime = base.Columns["MeterOFFTime"];
                this.columnMeterOFFLocationLAT = base.Columns["MeterOFFLocationLAT"];
                this.columnMeterOFFLocationLON = base.Columns["MeterOFFLocationLON"];
                this.columnRunningKM = base.Columns["RunningKM"];
                this.columnAmount = base.Columns["Amount"];
                this.columnWaitingTime = base.Columns["WaitingTime"];
                this.columnWaitingCost = base.Columns["WaitingCost"];
                this.columnPaymentType = base.Columns["PaymentType"];
                this.columnPaymentRecive = base.Columns["PaymentRecive"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnVoucherNo = base.Columns["VoucherNo"];
                this.columnMType = base.Columns["MType"];
                this.columnDiscountAmount = base.Columns["DiscountAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAutoNo = new global::System.Data.DataColumn("AutoNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoNo);
                this.columnVehiclID = new global::System.Data.DataColumn("VehiclID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehiclID);
                this.columnDriverID = new global::System.Data.DataColumn("DriverID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverID);
                this.columnBookingID = new global::System.Data.DataColumn("BookingID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingID);
                this.columnMeterONTime = new global::System.Data.DataColumn("MeterONTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterONTime);
                this.columnMeterOnLocationLAT = new global::System.Data.DataColumn("MeterOnLocationLAT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOnLocationLAT);
                this.columnMeterOnLoationLON = new global::System.Data.DataColumn("MeterOnLoationLON", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOnLoationLON);
                this.columnMeterOFFTime = new global::System.Data.DataColumn("MeterOFFTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOFFTime);
                this.columnMeterOFFLocationLAT = new global::System.Data.DataColumn("MeterOFFLocationLAT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOFFLocationLAT);
                this.columnMeterOFFLocationLON = new global::System.Data.DataColumn("MeterOFFLocationLON", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOFFLocationLON);
                this.columnRunningKM = new global::System.Data.DataColumn("RunningKM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunningKM);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnWaitingTime = new global::System.Data.DataColumn("WaitingTime", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingTime);
                this.columnWaitingCost = new global::System.Data.DataColumn("WaitingCost", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingCost);
                this.columnPaymentType = new global::System.Data.DataColumn("PaymentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentType);
                this.columnPaymentRecive = new global::System.Data.DataColumn("PaymentRecive", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentRecive);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnVoucherNo = new global::System.Data.DataColumn("VoucherNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherNo);
                this.columnMType = new global::System.Data.DataColumn("MType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMType);
                this.columnDiscountAmount = new global::System.Data.DataColumn("DiscountAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountAmount);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAutoNo,
                                this.columnVehiclID,
                                this.columnDriverID}, true));
                this.columnAutoNo.AutoIncrement = true;
                this.columnAutoNo.AutoIncrementSeed = -1;
                this.columnAutoNo.AutoIncrementStep = -1;
                this.columnAutoNo.AllowDBNull = false;
                this.columnVehiclID.AllowDBNull = false;
                this.columnVehiclID.MaxLength = 5;
                this.columnDriverID.AllowDBNull = false;
                this.columnDriverID.MaxLength = 5;
                this.columnBookingID.AllowDBNull = false;
                this.columnMeterONTime.AllowDBNull = false;
                this.columnMeterOnLocationLAT.AllowDBNull = false;
                this.columnMeterOnLoationLON.AllowDBNull = false;
                this.columnMeterOFFTime.AllowDBNull = false;
                this.columnMeterOFFLocationLAT.AllowDBNull = false;
                this.columnMeterOFFLocationLON.AllowDBNull = false;
                this.columnRunningKM.AllowDBNull = false;
                this.columnAmount.AllowDBNull = false;
                this.columnWaitingTime.AllowDBNull = false;
                this.columnWaitingCost.AllowDBNull = false;
                this.columnPaymentType.AllowDBNull = false;
                this.columnPaymentType.MaxLength = 2;
                this.columnPaymentRecive.AllowDBNull = false;
                this.columnPaymentRecive.MaxLength = 1;
                this.columnTotalAmount.AllowDBNull = false;
                this.columnVoucherNo.AllowDBNull = false;
                this.columnVoucherNo.MaxLength = 20;
                this.columnMType.AllowDBNull = false;
                this.columnMType.MaxLength = 3;
                this.columnDiscountAmount.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogSheetRow NewLogSheetRow() {
                return ((LogSheetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LogSheetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LogSheetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LogSheetRowChanged != null)) {
                    this.LogSheetRowChanged(this, new LogSheetRowChangeEvent(((LogSheetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LogSheetRowChanging != null)) {
                    this.LogSheetRowChanging(this, new LogSheetRowChangeEvent(((LogSheetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LogSheetRowDeleted != null)) {
                    this.LogSheetRowDeleted(this, new LogSheetRowChangeEvent(((LogSheetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LogSheetRowDeleting != null)) {
                    this.LogSheetRowDeleting(this, new LogSheetRowChangeEvent(((LogSheetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLogSheetRow(LogSheetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LogSheetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NonAcceptBookingDataTable : global::System.Data.TypedTableBase<NonAcceptBookingRow> {
            
            private global::System.Data.DataColumn columnAutoID;
            
            private global::System.Data.DataColumn columnBookingID;
            
            private global::System.Data.DataColumn columnBookingStatus;
            
            private global::System.Data.DataColumn columnRefNo;
            
            private global::System.Data.DataColumn columnImiNo;
            
            private global::System.Data.DataColumn columnCabNo;
            
            private global::System.Data.DataColumn columnClientMobile;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnClientAddress;
            
            private global::System.Data.DataColumn columnLandMark;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnRQTime;
            
            private global::System.Data.DataColumn columnLAT;
            
            private global::System.Data.DataColumn columnLON;
            
            private global::System.Data.DataColumn columnAcceptTime;
            
            private global::System.Data.DataColumn columnAtThePlaceTime;
            
            private global::System.Data.DataColumn columnMeterOnTime;
            
            private global::System.Data.DataColumn columnMeterOffTime;
            
            private global::System.Data.DataColumn columnMeterOffLAT;
            
            private global::System.Data.DataColumn columnMeterOffLON;
            
            private global::System.Data.DataColumn columnMeterOffAddress;
            
            private global::System.Data.DataColumn columnRunningKM;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnInitialKm;
            
            private global::System.Data.DataColumn columnPerKMCharge;
            
            private global::System.Data.DataColumn columnFlag;
            
            private global::System.Data.DataColumn columnWaitingPerMinute;
            
            private global::System.Data.DataColumn columnFixAmount;
            
            private global::System.Data.DataColumn columnRecordInsertTime;
            
            private global::System.Data.DataColumn columnGCMFlag;
            
            private global::System.Data.DataColumn columnkangarooupdate;
            
            private global::System.Data.DataColumn columnWaitingTime;
            
            private global::System.Data.DataColumn columnWaitingCost;
            
            private global::System.Data.DataColumn columnRating;
            
            private global::System.Data.DataColumn columnDNo;
            
            private global::System.Data.DataColumn columnDRating;
            
            private global::System.Data.DataColumn columnCabType;
            
            private global::System.Data.DataColumn columnFreeWaiting;
            
            private global::System.Data.DataColumn columnBookingType;
            
            private global::System.Data.DataColumn columnPCode;
            
            private global::System.Data.DataColumn columnPaymentType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonAcceptBookingDataTable() {
                this.TableName = "NonAcceptBooking";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NonAcceptBookingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected NonAcceptBookingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoIDColumn {
                get {
                    return this.columnAutoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingIDColumn {
                get {
                    return this.columnBookingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingStatusColumn {
                get {
                    return this.columnBookingStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefNoColumn {
                get {
                    return this.columnRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImiNoColumn {
                get {
                    return this.columnImiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CabNoColumn {
                get {
                    return this.columnCabNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientMobileColumn {
                get {
                    return this.columnClientMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientAddressColumn {
                get {
                    return this.columnClientAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LandMarkColumn {
                get {
                    return this.columnLandMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RQTimeColumn {
                get {
                    return this.columnRQTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LATColumn {
                get {
                    return this.columnLAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LONColumn {
                get {
                    return this.columnLON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AcceptTimeColumn {
                get {
                    return this.columnAcceptTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AtThePlaceTimeColumn {
                get {
                    return this.columnAtThePlaceTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOnTimeColumn {
                get {
                    return this.columnMeterOnTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffTimeColumn {
                get {
                    return this.columnMeterOffTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffLATColumn {
                get {
                    return this.columnMeterOffLAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffLONColumn {
                get {
                    return this.columnMeterOffLON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffAddressColumn {
                get {
                    return this.columnMeterOffAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RunningKMColumn {
                get {
                    return this.columnRunningKM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InitialKmColumn {
                get {
                    return this.columnInitialKm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerKMChargeColumn {
                get {
                    return this.columnPerKMCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FlagColumn {
                get {
                    return this.columnFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingPerMinuteColumn {
                get {
                    return this.columnWaitingPerMinute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FixAmountColumn {
                get {
                    return this.columnFixAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordInsertTimeColumn {
                get {
                    return this.columnRecordInsertTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GCMFlagColumn {
                get {
                    return this.columnGCMFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kangarooupdateColumn {
                get {
                    return this.columnkangarooupdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingTimeColumn {
                get {
                    return this.columnWaitingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingCostColumn {
                get {
                    return this.columnWaitingCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RatingColumn {
                get {
                    return this.columnRating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DNoColumn {
                get {
                    return this.columnDNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DRatingColumn {
                get {
                    return this.columnDRating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CabTypeColumn {
                get {
                    return this.columnCabType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeWaitingColumn {
                get {
                    return this.columnFreeWaiting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingTypeColumn {
                get {
                    return this.columnBookingType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCodeColumn {
                get {
                    return this.columnPCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentTypeColumn {
                get {
                    return this.columnPaymentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonAcceptBookingRow this[int index] {
                get {
                    return ((NonAcceptBookingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NonAcceptBookingRowChangeEventHandler NonAcceptBookingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NonAcceptBookingRowChangeEventHandler NonAcceptBookingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NonAcceptBookingRowChangeEventHandler NonAcceptBookingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NonAcceptBookingRowChangeEventHandler NonAcceptBookingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddNonAcceptBookingRow(NonAcceptBookingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonAcceptBookingRow AddNonAcceptBookingRow(
                        long BookingID, 
                        string BookingStatus, 
                        string RefNo, 
                        string ImiNo, 
                        string CabNo, 
                        string ClientMobile, 
                        string ClientName, 
                        string ClientAddress, 
                        string LandMark, 
                        string Remark, 
                        string RQTime, 
                        double LAT, 
                        double LON, 
                        System.DateTime AcceptTime, 
                        System.DateTime AtThePlaceTime, 
                        System.DateTime MeterOnTime, 
                        System.DateTime MeterOffTime, 
                        float MeterOffLAT, 
                        float MeterOffLON, 
                        string MeterOffAddress, 
                        double RunningKM, 
                        double Amount, 
                        double InitialKm, 
                        double PerKMCharge, 
                        string Flag, 
                        float WaitingPerMinute, 
                        float FixAmount, 
                        System.DateTime RecordInsertTime, 
                        bool GCMFlag, 
                        int kangarooupdate, 
                        float WaitingTime, 
                        float WaitingCost, 
                        int Rating, 
                        string DNo, 
                        double DRating, 
                        string CabType, 
                        int FreeWaiting, 
                        string BookingType, 
                        string PCode, 
                        string PaymentType) {
                NonAcceptBookingRow rowNonAcceptBookingRow = ((NonAcceptBookingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BookingID,
                        BookingStatus,
                        RefNo,
                        ImiNo,
                        CabNo,
                        ClientMobile,
                        ClientName,
                        ClientAddress,
                        LandMark,
                        Remark,
                        RQTime,
                        LAT,
                        LON,
                        AcceptTime,
                        AtThePlaceTime,
                        MeterOnTime,
                        MeterOffTime,
                        MeterOffLAT,
                        MeterOffLON,
                        MeterOffAddress,
                        RunningKM,
                        Amount,
                        InitialKm,
                        PerKMCharge,
                        Flag,
                        WaitingPerMinute,
                        FixAmount,
                        RecordInsertTime,
                        GCMFlag,
                        kangarooupdate,
                        WaitingTime,
                        WaitingCost,
                        Rating,
                        DNo,
                        DRating,
                        CabType,
                        FreeWaiting,
                        BookingType,
                        PCode,
                        PaymentType};
                rowNonAcceptBookingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNonAcceptBookingRow);
                return rowNonAcceptBookingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                NonAcceptBookingDataTable cln = ((NonAcceptBookingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NonAcceptBookingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAutoID = base.Columns["AutoID"];
                this.columnBookingID = base.Columns["BookingID"];
                this.columnBookingStatus = base.Columns["BookingStatus"];
                this.columnRefNo = base.Columns["RefNo"];
                this.columnImiNo = base.Columns["ImiNo"];
                this.columnCabNo = base.Columns["CabNo"];
                this.columnClientMobile = base.Columns["ClientMobile"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnClientAddress = base.Columns["ClientAddress"];
                this.columnLandMark = base.Columns["LandMark"];
                this.columnRemark = base.Columns["Remark"];
                this.columnRQTime = base.Columns["RQTime"];
                this.columnLAT = base.Columns["LAT"];
                this.columnLON = base.Columns["LON"];
                this.columnAcceptTime = base.Columns["AcceptTime"];
                this.columnAtThePlaceTime = base.Columns["AtThePlaceTime"];
                this.columnMeterOnTime = base.Columns["MeterOnTime"];
                this.columnMeterOffTime = base.Columns["MeterOffTime"];
                this.columnMeterOffLAT = base.Columns["MeterOffLAT"];
                this.columnMeterOffLON = base.Columns["MeterOffLON"];
                this.columnMeterOffAddress = base.Columns["MeterOffAddress"];
                this.columnRunningKM = base.Columns["RunningKM"];
                this.columnAmount = base.Columns["Amount"];
                this.columnInitialKm = base.Columns["InitialKm"];
                this.columnPerKMCharge = base.Columns["PerKMCharge"];
                this.columnFlag = base.Columns["Flag"];
                this.columnWaitingPerMinute = base.Columns["WaitingPerMinute"];
                this.columnFixAmount = base.Columns["FixAmount"];
                this.columnRecordInsertTime = base.Columns["RecordInsertTime"];
                this.columnGCMFlag = base.Columns["GCMFlag"];
                this.columnkangarooupdate = base.Columns["kangarooupdate"];
                this.columnWaitingTime = base.Columns["WaitingTime"];
                this.columnWaitingCost = base.Columns["WaitingCost"];
                this.columnRating = base.Columns["Rating"];
                this.columnDNo = base.Columns["DNo"];
                this.columnDRating = base.Columns["DRating"];
                this.columnCabType = base.Columns["CabType"];
                this.columnFreeWaiting = base.Columns["FreeWaiting"];
                this.columnBookingType = base.Columns["BookingType"];
                this.columnPCode = base.Columns["PCode"];
                this.columnPaymentType = base.Columns["PaymentType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAutoID = new global::System.Data.DataColumn("AutoID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoID);
                this.columnBookingID = new global::System.Data.DataColumn("BookingID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingID);
                this.columnBookingStatus = new global::System.Data.DataColumn("BookingStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingStatus);
                this.columnRefNo = new global::System.Data.DataColumn("RefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefNo);
                this.columnImiNo = new global::System.Data.DataColumn("ImiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImiNo);
                this.columnCabNo = new global::System.Data.DataColumn("CabNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabNo);
                this.columnClientMobile = new global::System.Data.DataColumn("ClientMobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientMobile);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnClientAddress = new global::System.Data.DataColumn("ClientAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientAddress);
                this.columnLandMark = new global::System.Data.DataColumn("LandMark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandMark);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnRQTime = new global::System.Data.DataColumn("RQTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRQTime);
                this.columnLAT = new global::System.Data.DataColumn("LAT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT);
                this.columnLON = new global::System.Data.DataColumn("LON", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLON);
                this.columnAcceptTime = new global::System.Data.DataColumn("AcceptTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptTime);
                this.columnAtThePlaceTime = new global::System.Data.DataColumn("AtThePlaceTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAtThePlaceTime);
                this.columnMeterOnTime = new global::System.Data.DataColumn("MeterOnTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOnTime);
                this.columnMeterOffTime = new global::System.Data.DataColumn("MeterOffTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffTime);
                this.columnMeterOffLAT = new global::System.Data.DataColumn("MeterOffLAT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffLAT);
                this.columnMeterOffLON = new global::System.Data.DataColumn("MeterOffLON", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffLON);
                this.columnMeterOffAddress = new global::System.Data.DataColumn("MeterOffAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffAddress);
                this.columnRunningKM = new global::System.Data.DataColumn("RunningKM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunningKM);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnInitialKm = new global::System.Data.DataColumn("InitialKm", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialKm);
                this.columnPerKMCharge = new global::System.Data.DataColumn("PerKMCharge", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerKMCharge);
                this.columnFlag = new global::System.Data.DataColumn("Flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag);
                this.columnWaitingPerMinute = new global::System.Data.DataColumn("WaitingPerMinute", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingPerMinute);
                this.columnFixAmount = new global::System.Data.DataColumn("FixAmount", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixAmount);
                this.columnRecordInsertTime = new global::System.Data.DataColumn("RecordInsertTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordInsertTime);
                this.columnGCMFlag = new global::System.Data.DataColumn("GCMFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCMFlag);
                this.columnkangarooupdate = new global::System.Data.DataColumn("kangarooupdate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkangarooupdate);
                this.columnWaitingTime = new global::System.Data.DataColumn("WaitingTime", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingTime);
                this.columnWaitingCost = new global::System.Data.DataColumn("WaitingCost", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingCost);
                this.columnRating = new global::System.Data.DataColumn("Rating", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRating);
                this.columnDNo = new global::System.Data.DataColumn("DNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDNo);
                this.columnDRating = new global::System.Data.DataColumn("DRating", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRating);
                this.columnCabType = new global::System.Data.DataColumn("CabType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabType);
                this.columnFreeWaiting = new global::System.Data.DataColumn("FreeWaiting", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeWaiting);
                this.columnBookingType = new global::System.Data.DataColumn("BookingType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingType);
                this.columnPCode = new global::System.Data.DataColumn("PCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCode);
                this.columnPaymentType = new global::System.Data.DataColumn("PaymentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentType);
                this.columnAutoID.AutoIncrement = true;
                this.columnAutoID.AutoIncrementSeed = -1;
                this.columnAutoID.AutoIncrementStep = -1;
                this.columnAutoID.AllowDBNull = false;
                this.columnBookingID.AllowDBNull = false;
                this.columnBookingStatus.AllowDBNull = false;
                this.columnBookingStatus.MaxLength = 2;
                this.columnRefNo.AllowDBNull = false;
                this.columnRefNo.MaxLength = 6;
                this.columnImiNo.AllowDBNull = false;
                this.columnImiNo.MaxLength = 20;
                this.columnCabNo.AllowDBNull = false;
                this.columnCabNo.MaxLength = 5;
                this.columnClientMobile.AllowDBNull = false;
                this.columnClientMobile.MaxLength = 20;
                this.columnClientName.AllowDBNull = false;
                this.columnClientName.MaxLength = 100;
                this.columnClientAddress.AllowDBNull = false;
                this.columnClientAddress.MaxLength = 150;
                this.columnLandMark.AllowDBNull = false;
                this.columnLandMark.MaxLength = 100;
                this.columnRemark.AllowDBNull = false;
                this.columnRemark.MaxLength = 100;
                this.columnRQTime.AllowDBNull = false;
                this.columnRQTime.MaxLength = 5;
                this.columnLAT.AllowDBNull = false;
                this.columnLON.AllowDBNull = false;
                this.columnAcceptTime.AllowDBNull = false;
                this.columnAtThePlaceTime.AllowDBNull = false;
                this.columnMeterOnTime.AllowDBNull = false;
                this.columnMeterOffTime.AllowDBNull = false;
                this.columnMeterOffLAT.AllowDBNull = false;
                this.columnMeterOffLON.AllowDBNull = false;
                this.columnMeterOffAddress.AllowDBNull = false;
                this.columnMeterOffAddress.MaxLength = 150;
                this.columnRunningKM.AllowDBNull = false;
                this.columnAmount.AllowDBNull = false;
                this.columnInitialKm.AllowDBNull = false;
                this.columnPerKMCharge.AllowDBNull = false;
                this.columnFlag.AllowDBNull = false;
                this.columnFlag.MaxLength = 2;
                this.columnWaitingPerMinute.AllowDBNull = false;
                this.columnFixAmount.AllowDBNull = false;
                this.columnRecordInsertTime.AllowDBNull = false;
                this.columnGCMFlag.AllowDBNull = false;
                this.columnkangarooupdate.AllowDBNull = false;
                this.columnWaitingTime.AllowDBNull = false;
                this.columnWaitingCost.AllowDBNull = false;
                this.columnRating.AllowDBNull = false;
                this.columnDNo.AllowDBNull = false;
                this.columnDNo.MaxLength = 5;
                this.columnDRating.AllowDBNull = false;
                this.columnCabType.AllowDBNull = false;
                this.columnCabType.MaxLength = 1;
                this.columnFreeWaiting.AllowDBNull = false;
                this.columnBookingType.AllowDBNull = false;
                this.columnBookingType.MaxLength = 2;
                this.columnPCode.AllowDBNull = false;
                this.columnPCode.MaxLength = 20;
                this.columnPaymentType.AllowDBNull = false;
                this.columnPaymentType.MaxLength = 2;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonAcceptBookingRow NewNonAcceptBookingRow() {
                return ((NonAcceptBookingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NonAcceptBookingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(NonAcceptBookingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NonAcceptBookingRowChanged != null)) {
                    this.NonAcceptBookingRowChanged(this, new NonAcceptBookingRowChangeEvent(((NonAcceptBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NonAcceptBookingRowChanging != null)) {
                    this.NonAcceptBookingRowChanging(this, new NonAcceptBookingRowChangeEvent(((NonAcceptBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NonAcceptBookingRowDeleted != null)) {
                    this.NonAcceptBookingRowDeleted(this, new NonAcceptBookingRowChangeEvent(((NonAcceptBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NonAcceptBookingRowDeleting != null)) {
                    this.NonAcceptBookingRowDeleting(this, new NonAcceptBookingRowChangeEvent(((NonAcceptBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveNonAcceptBookingRow(NonAcceptBookingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NonAcceptBookingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NonAcceptDespatchBookingDataTable : global::System.Data.TypedTableBase<NonAcceptDespatchBookingRow> {
            
            private global::System.Data.DataColumn columnAutoID;
            
            private global::System.Data.DataColumn columnBookingID;
            
            private global::System.Data.DataColumn columnBookingStatus;
            
            private global::System.Data.DataColumn columnRefNo;
            
            private global::System.Data.DataColumn columnImiNo;
            
            private global::System.Data.DataColumn columnCabNo;
            
            private global::System.Data.DataColumn columnClientMobile;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnClientAddress;
            
            private global::System.Data.DataColumn columnLandMark;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnRQTime;
            
            private global::System.Data.DataColumn columnLAT;
            
            private global::System.Data.DataColumn columnLON;
            
            private global::System.Data.DataColumn columnAcceptTime;
            
            private global::System.Data.DataColumn columnAtThePlaceTime;
            
            private global::System.Data.DataColumn columnMeterOnTime;
            
            private global::System.Data.DataColumn columnMeterOffTime;
            
            private global::System.Data.DataColumn columnMeterOffLAT;
            
            private global::System.Data.DataColumn columnMeterOffLON;
            
            private global::System.Data.DataColumn columnMeterOffAddress;
            
            private global::System.Data.DataColumn columnRunningKM;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnInitialKm;
            
            private global::System.Data.DataColumn columnPerKMCharge;
            
            private global::System.Data.DataColumn columnFlag;
            
            private global::System.Data.DataColumn columnWaitingPerMinute;
            
            private global::System.Data.DataColumn columnFixAmount;
            
            private global::System.Data.DataColumn columnRecordInsertTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonAcceptDespatchBookingDataTable() {
                this.TableName = "NonAcceptDespatchBooking";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NonAcceptDespatchBookingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected NonAcceptDespatchBookingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoIDColumn {
                get {
                    return this.columnAutoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingIDColumn {
                get {
                    return this.columnBookingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingStatusColumn {
                get {
                    return this.columnBookingStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefNoColumn {
                get {
                    return this.columnRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImiNoColumn {
                get {
                    return this.columnImiNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CabNoColumn {
                get {
                    return this.columnCabNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientMobileColumn {
                get {
                    return this.columnClientMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientAddressColumn {
                get {
                    return this.columnClientAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LandMarkColumn {
                get {
                    return this.columnLandMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RQTimeColumn {
                get {
                    return this.columnRQTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LATColumn {
                get {
                    return this.columnLAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LONColumn {
                get {
                    return this.columnLON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AcceptTimeColumn {
                get {
                    return this.columnAcceptTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AtThePlaceTimeColumn {
                get {
                    return this.columnAtThePlaceTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOnTimeColumn {
                get {
                    return this.columnMeterOnTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffTimeColumn {
                get {
                    return this.columnMeterOffTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffLATColumn {
                get {
                    return this.columnMeterOffLAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffLONColumn {
                get {
                    return this.columnMeterOffLON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeterOffAddressColumn {
                get {
                    return this.columnMeterOffAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RunningKMColumn {
                get {
                    return this.columnRunningKM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InitialKmColumn {
                get {
                    return this.columnInitialKm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerKMChargeColumn {
                get {
                    return this.columnPerKMCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FlagColumn {
                get {
                    return this.columnFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingPerMinuteColumn {
                get {
                    return this.columnWaitingPerMinute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FixAmountColumn {
                get {
                    return this.columnFixAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordInsertTimeColumn {
                get {
                    return this.columnRecordInsertTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonAcceptDespatchBookingRow this[int index] {
                get {
                    return ((NonAcceptDespatchBookingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NonAcceptDespatchBookingRowChangeEventHandler NonAcceptDespatchBookingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NonAcceptDespatchBookingRowChangeEventHandler NonAcceptDespatchBookingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NonAcceptDespatchBookingRowChangeEventHandler NonAcceptDespatchBookingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NonAcceptDespatchBookingRowChangeEventHandler NonAcceptDespatchBookingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddNonAcceptDespatchBookingRow(NonAcceptDespatchBookingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonAcceptDespatchBookingRow AddNonAcceptDespatchBookingRow(
                        long BookingID, 
                        string BookingStatus, 
                        string RefNo, 
                        string ImiNo, 
                        string CabNo, 
                        string ClientMobile, 
                        string ClientName, 
                        string ClientAddress, 
                        string LandMark, 
                        string Remark, 
                        string RQTime, 
                        double LAT, 
                        double LON, 
                        System.DateTime AcceptTime, 
                        System.DateTime AtThePlaceTime, 
                        System.DateTime MeterOnTime, 
                        System.DateTime MeterOffTime, 
                        float MeterOffLAT, 
                        float MeterOffLON, 
                        string MeterOffAddress, 
                        double RunningKM, 
                        double Amount, 
                        double InitialKm, 
                        double PerKMCharge, 
                        string Flag, 
                        float WaitingPerMinute, 
                        float FixAmount, 
                        System.DateTime RecordInsertTime) {
                NonAcceptDespatchBookingRow rowNonAcceptDespatchBookingRow = ((NonAcceptDespatchBookingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BookingID,
                        BookingStatus,
                        RefNo,
                        ImiNo,
                        CabNo,
                        ClientMobile,
                        ClientName,
                        ClientAddress,
                        LandMark,
                        Remark,
                        RQTime,
                        LAT,
                        LON,
                        AcceptTime,
                        AtThePlaceTime,
                        MeterOnTime,
                        MeterOffTime,
                        MeterOffLAT,
                        MeterOffLON,
                        MeterOffAddress,
                        RunningKM,
                        Amount,
                        InitialKm,
                        PerKMCharge,
                        Flag,
                        WaitingPerMinute,
                        FixAmount,
                        RecordInsertTime};
                rowNonAcceptDespatchBookingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNonAcceptDespatchBookingRow);
                return rowNonAcceptDespatchBookingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonAcceptDespatchBookingRow FindByBookingID(long BookingID) {
                return ((NonAcceptDespatchBookingRow)(this.Rows.Find(new object[] {
                            BookingID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                NonAcceptDespatchBookingDataTable cln = ((NonAcceptDespatchBookingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NonAcceptDespatchBookingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAutoID = base.Columns["AutoID"];
                this.columnBookingID = base.Columns["BookingID"];
                this.columnBookingStatus = base.Columns["BookingStatus"];
                this.columnRefNo = base.Columns["RefNo"];
                this.columnImiNo = base.Columns["ImiNo"];
                this.columnCabNo = base.Columns["CabNo"];
                this.columnClientMobile = base.Columns["ClientMobile"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnClientAddress = base.Columns["ClientAddress"];
                this.columnLandMark = base.Columns["LandMark"];
                this.columnRemark = base.Columns["Remark"];
                this.columnRQTime = base.Columns["RQTime"];
                this.columnLAT = base.Columns["LAT"];
                this.columnLON = base.Columns["LON"];
                this.columnAcceptTime = base.Columns["AcceptTime"];
                this.columnAtThePlaceTime = base.Columns["AtThePlaceTime"];
                this.columnMeterOnTime = base.Columns["MeterOnTime"];
                this.columnMeterOffTime = base.Columns["MeterOffTime"];
                this.columnMeterOffLAT = base.Columns["MeterOffLAT"];
                this.columnMeterOffLON = base.Columns["MeterOffLON"];
                this.columnMeterOffAddress = base.Columns["MeterOffAddress"];
                this.columnRunningKM = base.Columns["RunningKM"];
                this.columnAmount = base.Columns["Amount"];
                this.columnInitialKm = base.Columns["InitialKm"];
                this.columnPerKMCharge = base.Columns["PerKMCharge"];
                this.columnFlag = base.Columns["Flag"];
                this.columnWaitingPerMinute = base.Columns["WaitingPerMinute"];
                this.columnFixAmount = base.Columns["FixAmount"];
                this.columnRecordInsertTime = base.Columns["RecordInsertTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAutoID = new global::System.Data.DataColumn("AutoID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoID);
                this.columnBookingID = new global::System.Data.DataColumn("BookingID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingID);
                this.columnBookingStatus = new global::System.Data.DataColumn("BookingStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingStatus);
                this.columnRefNo = new global::System.Data.DataColumn("RefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefNo);
                this.columnImiNo = new global::System.Data.DataColumn("ImiNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImiNo);
                this.columnCabNo = new global::System.Data.DataColumn("CabNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabNo);
                this.columnClientMobile = new global::System.Data.DataColumn("ClientMobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientMobile);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnClientAddress = new global::System.Data.DataColumn("ClientAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientAddress);
                this.columnLandMark = new global::System.Data.DataColumn("LandMark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandMark);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnRQTime = new global::System.Data.DataColumn("RQTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRQTime);
                this.columnLAT = new global::System.Data.DataColumn("LAT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT);
                this.columnLON = new global::System.Data.DataColumn("LON", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLON);
                this.columnAcceptTime = new global::System.Data.DataColumn("AcceptTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptTime);
                this.columnAtThePlaceTime = new global::System.Data.DataColumn("AtThePlaceTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAtThePlaceTime);
                this.columnMeterOnTime = new global::System.Data.DataColumn("MeterOnTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOnTime);
                this.columnMeterOffTime = new global::System.Data.DataColumn("MeterOffTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffTime);
                this.columnMeterOffLAT = new global::System.Data.DataColumn("MeterOffLAT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffLAT);
                this.columnMeterOffLON = new global::System.Data.DataColumn("MeterOffLON", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffLON);
                this.columnMeterOffAddress = new global::System.Data.DataColumn("MeterOffAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeterOffAddress);
                this.columnRunningKM = new global::System.Data.DataColumn("RunningKM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunningKM);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnInitialKm = new global::System.Data.DataColumn("InitialKm", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialKm);
                this.columnPerKMCharge = new global::System.Data.DataColumn("PerKMCharge", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerKMCharge);
                this.columnFlag = new global::System.Data.DataColumn("Flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag);
                this.columnWaitingPerMinute = new global::System.Data.DataColumn("WaitingPerMinute", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingPerMinute);
                this.columnFixAmount = new global::System.Data.DataColumn("FixAmount", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixAmount);
                this.columnRecordInsertTime = new global::System.Data.DataColumn("RecordInsertTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordInsertTime);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBookingID}, true));
                this.columnAutoID.AutoIncrement = true;
                this.columnAutoID.AutoIncrementSeed = -1;
                this.columnAutoID.AutoIncrementStep = -1;
                this.columnAutoID.AllowDBNull = false;
                this.columnBookingID.AllowDBNull = false;
                this.columnBookingID.Unique = true;
                this.columnBookingStatus.AllowDBNull = false;
                this.columnBookingStatus.MaxLength = 2;
                this.columnRefNo.AllowDBNull = false;
                this.columnRefNo.MaxLength = 6;
                this.columnImiNo.AllowDBNull = false;
                this.columnImiNo.MaxLength = 20;
                this.columnCabNo.AllowDBNull = false;
                this.columnCabNo.MaxLength = 5;
                this.columnClientMobile.AllowDBNull = false;
                this.columnClientMobile.MaxLength = 20;
                this.columnClientName.AllowDBNull = false;
                this.columnClientName.MaxLength = 100;
                this.columnClientAddress.AllowDBNull = false;
                this.columnClientAddress.MaxLength = 150;
                this.columnLandMark.AllowDBNull = false;
                this.columnLandMark.MaxLength = 100;
                this.columnRemark.AllowDBNull = false;
                this.columnRemark.MaxLength = 100;
                this.columnRQTime.AllowDBNull = false;
                this.columnRQTime.MaxLength = 5;
                this.columnLAT.AllowDBNull = false;
                this.columnLON.AllowDBNull = false;
                this.columnAcceptTime.AllowDBNull = false;
                this.columnAtThePlaceTime.AllowDBNull = false;
                this.columnMeterOnTime.AllowDBNull = false;
                this.columnMeterOffTime.AllowDBNull = false;
                this.columnMeterOffLAT.AllowDBNull = false;
                this.columnMeterOffLON.AllowDBNull = false;
                this.columnMeterOffAddress.AllowDBNull = false;
                this.columnMeterOffAddress.MaxLength = 150;
                this.columnRunningKM.AllowDBNull = false;
                this.columnAmount.AllowDBNull = false;
                this.columnInitialKm.AllowDBNull = false;
                this.columnPerKMCharge.AllowDBNull = false;
                this.columnFlag.AllowDBNull = false;
                this.columnFlag.MaxLength = 2;
                this.columnWaitingPerMinute.AllowDBNull = false;
                this.columnFixAmount.AllowDBNull = false;
                this.columnRecordInsertTime.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonAcceptDespatchBookingRow NewNonAcceptDespatchBookingRow() {
                return ((NonAcceptDespatchBookingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NonAcceptDespatchBookingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(NonAcceptDespatchBookingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NonAcceptDespatchBookingRowChanged != null)) {
                    this.NonAcceptDespatchBookingRowChanged(this, new NonAcceptDespatchBookingRowChangeEvent(((NonAcceptDespatchBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NonAcceptDespatchBookingRowChanging != null)) {
                    this.NonAcceptDespatchBookingRowChanging(this, new NonAcceptDespatchBookingRowChangeEvent(((NonAcceptDespatchBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NonAcceptDespatchBookingRowDeleted != null)) {
                    this.NonAcceptDespatchBookingRowDeleted(this, new NonAcceptDespatchBookingRowChangeEvent(((NonAcceptDespatchBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NonAcceptDespatchBookingRowDeleting != null)) {
                    this.NonAcceptDespatchBookingRowDeleting(this, new NonAcceptDespatchBookingRowChangeEvent(((NonAcceptDespatchBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveNonAcceptDespatchBookingRow(NonAcceptDespatchBookingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NonAcceptDespatchBookingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NonDespatchBookingsDataTable : global::System.Data.TypedTableBase<NonDespatchBookingsRow> {
            
            private global::System.Data.DataColumn columnAutoID;
            
            private global::System.Data.DataColumn columnBookingID;
            
            private global::System.Data.DataColumn columnRefNo;
            
            private global::System.Data.DataColumn columnClientMobile;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnClientAddress;
            
            private global::System.Data.DataColumn columnRQDateTime;
            
            private global::System.Data.DataColumn columnRQTime;
            
            private global::System.Data.DataColumn columnLAT;
            
            private global::System.Data.DataColumn columnLON;
            
            private global::System.Data.DataColumn columnFlag;
            
            private global::System.Data.DataColumn columnRecordInsertTime;
            
            private global::System.Data.DataColumn columnVType;
            
            private global::System.Data.DataColumn columndropLAT;
            
            private global::System.Data.DataColumn columndropLON;
            
            private global::System.Data.DataColumn columngpsLAT;
            
            private global::System.Data.DataColumn columngpsLON;
            
            private global::System.Data.DataColumn columnconsidered;
            
            private global::System.Data.DataColumn columnLandMark;
            
            private global::System.Data.DataColumn columnCabType;
            
            private global::System.Data.DataColumn columnBookingTimeCategory;
            
            private global::System.Data.DataColumn columnPCode;
            
            private global::System.Data.DataColumn columnPaymentType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonDespatchBookingsDataTable() {
                this.TableName = "NonDespatchBookings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NonDespatchBookingsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected NonDespatchBookingsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoIDColumn {
                get {
                    return this.columnAutoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingIDColumn {
                get {
                    return this.columnBookingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefNoColumn {
                get {
                    return this.columnRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientMobileColumn {
                get {
                    return this.columnClientMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientAddressColumn {
                get {
                    return this.columnClientAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RQDateTimeColumn {
                get {
                    return this.columnRQDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RQTimeColumn {
                get {
                    return this.columnRQTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LATColumn {
                get {
                    return this.columnLAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LONColumn {
                get {
                    return this.columnLON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FlagColumn {
                get {
                    return this.columnFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordInsertTimeColumn {
                get {
                    return this.columnRecordInsertTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VTypeColumn {
                get {
                    return this.columnVType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dropLATColumn {
                get {
                    return this.columndropLAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dropLONColumn {
                get {
                    return this.columndropLON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gpsLATColumn {
                get {
                    return this.columngpsLAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gpsLONColumn {
                get {
                    return this.columngpsLON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn consideredColumn {
                get {
                    return this.columnconsidered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LandMarkColumn {
                get {
                    return this.columnLandMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CabTypeColumn {
                get {
                    return this.columnCabType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingTimeCategoryColumn {
                get {
                    return this.columnBookingTimeCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCodeColumn {
                get {
                    return this.columnPCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentTypeColumn {
                get {
                    return this.columnPaymentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonDespatchBookingsRow this[int index] {
                get {
                    return ((NonDespatchBookingsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NonDespatchBookingsRowChangeEventHandler NonDespatchBookingsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NonDespatchBookingsRowChangeEventHandler NonDespatchBookingsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NonDespatchBookingsRowChangeEventHandler NonDespatchBookingsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NonDespatchBookingsRowChangeEventHandler NonDespatchBookingsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddNonDespatchBookingsRow(NonDespatchBookingsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonDespatchBookingsRow AddNonDespatchBookingsRow(
                        long BookingID, 
                        string RefNo, 
                        string ClientMobile, 
                        string Title, 
                        string ClientName, 
                        string ClientAddress, 
                        System.DateTime RQDateTime, 
                        string RQTime, 
                        double LAT, 
                        double LON, 
                        string Flag, 
                        System.DateTime RecordInsertTime, 
                        string VType, 
                        double dropLAT, 
                        double dropLON, 
                        double gpsLAT, 
                        double gpsLON, 
                        int considered, 
                        string LandMark, 
                        string CabType, 
                        string BookingTimeCategory, 
                        string PCode, 
                        string PaymentType) {
                NonDespatchBookingsRow rowNonDespatchBookingsRow = ((NonDespatchBookingsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BookingID,
                        RefNo,
                        ClientMobile,
                        Title,
                        ClientName,
                        ClientAddress,
                        RQDateTime,
                        RQTime,
                        LAT,
                        LON,
                        Flag,
                        RecordInsertTime,
                        VType,
                        dropLAT,
                        dropLON,
                        gpsLAT,
                        gpsLON,
                        considered,
                        LandMark,
                        CabType,
                        BookingTimeCategory,
                        PCode,
                        PaymentType};
                rowNonDespatchBookingsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNonDespatchBookingsRow);
                return rowNonDespatchBookingsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonDespatchBookingsRow FindByBookingID(long BookingID) {
                return ((NonDespatchBookingsRow)(this.Rows.Find(new object[] {
                            BookingID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                NonDespatchBookingsDataTable cln = ((NonDespatchBookingsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NonDespatchBookingsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAutoID = base.Columns["AutoID"];
                this.columnBookingID = base.Columns["BookingID"];
                this.columnRefNo = base.Columns["RefNo"];
                this.columnClientMobile = base.Columns["ClientMobile"];
                this.columnTitle = base.Columns["Title"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnClientAddress = base.Columns["ClientAddress"];
                this.columnRQDateTime = base.Columns["RQDateTime"];
                this.columnRQTime = base.Columns["RQTime"];
                this.columnLAT = base.Columns["LAT"];
                this.columnLON = base.Columns["LON"];
                this.columnFlag = base.Columns["Flag"];
                this.columnRecordInsertTime = base.Columns["RecordInsertTime"];
                this.columnVType = base.Columns["VType"];
                this.columndropLAT = base.Columns["dropLAT"];
                this.columndropLON = base.Columns["dropLON"];
                this.columngpsLAT = base.Columns["gpsLAT"];
                this.columngpsLON = base.Columns["gpsLON"];
                this.columnconsidered = base.Columns["considered"];
                this.columnLandMark = base.Columns["LandMark"];
                this.columnCabType = base.Columns["CabType"];
                this.columnBookingTimeCategory = base.Columns["BookingTimeCategory"];
                this.columnPCode = base.Columns["PCode"];
                this.columnPaymentType = base.Columns["PaymentType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAutoID = new global::System.Data.DataColumn("AutoID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoID);
                this.columnBookingID = new global::System.Data.DataColumn("BookingID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingID);
                this.columnRefNo = new global::System.Data.DataColumn("RefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefNo);
                this.columnClientMobile = new global::System.Data.DataColumn("ClientMobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientMobile);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnClientAddress = new global::System.Data.DataColumn("ClientAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientAddress);
                this.columnRQDateTime = new global::System.Data.DataColumn("RQDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRQDateTime);
                this.columnRQTime = new global::System.Data.DataColumn("RQTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRQTime);
                this.columnLAT = new global::System.Data.DataColumn("LAT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT);
                this.columnLON = new global::System.Data.DataColumn("LON", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLON);
                this.columnFlag = new global::System.Data.DataColumn("Flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag);
                this.columnRecordInsertTime = new global::System.Data.DataColumn("RecordInsertTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordInsertTime);
                this.columnVType = new global::System.Data.DataColumn("VType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVType);
                this.columndropLAT = new global::System.Data.DataColumn("dropLAT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndropLAT);
                this.columndropLON = new global::System.Data.DataColumn("dropLON", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndropLON);
                this.columngpsLAT = new global::System.Data.DataColumn("gpsLAT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngpsLAT);
                this.columngpsLON = new global::System.Data.DataColumn("gpsLON", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngpsLON);
                this.columnconsidered = new global::System.Data.DataColumn("considered", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconsidered);
                this.columnLandMark = new global::System.Data.DataColumn("LandMark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandMark);
                this.columnCabType = new global::System.Data.DataColumn("CabType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabType);
                this.columnBookingTimeCategory = new global::System.Data.DataColumn("BookingTimeCategory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingTimeCategory);
                this.columnPCode = new global::System.Data.DataColumn("PCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCode);
                this.columnPaymentType = new global::System.Data.DataColumn("PaymentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBookingID}, true));
                this.columnAutoID.AutoIncrement = true;
                this.columnAutoID.AutoIncrementSeed = -1;
                this.columnAutoID.AutoIncrementStep = -1;
                this.columnAutoID.AllowDBNull = false;
                this.columnBookingID.AllowDBNull = false;
                this.columnBookingID.Unique = true;
                this.columnRefNo.AllowDBNull = false;
                this.columnRefNo.MaxLength = 6;
                this.columnClientMobile.AllowDBNull = false;
                this.columnClientMobile.MaxLength = 20;
                this.columnTitle.AllowDBNull = false;
                this.columnTitle.MaxLength = 5;
                this.columnClientName.AllowDBNull = false;
                this.columnClientName.MaxLength = 100;
                this.columnClientAddress.AllowDBNull = false;
                this.columnClientAddress.MaxLength = 150;
                this.columnRQDateTime.AllowDBNull = false;
                this.columnRQTime.AllowDBNull = false;
                this.columnRQTime.MaxLength = 5;
                this.columnLAT.AllowDBNull = false;
                this.columnLON.AllowDBNull = false;
                this.columnFlag.AllowDBNull = false;
                this.columnFlag.MaxLength = 2;
                this.columnRecordInsertTime.AllowDBNull = false;
                this.columnVType.AllowDBNull = false;
                this.columnVType.MaxLength = 2;
                this.columndropLAT.AllowDBNull = false;
                this.columndropLON.AllowDBNull = false;
                this.columngpsLAT.AllowDBNull = false;
                this.columngpsLON.AllowDBNull = false;
                this.columnconsidered.AllowDBNull = false;
                this.columnLandMark.AllowDBNull = false;
                this.columnLandMark.MaxLength = 75;
                this.columnCabType.AllowDBNull = false;
                this.columnCabType.MaxLength = 1;
                this.columnBookingTimeCategory.AllowDBNull = false;
                this.columnBookingTimeCategory.MaxLength = 1;
                this.columnPCode.AllowDBNull = false;
                this.columnPCode.MaxLength = 20;
                this.columnPaymentType.AllowDBNull = false;
                this.columnPaymentType.MaxLength = 2;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonDespatchBookingsRow NewNonDespatchBookingsRow() {
                return ((NonDespatchBookingsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NonDespatchBookingsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(NonDespatchBookingsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NonDespatchBookingsRowChanged != null)) {
                    this.NonDespatchBookingsRowChanged(this, new NonDespatchBookingsRowChangeEvent(((NonDespatchBookingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NonDespatchBookingsRowChanging != null)) {
                    this.NonDespatchBookingsRowChanging(this, new NonDespatchBookingsRowChangeEvent(((NonDespatchBookingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NonDespatchBookingsRowDeleted != null)) {
                    this.NonDespatchBookingsRowDeleted(this, new NonDespatchBookingsRowChangeEvent(((NonDespatchBookingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NonDespatchBookingsRowDeleting != null)) {
                    this.NonDespatchBookingsRowDeleting(this, new NonDespatchBookingsRowChangeEvent(((NonDespatchBookingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveNonDespatchBookingsRow(NonDespatchBookingsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NonDespatchBookingsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class paraDataTable : global::System.Data.TypedTableBase<paraRow> {
            
            private global::System.Data.DataColumn columnRPBookingID;
            
            private global::System.Data.DataColumn columnpreset;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public paraDataTable() {
                this.TableName = "para";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal paraDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected paraDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RPBookingIDColumn {
                get {
                    return this.columnRPBookingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn presetColumn {
                get {
                    return this.columnpreset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public paraRow this[int index] {
                get {
                    return ((paraRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event paraRowChangeEventHandler paraRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event paraRowChangeEventHandler paraRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event paraRowChangeEventHandler paraRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event paraRowChangeEventHandler paraRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddparaRow(paraRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public paraRow AddparaRow(long RPBookingID, string preset) {
                paraRow rowparaRow = ((paraRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RPBookingID,
                        preset};
                rowparaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowparaRow);
                return rowparaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                paraDataTable cln = ((paraDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new paraDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRPBookingID = base.Columns["RPBookingID"];
                this.columnpreset = base.Columns["preset"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRPBookingID = new global::System.Data.DataColumn("RPBookingID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPBookingID);
                this.columnpreset = new global::System.Data.DataColumn("preset", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpreset);
                this.columnRPBookingID.AllowDBNull = false;
                this.columnpreset.AllowDBNull = false;
                this.columnpreset.MaxLength = 4;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public paraRow NewparaRow() {
                return ((paraRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new paraRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(paraRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.paraRowChanged != null)) {
                    this.paraRowChanged(this, new paraRowChangeEvent(((paraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.paraRowChanging != null)) {
                    this.paraRowChanging(this, new paraRowChangeEvent(((paraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.paraRowDeleted != null)) {
                    this.paraRowDeleted(this, new paraRowChangeEvent(((paraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.paraRowDeleting != null)) {
                    this.paraRowDeleting(this, new paraRowChangeEvent(((paraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveparaRow(paraRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "paraDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PCUsedDataTable : global::System.Data.TypedTableBase<PCUsedRow> {
            
            private global::System.Data.DataColumn columnAutoID;
            
            private global::System.Data.DataColumn columnClientMobile;
            
            private global::System.Data.DataColumn columnBookingID;
            
            private global::System.Data.DataColumn columnPCode;
            
            private global::System.Data.DataColumn columnInsertDateTime;
            
            private global::System.Data.DataColumn columnCabType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PCUsedDataTable() {
                this.TableName = "PCUsed";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PCUsedDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PCUsedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoIDColumn {
                get {
                    return this.columnAutoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientMobileColumn {
                get {
                    return this.columnClientMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingIDColumn {
                get {
                    return this.columnBookingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCodeColumn {
                get {
                    return this.columnPCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertDateTimeColumn {
                get {
                    return this.columnInsertDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CabTypeColumn {
                get {
                    return this.columnCabType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PCUsedRow this[int index] {
                get {
                    return ((PCUsedRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PCUsedRowChangeEventHandler PCUsedRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PCUsedRowChangeEventHandler PCUsedRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PCUsedRowChangeEventHandler PCUsedRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PCUsedRowChangeEventHandler PCUsedRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPCUsedRow(PCUsedRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PCUsedRow AddPCUsedRow(string ClientMobile, long BookingID, string PCode, System.DateTime InsertDateTime, string CabType) {
                PCUsedRow rowPCUsedRow = ((PCUsedRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ClientMobile,
                        BookingID,
                        PCode,
                        InsertDateTime,
                        CabType};
                rowPCUsedRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPCUsedRow);
                return rowPCUsedRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PCUsedRow FindByAutoID(long AutoID) {
                return ((PCUsedRow)(this.Rows.Find(new object[] {
                            AutoID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PCUsedDataTable cln = ((PCUsedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PCUsedDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAutoID = base.Columns["AutoID"];
                this.columnClientMobile = base.Columns["ClientMobile"];
                this.columnBookingID = base.Columns["BookingID"];
                this.columnPCode = base.Columns["PCode"];
                this.columnInsertDateTime = base.Columns["InsertDateTime"];
                this.columnCabType = base.Columns["CabType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAutoID = new global::System.Data.DataColumn("AutoID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoID);
                this.columnClientMobile = new global::System.Data.DataColumn("ClientMobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientMobile);
                this.columnBookingID = new global::System.Data.DataColumn("BookingID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingID);
                this.columnPCode = new global::System.Data.DataColumn("PCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCode);
                this.columnInsertDateTime = new global::System.Data.DataColumn("InsertDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertDateTime);
                this.columnCabType = new global::System.Data.DataColumn("CabType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAutoID}, true));
                this.columnAutoID.AutoIncrement = true;
                this.columnAutoID.AutoIncrementSeed = -1;
                this.columnAutoID.AutoIncrementStep = -1;
                this.columnAutoID.AllowDBNull = false;
                this.columnAutoID.Unique = true;
                this.columnClientMobile.AllowDBNull = false;
                this.columnClientMobile.MaxLength = 20;
                this.columnBookingID.AllowDBNull = false;
                this.columnPCode.AllowDBNull = false;
                this.columnPCode.MaxLength = 20;
                this.columnInsertDateTime.AllowDBNull = false;
                this.columnCabType.AllowDBNull = false;
                this.columnCabType.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PCUsedRow NewPCUsedRow() {
                return ((PCUsedRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PCUsedRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PCUsedRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PCUsedRowChanged != null)) {
                    this.PCUsedRowChanged(this, new PCUsedRowChangeEvent(((PCUsedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PCUsedRowChanging != null)) {
                    this.PCUsedRowChanging(this, new PCUsedRowChangeEvent(((PCUsedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PCUsedRowDeleted != null)) {
                    this.PCUsedRowDeleted(this, new PCUsedRowChangeEvent(((PCUsedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PCUsedRowDeleting != null)) {
                    this.PCUsedRowDeleting(this, new PCUsedRowChangeEvent(((PCUsedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePCUsedRow(PCUsedRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PCUsedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RatesDataTable : global::System.Data.TypedTableBase<RatesRow> {
            
            private global::System.Data.DataColumn columnAutoID;
            
            private global::System.Data.DataColumn columnInitialKm;
            
            private global::System.Data.DataColumn columnPerKMCharge;
            
            private global::System.Data.DataColumn columnWaitingPerMinute;
            
            private global::System.Data.DataColumn columnFixAmount;
            
            private global::System.Data.DataColumn columnTaxiType;
            
            private global::System.Data.DataColumn columnNightMode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RatesDataTable() {
                this.TableName = "Rates";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RatesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RatesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoIDColumn {
                get {
                    return this.columnAutoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InitialKmColumn {
                get {
                    return this.columnInitialKm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerKMChargeColumn {
                get {
                    return this.columnPerKMCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingPerMinuteColumn {
                get {
                    return this.columnWaitingPerMinute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FixAmountColumn {
                get {
                    return this.columnFixAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxiTypeColumn {
                get {
                    return this.columnTaxiType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NightModeColumn {
                get {
                    return this.columnNightMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RatesRow this[int index] {
                get {
                    return ((RatesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RatesRowChangeEventHandler RatesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RatesRowChangeEventHandler RatesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RatesRowChangeEventHandler RatesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RatesRowChangeEventHandler RatesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRatesRow(RatesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RatesRow AddRatesRow(float InitialKm, float PerKMCharge, float WaitingPerMinute, float FixAmount, string TaxiType, string NightMode) {
                RatesRow rowRatesRow = ((RatesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        InitialKm,
                        PerKMCharge,
                        WaitingPerMinute,
                        FixAmount,
                        TaxiType,
                        NightMode};
                rowRatesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRatesRow);
                return rowRatesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RatesRow FindByAutoID(int AutoID) {
                return ((RatesRow)(this.Rows.Find(new object[] {
                            AutoID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RatesDataTable cln = ((RatesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RatesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAutoID = base.Columns["AutoID"];
                this.columnInitialKm = base.Columns["InitialKm"];
                this.columnPerKMCharge = base.Columns["PerKMCharge"];
                this.columnWaitingPerMinute = base.Columns["WaitingPerMinute"];
                this.columnFixAmount = base.Columns["FixAmount"];
                this.columnTaxiType = base.Columns["TaxiType"];
                this.columnNightMode = base.Columns["NightMode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAutoID = new global::System.Data.DataColumn("AutoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoID);
                this.columnInitialKm = new global::System.Data.DataColumn("InitialKm", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialKm);
                this.columnPerKMCharge = new global::System.Data.DataColumn("PerKMCharge", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerKMCharge);
                this.columnWaitingPerMinute = new global::System.Data.DataColumn("WaitingPerMinute", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingPerMinute);
                this.columnFixAmount = new global::System.Data.DataColumn("FixAmount", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixAmount);
                this.columnTaxiType = new global::System.Data.DataColumn("TaxiType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxiType);
                this.columnNightMode = new global::System.Data.DataColumn("NightMode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNightMode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAutoID}, true));
                this.columnAutoID.AutoIncrement = true;
                this.columnAutoID.AutoIncrementSeed = -1;
                this.columnAutoID.AutoIncrementStep = -1;
                this.columnAutoID.AllowDBNull = false;
                this.columnAutoID.Unique = true;
                this.columnInitialKm.AllowDBNull = false;
                this.columnPerKMCharge.AllowDBNull = false;
                this.columnWaitingPerMinute.AllowDBNull = false;
                this.columnFixAmount.AllowDBNull = false;
                this.columnTaxiType.AllowDBNull = false;
                this.columnTaxiType.MaxLength = 1;
                this.columnNightMode.AllowDBNull = false;
                this.columnNightMode.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RatesRow NewRatesRow() {
                return ((RatesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RatesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RatesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RatesRowChanged != null)) {
                    this.RatesRowChanged(this, new RatesRowChangeEvent(((RatesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RatesRowChanging != null)) {
                    this.RatesRowChanging(this, new RatesRowChangeEvent(((RatesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RatesRowDeleted != null)) {
                    this.RatesRowDeleted(this, new RatesRowChangeEvent(((RatesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RatesRowDeleting != null)) {
                    this.RatesRowDeleting(this, new RatesRowChangeEvent(((RatesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRatesRow(RatesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RatesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RatesNightDataTable : global::System.Data.TypedTableBase<RatesNightRow> {
            
            private global::System.Data.DataColumn columnAutoID;
            
            private global::System.Data.DataColumn columnInitialKm;
            
            private global::System.Data.DataColumn columnPerKMCharge;
            
            private global::System.Data.DataColumn columnWaitingPerMinute;
            
            private global::System.Data.DataColumn columnFixAmount;
            
            private global::System.Data.DataColumn columnTaxiType;
            
            private global::System.Data.DataColumn columnstart;
            
            private global::System.Data.DataColumn columnend;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RatesNightDataTable() {
                this.TableName = "RatesNight";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RatesNightDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RatesNightDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoIDColumn {
                get {
                    return this.columnAutoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InitialKmColumn {
                get {
                    return this.columnInitialKm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerKMChargeColumn {
                get {
                    return this.columnPerKMCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaitingPerMinuteColumn {
                get {
                    return this.columnWaitingPerMinute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FixAmountColumn {
                get {
                    return this.columnFixAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxiTypeColumn {
                get {
                    return this.columnTaxiType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn startColumn {
                get {
                    return this.columnstart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn endColumn {
                get {
                    return this.columnend;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RatesNightRow this[int index] {
                get {
                    return ((RatesNightRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RatesNightRowChangeEventHandler RatesNightRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RatesNightRowChangeEventHandler RatesNightRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RatesNightRowChangeEventHandler RatesNightRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RatesNightRowChangeEventHandler RatesNightRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRatesNightRow(RatesNightRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RatesNightRow AddRatesNightRow(float InitialKm, float PerKMCharge, float WaitingPerMinute, float FixAmount, string TaxiType, int start, int end) {
                RatesNightRow rowRatesNightRow = ((RatesNightRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        InitialKm,
                        PerKMCharge,
                        WaitingPerMinute,
                        FixAmount,
                        TaxiType,
                        start,
                        end};
                rowRatesNightRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRatesNightRow);
                return rowRatesNightRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RatesNightRow FindByAutoID(int AutoID) {
                return ((RatesNightRow)(this.Rows.Find(new object[] {
                            AutoID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RatesNightDataTable cln = ((RatesNightDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RatesNightDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAutoID = base.Columns["AutoID"];
                this.columnInitialKm = base.Columns["InitialKm"];
                this.columnPerKMCharge = base.Columns["PerKMCharge"];
                this.columnWaitingPerMinute = base.Columns["WaitingPerMinute"];
                this.columnFixAmount = base.Columns["FixAmount"];
                this.columnTaxiType = base.Columns["TaxiType"];
                this.columnstart = base.Columns["start"];
                this.columnend = base.Columns["end"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAutoID = new global::System.Data.DataColumn("AutoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoID);
                this.columnInitialKm = new global::System.Data.DataColumn("InitialKm", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialKm);
                this.columnPerKMCharge = new global::System.Data.DataColumn("PerKMCharge", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerKMCharge);
                this.columnWaitingPerMinute = new global::System.Data.DataColumn("WaitingPerMinute", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitingPerMinute);
                this.columnFixAmount = new global::System.Data.DataColumn("FixAmount", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixAmount);
                this.columnTaxiType = new global::System.Data.DataColumn("TaxiType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxiType);
                this.columnstart = new global::System.Data.DataColumn("start", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart);
                this.columnend = new global::System.Data.DataColumn("end", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAutoID}, true));
                this.columnAutoID.AutoIncrement = true;
                this.columnAutoID.AutoIncrementSeed = -1;
                this.columnAutoID.AutoIncrementStep = -1;
                this.columnAutoID.AllowDBNull = false;
                this.columnAutoID.Unique = true;
                this.columnInitialKm.AllowDBNull = false;
                this.columnPerKMCharge.AllowDBNull = false;
                this.columnWaitingPerMinute.AllowDBNull = false;
                this.columnFixAmount.AllowDBNull = false;
                this.columnTaxiType.AllowDBNull = false;
                this.columnTaxiType.MaxLength = 1;
                this.columnstart.AllowDBNull = false;
                this.columnend.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RatesNightRow NewRatesNightRow() {
                return ((RatesNightRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RatesNightRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RatesNightRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RatesNightRowChanged != null)) {
                    this.RatesNightRowChanged(this, new RatesNightRowChangeEvent(((RatesNightRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RatesNightRowChanging != null)) {
                    this.RatesNightRowChanging(this, new RatesNightRowChangeEvent(((RatesNightRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RatesNightRowDeleted != null)) {
                    this.RatesNightRowDeleted(this, new RatesNightRowChangeEvent(((RatesNightRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RatesNightRowDeleting != null)) {
                    this.RatesNightRowDeleting(this, new RatesNightRowChangeEvent(((RatesNightRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRatesNightRow(RatesNightRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RatesNightDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SMSDataTable : global::System.Data.TypedTableBase<SMSRow> {
            
            private global::System.Data.DataColumn columnAutoID;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columnmessage;
            
            private global::System.Data.DataColumn columnclientmobile;
            
            private global::System.Data.DataColumn columnsendflag;
            
            private global::System.Data.DataColumn columnRecordInsertTime;
            
            private global::System.Data.DataColumn columnsendtime;
            
            private global::System.Data.DataColumn columnrespond;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SMSDataTable() {
                this.TableName = "SMS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SMSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SMSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoIDColumn {
                get {
                    return this.columnAutoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn messageColumn {
                get {
                    return this.columnmessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn clientmobileColumn {
                get {
                    return this.columnclientmobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sendflagColumn {
                get {
                    return this.columnsendflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecordInsertTimeColumn {
                get {
                    return this.columnRecordInsertTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sendtimeColumn {
                get {
                    return this.columnsendtime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn respondColumn {
                get {
                    return this.columnrespond;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SMSRow this[int index] {
                get {
                    return ((SMSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SMSRowChangeEventHandler SMSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SMSRowChangeEventHandler SMSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SMSRowChangeEventHandler SMSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SMSRowChangeEventHandler SMSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSMSRow(SMSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SMSRow AddSMSRow(string type, string message, string clientmobile, string sendflag, System.DateTime RecordInsertTime, System.DateTime sendtime, string respond) {
                SMSRow rowSMSRow = ((SMSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        type,
                        message,
                        clientmobile,
                        sendflag,
                        RecordInsertTime,
                        sendtime,
                        respond};
                rowSMSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSMSRow);
                return rowSMSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SMSRow FindByAutoID(int AutoID) {
                return ((SMSRow)(this.Rows.Find(new object[] {
                            AutoID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SMSDataTable cln = ((SMSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SMSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAutoID = base.Columns["AutoID"];
                this.columntype = base.Columns["type"];
                this.columnmessage = base.Columns["message"];
                this.columnclientmobile = base.Columns["clientmobile"];
                this.columnsendflag = base.Columns["sendflag"];
                this.columnRecordInsertTime = base.Columns["RecordInsertTime"];
                this.columnsendtime = base.Columns["sendtime"];
                this.columnrespond = base.Columns["respond"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAutoID = new global::System.Data.DataColumn("AutoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoID);
                this.columntype = new global::System.Data.DataColumn("type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnmessage = new global::System.Data.DataColumn("message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessage);
                this.columnclientmobile = new global::System.Data.DataColumn("clientmobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclientmobile);
                this.columnsendflag = new global::System.Data.DataColumn("sendflag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsendflag);
                this.columnRecordInsertTime = new global::System.Data.DataColumn("RecordInsertTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordInsertTime);
                this.columnsendtime = new global::System.Data.DataColumn("sendtime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsendtime);
                this.columnrespond = new global::System.Data.DataColumn("respond", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrespond);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAutoID}, true));
                this.columnAutoID.AutoIncrement = true;
                this.columnAutoID.AutoIncrementSeed = -1;
                this.columnAutoID.AutoIncrementStep = -1;
                this.columnAutoID.AllowDBNull = false;
                this.columnAutoID.Unique = true;
                this.columntype.AllowDBNull = false;
                this.columntype.MaxLength = 10;
                this.columnmessage.AllowDBNull = false;
                this.columnmessage.MaxLength = 200;
                this.columnclientmobile.AllowDBNull = false;
                this.columnclientmobile.MaxLength = 10;
                this.columnsendflag.AllowDBNull = false;
                this.columnsendflag.MaxLength = 1;
                this.columnRecordInsertTime.AllowDBNull = false;
                this.columnsendtime.AllowDBNull = false;
                this.columnrespond.AllowDBNull = false;
                this.columnrespond.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SMSRow NewSMSRow() {
                return ((SMSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SMSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SMSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SMSRowChanged != null)) {
                    this.SMSRowChanged(this, new SMSRowChangeEvent(((SMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SMSRowChanging != null)) {
                    this.SMSRowChanging(this, new SMSRowChangeEvent(((SMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SMSRowDeleted != null)) {
                    this.SMSRowDeleted(this, new SMSRowChangeEvent(((SMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SMSRowDeleting != null)) {
                    this.SMSRowDeleting(this, new SMSRowChangeEvent(((SMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSMSRow(SMSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                budgetDataSet ds = new budgetDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SMSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AppBookingCancelationRow : global::System.Data.DataRow {
            
            private AppBookingCancelationDataTable tableAppBookingCancelation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AppBookingCancelationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAppBookingCancelation = ((AppBookingCancelationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BookingID {
                get {
                    return ((long)(this[this.tableAppBookingCancelation.BookingIDColumn]));
                }
                set {
                    this[this.tableAppBookingCancelation.BookingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CancelTime {
                get {
                    return ((global::System.DateTime)(this[this.tableAppBookingCancelation.CancelTimeColumn]));
                }
                set {
                    this[this.tableAppBookingCancelation.CancelTimeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class booking_statusRow : global::System.Data.DataRow {
            
            private booking_statusDataTable tablebooking_status;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal booking_statusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebooking_status = ((booking_statusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablebooking_status.idColumn]));
                }
                set {
                    this[this.tablebooking_status.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tablebooking_status.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'booking_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebooking_status.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string description {
                get {
                    try {
                        return ((string)(this[this.tablebooking_status.descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'description\' in table \'booking_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebooking_status.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime addeddate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablebooking_status.addeddateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'addeddate\' in table \'booking_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebooking_status.addeddateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnameNull() {
                return this.IsNull(this.tablebooking_status.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnameNull() {
                this[this.tablebooking_status.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdescriptionNull() {
                return this.IsNull(this.tablebooking_status.descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdescriptionNull() {
                this[this.tablebooking_status.descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsaddeddateNull() {
                return this.IsNull(this.tablebooking_status.addeddateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetaddeddateNull() {
                this[this.tablebooking_status.addeddateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BookinStatusLogRow : global::System.Data.DataRow {
            
            private BookinStatusLogDataTable tableBookinStatusLog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BookinStatusLogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBookinStatusLog = ((BookinStatusLogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ID {
                get {
                    return ((long)(this[this.tableBookinStatusLog.IDColumn]));
                }
                set {
                    this[this.tableBookinStatusLog.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BookingID {
                get {
                    return ((long)(this[this.tableBookinStatusLog.BookingIDColumn]));
                }
                set {
                    this[this.tableBookinStatusLog.BookingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Status {
                get {
                    return ((int)(this[this.tableBookinStatusLog.StatusColumn]));
                }
                set {
                    this[this.tableBookinStatusLog.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TriggerTime {
                get {
                    return ((global::System.DateTime)(this[this.tableBookinStatusLog.TriggerTimeColumn]));
                }
                set {
                    this[this.tableBookinStatusLog.TriggerTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TriggerBy {
                get {
                    return ((string)(this[this.tableBookinStatusLog.TriggerByColumn]));
                }
                set {
                    this[this.tableBookinStatusLog.TriggerByColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CancelBookingRow : global::System.Data.DataRow {
            
            private CancelBookingDataTable tableCancelBooking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CancelBookingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCancelBooking = ((CancelBookingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AutoID {
                get {
                    return ((long)(this[this.tableCancelBooking.AutoIDColumn]));
                }
                set {
                    this[this.tableCancelBooking.AutoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BookingID {
                get {
                    return ((long)(this[this.tableCancelBooking.BookingIDColumn]));
                }
                set {
                    this[this.tableCancelBooking.BookingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BookingStatus {
                get {
                    return ((string)(this[this.tableCancelBooking.BookingStatusColumn]));
                }
                set {
                    this[this.tableCancelBooking.BookingStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RefNo {
                get {
                    return ((string)(this[this.tableCancelBooking.RefNoColumn]));
                }
                set {
                    this[this.tableCancelBooking.RefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImiNo {
                get {
                    return ((string)(this[this.tableCancelBooking.ImiNoColumn]));
                }
                set {
                    this[this.tableCancelBooking.ImiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CabNo {
                get {
                    return ((string)(this[this.tableCancelBooking.CabNoColumn]));
                }
                set {
                    this[this.tableCancelBooking.CabNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientMobile {
                get {
                    return ((string)(this[this.tableCancelBooking.ClientMobileColumn]));
                }
                set {
                    this[this.tableCancelBooking.ClientMobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientName {
                get {
                    return ((string)(this[this.tableCancelBooking.ClientNameColumn]));
                }
                set {
                    this[this.tableCancelBooking.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientAddress {
                get {
                    return ((string)(this[this.tableCancelBooking.ClientAddressColumn]));
                }
                set {
                    this[this.tableCancelBooking.ClientAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LandMark {
                get {
                    return ((string)(this[this.tableCancelBooking.LandMarkColumn]));
                }
                set {
                    this[this.tableCancelBooking.LandMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    return ((string)(this[this.tableCancelBooking.RemarkColumn]));
                }
                set {
                    this[this.tableCancelBooking.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RQTime {
                get {
                    return ((string)(this[this.tableCancelBooking.RQTimeColumn]));
                }
                set {
                    this[this.tableCancelBooking.RQTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LAT {
                get {
                    return ((double)(this[this.tableCancelBooking.LATColumn]));
                }
                set {
                    this[this.tableCancelBooking.LATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LON {
                get {
                    return ((double)(this[this.tableCancelBooking.LONColumn]));
                }
                set {
                    this[this.tableCancelBooking.LONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AcceptTime {
                get {
                    return ((global::System.DateTime)(this[this.tableCancelBooking.AcceptTimeColumn]));
                }
                set {
                    this[this.tableCancelBooking.AcceptTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AtThePlaceTime {
                get {
                    return ((global::System.DateTime)(this[this.tableCancelBooking.AtThePlaceTimeColumn]));
                }
                set {
                    this[this.tableCancelBooking.AtThePlaceTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MeterOnTime {
                get {
                    return ((global::System.DateTime)(this[this.tableCancelBooking.MeterOnTimeColumn]));
                }
                set {
                    this[this.tableCancelBooking.MeterOnTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MeterOffTime {
                get {
                    return ((global::System.DateTime)(this[this.tableCancelBooking.MeterOffTimeColumn]));
                }
                set {
                    this[this.tableCancelBooking.MeterOffTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float MeterOffLAT {
                get {
                    return ((float)(this[this.tableCancelBooking.MeterOffLATColumn]));
                }
                set {
                    this[this.tableCancelBooking.MeterOffLATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float MeterOffLON {
                get {
                    return ((float)(this[this.tableCancelBooking.MeterOffLONColumn]));
                }
                set {
                    this[this.tableCancelBooking.MeterOffLONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MeterOffAddress {
                get {
                    return ((string)(this[this.tableCancelBooking.MeterOffAddressColumn]));
                }
                set {
                    this[this.tableCancelBooking.MeterOffAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RunningKM {
                get {
                    return ((double)(this[this.tableCancelBooking.RunningKMColumn]));
                }
                set {
                    this[this.tableCancelBooking.RunningKMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Amount {
                get {
                    return ((double)(this[this.tableCancelBooking.AmountColumn]));
                }
                set {
                    this[this.tableCancelBooking.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double InitialKm {
                get {
                    return ((double)(this[this.tableCancelBooking.InitialKmColumn]));
                }
                set {
                    this[this.tableCancelBooking.InitialKmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PerKMCharge {
                get {
                    return ((double)(this[this.tableCancelBooking.PerKMChargeColumn]));
                }
                set {
                    this[this.tableCancelBooking.PerKMChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Flag {
                get {
                    return ((string)(this[this.tableCancelBooking.FlagColumn]));
                }
                set {
                    this[this.tableCancelBooking.FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingPerMinute {
                get {
                    return ((float)(this[this.tableCancelBooking.WaitingPerMinuteColumn]));
                }
                set {
                    this[this.tableCancelBooking.WaitingPerMinuteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FixAmount {
                get {
                    return ((float)(this[this.tableCancelBooking.FixAmountColumn]));
                }
                set {
                    this[this.tableCancelBooking.FixAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RecordInsertTime {
                get {
                    return ((global::System.DateTime)(this[this.tableCancelBooking.RecordInsertTimeColumn]));
                }
                set {
                    this[this.tableCancelBooking.RecordInsertTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GCMFlag {
                get {
                    return ((bool)(this[this.tableCancelBooking.GCMFlagColumn]));
                }
                set {
                    this[this.tableCancelBooking.GCMFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int kangarooupdate {
                get {
                    return ((int)(this[this.tableCancelBooking.kangarooupdateColumn]));
                }
                set {
                    this[this.tableCancelBooking.kangarooupdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingTime {
                get {
                    return ((float)(this[this.tableCancelBooking.WaitingTimeColumn]));
                }
                set {
                    this[this.tableCancelBooking.WaitingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingCost {
                get {
                    return ((float)(this[this.tableCancelBooking.WaitingCostColumn]));
                }
                set {
                    this[this.tableCancelBooking.WaitingCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Rating {
                get {
                    return ((int)(this[this.tableCancelBooking.RatingColumn]));
                }
                set {
                    this[this.tableCancelBooking.RatingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DNo {
                get {
                    return ((string)(this[this.tableCancelBooking.DNoColumn]));
                }
                set {
                    this[this.tableCancelBooking.DNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DRating {
                get {
                    return ((double)(this[this.tableCancelBooking.DRatingColumn]));
                }
                set {
                    this[this.tableCancelBooking.DRatingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CabType {
                get {
                    return ((string)(this[this.tableCancelBooking.CabTypeColumn]));
                }
                set {
                    this[this.tableCancelBooking.CabTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BookingType {
                get {
                    return ((string)(this[this.tableCancelBooking.BookingTypeColumn]));
                }
                set {
                    this[this.tableCancelBooking.BookingTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeWaiting {
                get {
                    return ((int)(this[this.tableCancelBooking.FreeWaitingColumn]));
                }
                set {
                    this[this.tableCancelBooking.FreeWaitingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCode {
                get {
                    return ((string)(this[this.tableCancelBooking.PCodeColumn]));
                }
                set {
                    this[this.tableCancelBooking.PCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentType {
                get {
                    return ((string)(this[this.tableCancelBooking.PaymentTypeColumn]));
                }
                set {
                    this[this.tableCancelBooking.PaymentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DiscountAmount {
                get {
                    return ((double)(this[this.tableCancelBooking.DiscountAmountColumn]));
                }
                set {
                    this[this.tableCancelBooking.DiscountAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DRatinNew {
                get {
                    return ((double)(this[this.tableCancelBooking.DRatinNewColumn]));
                }
                set {
                    this[this.tableCancelBooking.DRatinNewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CancelTime {
                get {
                    return ((global::System.DateTime)(this[this.tableCancelBooking.CancelTimeColumn]));
                }
                set {
                    this[this.tableCancelBooking.CancelTimeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CancelBookingNewRow : global::System.Data.DataRow {
            
            private CancelBookingNewDataTable tableCancelBookingNew;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CancelBookingNewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCancelBookingNew = ((CancelBookingNewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AutoID {
                get {
                    return ((long)(this[this.tableCancelBookingNew.AutoIDColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.AutoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BookingID {
                get {
                    return ((long)(this[this.tableCancelBookingNew.BookingIDColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.BookingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BookingStatus {
                get {
                    return ((string)(this[this.tableCancelBookingNew.BookingStatusColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.BookingStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RefNo {
                get {
                    return ((string)(this[this.tableCancelBookingNew.RefNoColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.RefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImiNo {
                get {
                    return ((string)(this[this.tableCancelBookingNew.ImiNoColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.ImiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CabNo {
                get {
                    return ((string)(this[this.tableCancelBookingNew.CabNoColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.CabNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientMobile {
                get {
                    return ((string)(this[this.tableCancelBookingNew.ClientMobileColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.ClientMobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientName {
                get {
                    return ((string)(this[this.tableCancelBookingNew.ClientNameColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientAddress {
                get {
                    return ((string)(this[this.tableCancelBookingNew.ClientAddressColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.ClientAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LandMark {
                get {
                    return ((string)(this[this.tableCancelBookingNew.LandMarkColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.LandMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    return ((string)(this[this.tableCancelBookingNew.RemarkColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RQTime {
                get {
                    return ((string)(this[this.tableCancelBookingNew.RQTimeColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.RQTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LAT {
                get {
                    return ((double)(this[this.tableCancelBookingNew.LATColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.LATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LON {
                get {
                    return ((double)(this[this.tableCancelBookingNew.LONColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.LONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AcceptTime {
                get {
                    return ((global::System.DateTime)(this[this.tableCancelBookingNew.AcceptTimeColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.AcceptTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AtThePlaceTime {
                get {
                    return ((global::System.DateTime)(this[this.tableCancelBookingNew.AtThePlaceTimeColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.AtThePlaceTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MeterOnTime {
                get {
                    return ((global::System.DateTime)(this[this.tableCancelBookingNew.MeterOnTimeColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.MeterOnTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MeterOffTime {
                get {
                    return ((global::System.DateTime)(this[this.tableCancelBookingNew.MeterOffTimeColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.MeterOffTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float MeterOffLAT {
                get {
                    return ((float)(this[this.tableCancelBookingNew.MeterOffLATColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.MeterOffLATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float MeterOffLON {
                get {
                    return ((float)(this[this.tableCancelBookingNew.MeterOffLONColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.MeterOffLONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MeterOffAddress {
                get {
                    return ((string)(this[this.tableCancelBookingNew.MeterOffAddressColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.MeterOffAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RunningKM {
                get {
                    return ((double)(this[this.tableCancelBookingNew.RunningKMColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.RunningKMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Amount {
                get {
                    return ((double)(this[this.tableCancelBookingNew.AmountColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double InitialKm {
                get {
                    return ((double)(this[this.tableCancelBookingNew.InitialKmColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.InitialKmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PerKMCharge {
                get {
                    return ((double)(this[this.tableCancelBookingNew.PerKMChargeColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.PerKMChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Flag {
                get {
                    return ((string)(this[this.tableCancelBookingNew.FlagColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingPerMinute {
                get {
                    return ((float)(this[this.tableCancelBookingNew.WaitingPerMinuteColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.WaitingPerMinuteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FixAmount {
                get {
                    return ((float)(this[this.tableCancelBookingNew.FixAmountColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.FixAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RecordInsertTime {
                get {
                    return ((global::System.DateTime)(this[this.tableCancelBookingNew.RecordInsertTimeColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.RecordInsertTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GCMFlag {
                get {
                    return ((bool)(this[this.tableCancelBookingNew.GCMFlagColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.GCMFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int kangarooupdate {
                get {
                    return ((int)(this[this.tableCancelBookingNew.kangarooupdateColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.kangarooupdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingTime {
                get {
                    return ((float)(this[this.tableCancelBookingNew.WaitingTimeColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.WaitingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingCost {
                get {
                    return ((float)(this[this.tableCancelBookingNew.WaitingCostColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.WaitingCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Rating {
                get {
                    return ((int)(this[this.tableCancelBookingNew.RatingColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.RatingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DNo {
                get {
                    return ((string)(this[this.tableCancelBookingNew.DNoColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.DNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DRating {
                get {
                    return ((double)(this[this.tableCancelBookingNew.DRatingColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.DRatingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CabType {
                get {
                    return ((string)(this[this.tableCancelBookingNew.CabTypeColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.CabTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BookingType {
                get {
                    return ((string)(this[this.tableCancelBookingNew.BookingTypeColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.BookingTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeWaiting {
                get {
                    return ((int)(this[this.tableCancelBookingNew.FreeWaitingColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.FreeWaitingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DiscountAmount {
                get {
                    return ((double)(this[this.tableCancelBookingNew.DiscountAmountColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.DiscountAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCode {
                get {
                    return ((string)(this[this.tableCancelBookingNew.PCodeColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.PCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentType {
                get {
                    return ((string)(this[this.tableCancelBookingNew.PaymentTypeColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.PaymentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DRatinNew {
                get {
                    return ((double)(this[this.tableCancelBookingNew.DRatinNewColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.DRatinNewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CancelTime {
                get {
                    return ((global::System.DateTime)(this[this.tableCancelBookingNew.CancelTimeColumn]));
                }
                set {
                    this[this.tableCancelBookingNew.CancelTimeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ClientFavoriteRow : global::System.Data.DataRow {
            
            private ClientFavoriteDataTable tableClientFavorite;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ClientFavoriteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClientFavorite = ((ClientFavoriteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string mobile {
                get {
                    return ((string)(this[this.tableClientFavorite.mobileColumn]));
                }
                set {
                    this[this.tableClientFavorite.mobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string title {
                get {
                    return ((string)(this[this.tableClientFavorite.titleColumn]));
                }
                set {
                    this[this.tableClientFavorite.titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string address {
                get {
                    return ((string)(this[this.tableClientFavorite.addressColumn]));
                }
                set {
                    this[this.tableClientFavorite.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double lat {
                get {
                    return ((double)(this[this.tableClientFavorite.latColumn]));
                }
                set {
                    this[this.tableClientFavorite.latColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double lon {
                get {
                    return ((double)(this[this.tableClientFavorite.lonColumn]));
                }
                set {
                    this[this.tableClientFavorite.lonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string type {
                get {
                    return ((string)(this[this.tableClientFavorite.typeColumn]));
                }
                set {
                    this[this.tableClientFavorite.typeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ClientMobileRegistrationOldRow : global::System.Data.DataRow {
            
            private ClientMobileRegistrationOldDataTable tableClientMobileRegistrationOld;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ClientMobileRegistrationOldRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClientMobileRegistrationOld = ((ClientMobileRegistrationOldDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mobile {
                get {
                    return ((string)(this[this.tableClientMobileRegistrationOld.MobileColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeviceID {
                get {
                    return ((string)(this[this.tableClientMobileRegistrationOld.DeviceIDColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.DeviceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Title {
                get {
                    return ((string)(this[this.tableClientMobileRegistrationOld.TitleColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableClientMobileRegistrationOld.NameColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EMail {
                get {
                    return ((string)(this[this.tableClientMobileRegistrationOld.EMailColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.EMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Password {
                get {
                    return ((string)(this[this.tableClientMobileRegistrationOld.PasswordColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.PasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Pin {
                get {
                    return ((int)(this[this.tableClientMobileRegistrationOld.PinColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.PinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RegDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableClientMobileRegistrationOld.RegDateTimeColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.RegDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BookingCount {
                get {
                    return ((int)(this[this.tableClientMobileRegistrationOld.BookingCountColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.BookingCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CancelCount {
                get {
                    return ((int)(this[this.tableClientMobileRegistrationOld.CancelCountColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.CancelCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InsertTime {
                get {
                    return ((global::System.DateTime)(this[this.tableClientMobileRegistrationOld.InsertTimeColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.InsertTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableClientMobileRegistrationOld.UpdateTimeColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.UpdateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhoneModel {
                get {
                    return ((string)(this[this.tableClientMobileRegistrationOld.PhoneModelColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.PhoneModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OS {
                get {
                    return ((string)(this[this.tableClientMobileRegistrationOld.OSColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.OSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CountryCode {
                get {
                    return ((string)(this[this.tableClientMobileRegistrationOld.CountryCodeColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.CountryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Country {
                get {
                    return ((string)(this[this.tableClientMobileRegistrationOld.CountryColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte EMailSubcription {
                get {
                    return ((sbyte)(this[this.tableClientMobileRegistrationOld.EMailSubcriptionColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.EMailSubcriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RequestSendTime {
                get {
                    return ((global::System.DateTime)(this[this.tableClientMobileRegistrationOld.RequestSendTimeColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.RequestSendTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PinExpairDuration {
                get {
                    return ((int)(this[this.tableClientMobileRegistrationOld.PinExpairDurationColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.PinExpairDurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PreferedLangauge {
                get {
                    return ((string)(this[this.tableClientMobileRegistrationOld.PreferedLangaugeColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.PreferedLangaugeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int login {
                get {
                    return ((int)(this[this.tableClientMobileRegistrationOld.loginColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.loginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastLogin {
                get {
                    return ((global::System.DateTime)(this[this.tableClientMobileRegistrationOld.LastLoginColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.LastLoginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PinValidate {
                get {
                    return ((bool)(this[this.tableClientMobileRegistrationOld.PinValidateColumn]));
                }
                set {
                    this[this.tableClientMobileRegistrationOld.PinValidateColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DespatchBookingRow : global::System.Data.DataRow {
            
            private DespatchBookingDataTable tableDespatchBooking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DespatchBookingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDespatchBooking = ((DespatchBookingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AutoID {
                get {
                    return ((long)(this[this.tableDespatchBooking.AutoIDColumn]));
                }
                set {
                    this[this.tableDespatchBooking.AutoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BookingID {
                get {
                    return ((long)(this[this.tableDespatchBooking.BookingIDColumn]));
                }
                set {
                    this[this.tableDespatchBooking.BookingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BookingStatus {
                get {
                    return ((string)(this[this.tableDespatchBooking.BookingStatusColumn]));
                }
                set {
                    this[this.tableDespatchBooking.BookingStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RefNo {
                get {
                    return ((string)(this[this.tableDespatchBooking.RefNoColumn]));
                }
                set {
                    this[this.tableDespatchBooking.RefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImiNo {
                get {
                    return ((string)(this[this.tableDespatchBooking.ImiNoColumn]));
                }
                set {
                    this[this.tableDespatchBooking.ImiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CabNo {
                get {
                    return ((string)(this[this.tableDespatchBooking.CabNoColumn]));
                }
                set {
                    this[this.tableDespatchBooking.CabNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientMobile {
                get {
                    return ((string)(this[this.tableDespatchBooking.ClientMobileColumn]));
                }
                set {
                    this[this.tableDespatchBooking.ClientMobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientName {
                get {
                    return ((string)(this[this.tableDespatchBooking.ClientNameColumn]));
                }
                set {
                    this[this.tableDespatchBooking.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientAddress {
                get {
                    return ((string)(this[this.tableDespatchBooking.ClientAddressColumn]));
                }
                set {
                    this[this.tableDespatchBooking.ClientAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LandMark {
                get {
                    return ((string)(this[this.tableDespatchBooking.LandMarkColumn]));
                }
                set {
                    this[this.tableDespatchBooking.LandMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    return ((string)(this[this.tableDespatchBooking.RemarkColumn]));
                }
                set {
                    this[this.tableDespatchBooking.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RQTime {
                get {
                    return ((string)(this[this.tableDespatchBooking.RQTimeColumn]));
                }
                set {
                    this[this.tableDespatchBooking.RQTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LAT {
                get {
                    return ((double)(this[this.tableDespatchBooking.LATColumn]));
                }
                set {
                    this[this.tableDespatchBooking.LATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LON {
                get {
                    return ((double)(this[this.tableDespatchBooking.LONColumn]));
                }
                set {
                    this[this.tableDespatchBooking.LONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AcceptTime {
                get {
                    return ((global::System.DateTime)(this[this.tableDespatchBooking.AcceptTimeColumn]));
                }
                set {
                    this[this.tableDespatchBooking.AcceptTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AtThePlaceTime {
                get {
                    return ((global::System.DateTime)(this[this.tableDespatchBooking.AtThePlaceTimeColumn]));
                }
                set {
                    this[this.tableDespatchBooking.AtThePlaceTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MeterOnTime {
                get {
                    return ((global::System.DateTime)(this[this.tableDespatchBooking.MeterOnTimeColumn]));
                }
                set {
                    this[this.tableDespatchBooking.MeterOnTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MeterOffTime {
                get {
                    return ((global::System.DateTime)(this[this.tableDespatchBooking.MeterOffTimeColumn]));
                }
                set {
                    this[this.tableDespatchBooking.MeterOffTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float MeterOffLAT {
                get {
                    return ((float)(this[this.tableDespatchBooking.MeterOffLATColumn]));
                }
                set {
                    this[this.tableDespatchBooking.MeterOffLATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float MeterOffLON {
                get {
                    return ((float)(this[this.tableDespatchBooking.MeterOffLONColumn]));
                }
                set {
                    this[this.tableDespatchBooking.MeterOffLONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MeterOffAddress {
                get {
                    return ((string)(this[this.tableDespatchBooking.MeterOffAddressColumn]));
                }
                set {
                    this[this.tableDespatchBooking.MeterOffAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RunningKM {
                get {
                    return ((double)(this[this.tableDespatchBooking.RunningKMColumn]));
                }
                set {
                    this[this.tableDespatchBooking.RunningKMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Amount {
                get {
                    return ((double)(this[this.tableDespatchBooking.AmountColumn]));
                }
                set {
                    this[this.tableDespatchBooking.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double InitialKm {
                get {
                    return ((double)(this[this.tableDespatchBooking.InitialKmColumn]));
                }
                set {
                    this[this.tableDespatchBooking.InitialKmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PerKMCharge {
                get {
                    return ((double)(this[this.tableDespatchBooking.PerKMChargeColumn]));
                }
                set {
                    this[this.tableDespatchBooking.PerKMChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Flag {
                get {
                    return ((string)(this[this.tableDespatchBooking.FlagColumn]));
                }
                set {
                    this[this.tableDespatchBooking.FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingPerMinute {
                get {
                    return ((float)(this[this.tableDespatchBooking.WaitingPerMinuteColumn]));
                }
                set {
                    this[this.tableDespatchBooking.WaitingPerMinuteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FixAmount {
                get {
                    return ((float)(this[this.tableDespatchBooking.FixAmountColumn]));
                }
                set {
                    this[this.tableDespatchBooking.FixAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RecordInsertTime {
                get {
                    return ((global::System.DateTime)(this[this.tableDespatchBooking.RecordInsertTimeColumn]));
                }
                set {
                    this[this.tableDespatchBooking.RecordInsertTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GCMFlag {
                get {
                    return ((bool)(this[this.tableDespatchBooking.GCMFlagColumn]));
                }
                set {
                    this[this.tableDespatchBooking.GCMFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int kangarooupdate {
                get {
                    return ((int)(this[this.tableDespatchBooking.kangarooupdateColumn]));
                }
                set {
                    this[this.tableDespatchBooking.kangarooupdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingTime {
                get {
                    return ((float)(this[this.tableDespatchBooking.WaitingTimeColumn]));
                }
                set {
                    this[this.tableDespatchBooking.WaitingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingCost {
                get {
                    return ((float)(this[this.tableDespatchBooking.WaitingCostColumn]));
                }
                set {
                    this[this.tableDespatchBooking.WaitingCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Rating {
                get {
                    return ((int)(this[this.tableDespatchBooking.RatingColumn]));
                }
                set {
                    this[this.tableDespatchBooking.RatingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DNo {
                get {
                    return ((string)(this[this.tableDespatchBooking.DNoColumn]));
                }
                set {
                    this[this.tableDespatchBooking.DNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DRating {
                get {
                    return ((double)(this[this.tableDespatchBooking.DRatingColumn]));
                }
                set {
                    this[this.tableDespatchBooking.DRatingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CabType {
                get {
                    return ((string)(this[this.tableDespatchBooking.CabTypeColumn]));
                }
                set {
                    this[this.tableDespatchBooking.CabTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BookingType {
                get {
                    return ((string)(this[this.tableDespatchBooking.BookingTypeColumn]));
                }
                set {
                    this[this.tableDespatchBooking.BookingTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeWaiting {
                get {
                    return ((int)(this[this.tableDespatchBooking.FreeWaitingColumn]));
                }
                set {
                    this[this.tableDespatchBooking.FreeWaitingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCode {
                get {
                    return ((string)(this[this.tableDespatchBooking.PCodeColumn]));
                }
                set {
                    this[this.tableDespatchBooking.PCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentType {
                get {
                    return ((string)(this[this.tableDespatchBooking.PaymentTypeColumn]));
                }
                set {
                    this[this.tableDespatchBooking.PaymentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DiscountAmount {
                get {
                    return ((double)(this[this.tableDespatchBooking.DiscountAmountColumn]));
                }
                set {
                    this[this.tableDespatchBooking.DiscountAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DRatinNew {
                get {
                    return ((double)(this[this.tableDespatchBooking.DRatinNewColumn]));
                }
                set {
                    this[this.tableDespatchBooking.DRatinNewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Paid {
                get {
                    return ((int)(this[this.tableDespatchBooking.PaidColumn]));
                }
                set {
                    this[this.tableDespatchBooking.PaidColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DespatchBookingStatusRow : global::System.Data.DataRow {
            
            private DespatchBookingStatusDataTable tableDespatchBookingStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DespatchBookingStatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDespatchBookingStatus = ((DespatchBookingStatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AutoNo {
                get {
                    return ((long)(this[this.tableDespatchBookingStatus.AutoNoColumn]));
                }
                set {
                    this[this.tableDespatchBookingStatus.AutoNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BookingID {
                get {
                    return ((long)(this[this.tableDespatchBookingStatus.BookingIDColumn]));
                }
                set {
                    this[this.tableDespatchBookingStatus.BookingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GCMId {
                get {
                    return ((string)(this[this.tableDespatchBookingStatus.GCMIdColumn]));
                }
                set {
                    this[this.tableDespatchBookingStatus.GCMIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte GCMCount {
                get {
                    return ((sbyte)(this[this.tableDespatchBookingStatus.GCMCountColumn]));
                }
                set {
                    this[this.tableDespatchBookingStatus.GCMCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime GCMSendTime {
                get {
                    return ((global::System.DateTime)(this[this.tableDespatchBookingStatus.GCMSendTimeColumn]));
                }
                set {
                    this[this.tableDespatchBookingStatus.GCMSendTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CabNo {
                get {
                    return ((string)(this[this.tableDespatchBookingStatus.CabNoColumn]));
                }
                set {
                    this[this.tableDespatchBookingStatus.CabNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Flag {
                get {
                    return ((bool)(this[this.tableDespatchBookingStatus.FlagColumn]));
                }
                set {
                    this[this.tableDespatchBookingStatus.FlagColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DisEngageBookingRow : global::System.Data.DataRow {
            
            private DisEngageBookingDataTable tableDisEngageBooking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DisEngageBookingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDisEngageBooking = ((DisEngageBookingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AutoID {
                get {
                    return ((int)(this[this.tableDisEngageBooking.AutoIDColumn]));
                }
                set {
                    this[this.tableDisEngageBooking.AutoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BookingID {
                get {
                    return ((long)(this[this.tableDisEngageBooking.BookingIDColumn]));
                }
                set {
                    this[this.tableDisEngageBooking.BookingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RefNo {
                get {
                    return ((string)(this[this.tableDisEngageBooking.RefNoColumn]));
                }
                set {
                    this[this.tableDisEngageBooking.RefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientMobile {
                get {
                    return ((string)(this[this.tableDisEngageBooking.ClientMobileColumn]));
                }
                set {
                    this[this.tableDisEngageBooking.ClientMobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientName {
                get {
                    return ((string)(this[this.tableDisEngageBooking.ClientNameColumn]));
                }
                set {
                    this[this.tableDisEngageBooking.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DisTime {
                get {
                    return ((global::System.DateTime)(this[this.tableDisEngageBooking.DisTimeColumn]));
                }
                set {
                    this[this.tableDisEngageBooking.DisTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CabNo {
                get {
                    return ((string)(this[this.tableDisEngageBooking.CabNoColumn]));
                }
                set {
                    this[this.tableDisEngageBooking.CabNoColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class driver_log_onoffRow : global::System.Data.DataRow {
            
            private driver_log_onoffDataTable tabledriver_log_onoff;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal driver_log_onoffRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledriver_log_onoff = ((driver_log_onoffDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tabledriver_log_onoff.idColumn]));
                }
                set {
                    this[this.tabledriver_log_onoff.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string imei {
                get {
                    return ((string)(this[this.tabledriver_log_onoff.imeiColumn]));
                }
                set {
                    this[this.tabledriver_log_onoff.imeiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string driver_id {
                get {
                    return ((string)(this[this.tabledriver_log_onoff.driver_idColumn]));
                }
                set {
                    this[this.tabledriver_log_onoff.driver_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int vehicle_id {
                get {
                    return ((int)(this[this.tabledriver_log_onoff.vehicle_idColumn]));
                }
                set {
                    this[this.tabledriver_log_onoff.vehicle_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime login_time {
                get {
                    return ((global::System.DateTime)(this[this.tabledriver_log_onoff.login_timeColumn]));
                }
                set {
                    this[this.tabledriver_log_onoff.login_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string login_location {
                get {
                    return ((string)(this[this.tabledriver_log_onoff.login_locationColumn]));
                }
                set {
                    this[this.tabledriver_log_onoff.login_locationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime insert_time {
                get {
                    return ((global::System.DateTime)(this[this.tabledriver_log_onoff.insert_timeColumn]));
                }
                set {
                    this[this.tabledriver_log_onoff.insert_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime logoff_time {
                get {
                    return ((global::System.DateTime)(this[this.tabledriver_log_onoff.logoff_timeColumn]));
                }
                set {
                    this[this.tabledriver_log_onoff.logoff_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string logoff_location {
                get {
                    return ((string)(this[this.tabledriver_log_onoff.logoff_locationColumn]));
                }
                set {
                    this[this.tabledriver_log_onoff.logoff_locationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime update_time {
                get {
                    return ((global::System.DateTime)(this[this.tabledriver_log_onoff.update_timeColumn]));
                }
                set {
                    this[this.tabledriver_log_onoff.update_timeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class driver_mobile_registrationRow : global::System.Data.DataRow {
            
            private driver_mobile_registrationDataTable tabledriver_mobile_registration;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal driver_mobile_registrationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledriver_mobile_registration = ((driver_mobile_registrationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tabledriver_mobile_registration.idColumn]));
                }
                set {
                    this[this.tabledriver_mobile_registration.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string mobile_no {
                get {
                    return ((string)(this[this.tabledriver_mobile_registration.mobile_noColumn]));
                }
                set {
                    this[this.tabledriver_mobile_registration.mobile_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string imei_no {
                get {
                    return ((string)(this[this.tabledriver_mobile_registration.imei_noColumn]));
                }
                set {
                    this[this.tabledriver_mobile_registration.imei_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string vehicle_id {
                get {
                    return ((string)(this[this.tabledriver_mobile_registration.vehicle_idColumn]));
                }
                set {
                    this[this.tabledriver_mobile_registration.vehicle_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string driver_app_id {
                get {
                    return ((string)(this[this.tabledriver_mobile_registration.driver_app_idColumn]));
                }
                set {
                    this[this.tabledriver_mobile_registration.driver_app_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime send_time {
                get {
                    return ((global::System.DateTime)(this[this.tabledriver_mobile_registration.send_timeColumn]));
                }
                set {
                    this[this.tabledriver_mobile_registration.send_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime addeddate {
                get {
                    return ((global::System.DateTime)(this[this.tabledriver_mobile_registration.addeddateColumn]));
                }
                set {
                    this[this.tabledriver_mobile_registration.addeddateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime updateddate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledriver_mobile_registration.updateddateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'updateddate\' in table \'driver_mobile_registration\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledriver_mobile_registration.updateddateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int deleted {
                get {
                    try {
                        return ((int)(this[this.tabledriver_mobile_registration.deletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deleted\' in table \'driver_mobile_registration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledriver_mobile_registration.deletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime deleteddate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledriver_mobile_registration.deleteddateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deleteddate\' in table \'driver_mobile_registration\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledriver_mobile_registration.deleteddateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int sync {
                get {
                    try {
                        return ((int)(this[this.tabledriver_mobile_registration.syncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sync\' in table \'driver_mobile_registration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledriver_mobile_registration.syncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime syncdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledriver_mobile_registration.syncdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'syncdate\' in table \'driver_mobile_registration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledriver_mobile_registration.syncdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int taxi_type_id {
                get {
                    return ((int)(this[this.tabledriver_mobile_registration.taxi_type_idColumn]));
                }
                set {
                    this[this.tabledriver_mobile_registration.taxi_type_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int status_id {
                get {
                    return ((int)(this[this.tabledriver_mobile_registration.status_idColumn]));
                }
                set {
                    this[this.tabledriver_mobile_registration.status_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int pulse {
                get {
                    return ((int)(this[this.tabledriver_mobile_registration.pulseColumn]));
                }
                set {
                    this[this.tabledriver_mobile_registration.pulseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxiType {
                get {
                    return ((string)(this[this.tabledriver_mobile_registration.TaxiTypeColumn]));
                }
                set {
                    this[this.tabledriver_mobile_registration.TaxiTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BluetoothSerial {
                get {
                    return ((string)(this[this.tabledriver_mobile_registration.BluetoothSerialColumn]));
                }
                set {
                    this[this.tabledriver_mobile_registration.BluetoothSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int vcode {
                get {
                    return ((int)(this[this.tabledriver_mobile_registration.vcodeColumn]));
                }
                set {
                    this[this.tabledriver_mobile_registration.vcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string vname {
                get {
                    return ((string)(this[this.tabledriver_mobile_registration.vnameColumn]));
                }
                set {
                    this[this.tabledriver_mobile_registration.vnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsupdateddateNull() {
                return this.IsNull(this.tabledriver_mobile_registration.updateddateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetupdateddateNull() {
                this[this.tabledriver_mobile_registration.updateddateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdeletedNull() {
                return this.IsNull(this.tabledriver_mobile_registration.deletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdeletedNull() {
                this[this.tabledriver_mobile_registration.deletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdeleteddateNull() {
                return this.IsNull(this.tabledriver_mobile_registration.deleteddateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdeleteddateNull() {
                this[this.tabledriver_mobile_registration.deleteddateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssyncNull() {
                return this.IsNull(this.tabledriver_mobile_registration.syncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsyncNull() {
                this[this.tabledriver_mobile_registration.syncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssyncdateNull() {
                return this.IsNull(this.tabledriver_mobile_registration.syncdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsyncdateNull() {
                this[this.tabledriver_mobile_registration.syncdateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class driver_status_identifierRow : global::System.Data.DataRow {
            
            private driver_status_identifierDataTable tabledriver_status_identifier;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal driver_status_identifierRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledriver_status_identifier = ((driver_status_identifierDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tabledriver_status_identifier.idColumn]));
                }
                set {
                    this[this.tabledriver_status_identifier.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string tracker_name {
                get {
                    try {
                        return ((string)(this[this.tabledriver_status_identifier.tracker_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tracker_name\' in table \'driver_status_identifier\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.tracker_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string driver_id {
                get {
                    try {
                        return ((string)(this[this.tabledriver_status_identifier.driver_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'driver_id\' in table \'driver_status_identifier\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.driver_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string vehicle_id {
                get {
                    try {
                        return ((string)(this[this.tabledriver_status_identifier.vehicle_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vehicle_id\' in table \'driver_status_identifier\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.vehicle_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string driver_app_id {
                get {
                    try {
                        return ((string)(this[this.tabledriver_status_identifier.driver_app_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'driver_app_id\' in table \'driver_status_identifier\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.driver_app_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int m_1_send {
                get {
                    try {
                        return ((int)(this[this.tabledriver_status_identifier.m_1_sendColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'m_1_send\' in table \'driver_status_identifier\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.m_1_sendColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime m_1_send_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledriver_status_identifier.m_1_send_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'m_1_send_time\' in table \'driver_status_identifier\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.m_1_send_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string m_1_send_time_geo {
                get {
                    try {
                        return ((string)(this[this.tabledriver_status_identifier.m_1_send_time_geoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'m_1_send_time_geo\' in table \'driver_status_identifier\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.m_1_send_time_geoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int m_1_respond {
                get {
                    try {
                        return ((int)(this[this.tabledriver_status_identifier.m_1_respondColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'m_1_respond\' in table \'driver_status_identifier\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.m_1_respondColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime m_1_respond_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledriver_status_identifier.m_1_respond_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'m_1_respond_time\' in table \'driver_status_identifier\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.m_1_respond_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string m_1_respond_time_geo {
                get {
                    try {
                        return ((string)(this[this.tabledriver_status_identifier.m_1_respond_time_geoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'m_1_respond_time_geo\' in table \'driver_status_identifier\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.m_1_respond_time_geoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime m_1_respond_send_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledriver_status_identifier.m_1_respond_send_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'m_1_respond_send_time\' in table \'driver_status_identifier\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.m_1_respond_send_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double free_to_distance {
                get {
                    try {
                        return ((double)(this[this.tabledriver_status_identifier.free_to_distanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'free_to_distance\' in table \'driver_status_identifier\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.free_to_distanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime addeddate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledriver_status_identifier.addeddateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'addeddate\' in table \'driver_status_identifier\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.addeddateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime updateddate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledriver_status_identifier.updateddateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'updateddate\' in table \'driver_status_identifier\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.updateddateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int deleted {
                get {
                    try {
                        return ((int)(this[this.tabledriver_status_identifier.deletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deleted\' in table \'driver_status_identifier\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.deletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime deleteddate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledriver_status_identifier.deleteddateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deleteddate\' in table \'driver_status_identifier\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.deleteddateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int sync {
                get {
                    try {
                        return ((int)(this[this.tabledriver_status_identifier.syncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sync\' in table \'driver_status_identifier\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.syncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime syncdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledriver_status_identifier.syncdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'syncdate\' in table \'driver_status_identifier\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.syncdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int status_id {
                get {
                    try {
                        return ((int)(this[this.tabledriver_status_identifier.status_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status_id\' in table \'driver_status_identifier\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledriver_status_identifier.status_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CurrentJobID {
                get {
                    return ((long)(this[this.tabledriver_status_identifier.CurrentJobIDColumn]));
                }
                set {
                    this[this.tabledriver_status_identifier.CurrentJobIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Istracker_nameNull() {
                return this.IsNull(this.tabledriver_status_identifier.tracker_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settracker_nameNull() {
                this[this.tabledriver_status_identifier.tracker_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdriver_idNull() {
                return this.IsNull(this.tabledriver_status_identifier.driver_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdriver_idNull() {
                this[this.tabledriver_status_identifier.driver_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isvehicle_idNull() {
                return this.IsNull(this.tabledriver_status_identifier.vehicle_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setvehicle_idNull() {
                this[this.tabledriver_status_identifier.vehicle_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdriver_app_idNull() {
                return this.IsNull(this.tabledriver_status_identifier.driver_app_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdriver_app_idNull() {
                this[this.tabledriver_status_identifier.driver_app_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ism_1_sendNull() {
                return this.IsNull(this.tabledriver_status_identifier.m_1_sendColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setm_1_sendNull() {
                this[this.tabledriver_status_identifier.m_1_sendColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ism_1_send_timeNull() {
                return this.IsNull(this.tabledriver_status_identifier.m_1_send_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setm_1_send_timeNull() {
                this[this.tabledriver_status_identifier.m_1_send_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ism_1_send_time_geoNull() {
                return this.IsNull(this.tabledriver_status_identifier.m_1_send_time_geoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setm_1_send_time_geoNull() {
                this[this.tabledriver_status_identifier.m_1_send_time_geoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ism_1_respondNull() {
                return this.IsNull(this.tabledriver_status_identifier.m_1_respondColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setm_1_respondNull() {
                this[this.tabledriver_status_identifier.m_1_respondColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ism_1_respond_timeNull() {
                return this.IsNull(this.tabledriver_status_identifier.m_1_respond_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setm_1_respond_timeNull() {
                this[this.tabledriver_status_identifier.m_1_respond_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ism_1_respond_time_geoNull() {
                return this.IsNull(this.tabledriver_status_identifier.m_1_respond_time_geoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setm_1_respond_time_geoNull() {
                this[this.tabledriver_status_identifier.m_1_respond_time_geoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ism_1_respond_send_timeNull() {
                return this.IsNull(this.tabledriver_status_identifier.m_1_respond_send_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setm_1_respond_send_timeNull() {
                this[this.tabledriver_status_identifier.m_1_respond_send_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isfree_to_distanceNull() {
                return this.IsNull(this.tabledriver_status_identifier.free_to_distanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setfree_to_distanceNull() {
                this[this.tabledriver_status_identifier.free_to_distanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsaddeddateNull() {
                return this.IsNull(this.tabledriver_status_identifier.addeddateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetaddeddateNull() {
                this[this.tabledriver_status_identifier.addeddateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsupdateddateNull() {
                return this.IsNull(this.tabledriver_status_identifier.updateddateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetupdateddateNull() {
                this[this.tabledriver_status_identifier.updateddateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdeletedNull() {
                return this.IsNull(this.tabledriver_status_identifier.deletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdeletedNull() {
                this[this.tabledriver_status_identifier.deletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdeleteddateNull() {
                return this.IsNull(this.tabledriver_status_identifier.deleteddateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdeleteddateNull() {
                this[this.tabledriver_status_identifier.deleteddateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssyncNull() {
                return this.IsNull(this.tabledriver_status_identifier.syncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsyncNull() {
                this[this.tabledriver_status_identifier.syncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssyncdateNull() {
                return this.IsNull(this.tabledriver_status_identifier.syncdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsyncdateNull() {
                this[this.tabledriver_status_identifier.syncdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isstatus_idNull() {
                return this.IsNull(this.tabledriver_status_identifier.status_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setstatus_idNull() {
                this[this.tabledriver_status_identifier.status_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DriverStatusRow : global::System.Data.DataRow {
            
            private DriverStatusDataTable tableDriverStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DriverStatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDriverStatus = ((DriverStatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableDriverStatus.IDColumn]));
                }
                set {
                    this[this.tableDriverStatus.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableDriverStatus.DescriptionColumn]));
                }
                set {
                    this[this.tableDriverStatus.DescriptionColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EMAILRow : global::System.Data.DataRow {
            
            private EMAILDataTable tableEMAIL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EMAILRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEMAIL = ((EMAILDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AutoID {
                get {
                    return ((int)(this[this.tableEMAIL.AutoIDColumn]));
                }
                set {
                    this[this.tableEMAIL.AutoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string clientmobile {
                get {
                    return ((string)(this[this.tableEMAIL.clientmobileColumn]));
                }
                set {
                    this[this.tableEMAIL.clientmobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long bookingid {
                get {
                    return ((long)(this[this.tableEMAIL.bookingidColumn]));
                }
                set {
                    this[this.tableEMAIL.bookingidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RecordInsertTime {
                get {
                    return ((global::System.DateTime)(this[this.tableEMAIL.RecordInsertTimeColumn]));
                }
                set {
                    this[this.tableEMAIL.RecordInsertTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime sendtime {
                get {
                    return ((global::System.DateTime)(this[this.tableEMAIL.sendtimeColumn]));
                }
                set {
                    this[this.tableEMAIL.sendtimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sendflag {
                get {
                    return ((string)(this[this.tableEMAIL.sendflagColumn]));
                }
                set {
                    this[this.tableEMAIL.sendflagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string respond {
                get {
                    return ((string)(this[this.tableEMAIL.respondColumn]));
                }
                set {
                    this[this.tableEMAIL.respondColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class fleet_monitorRow : global::System.Data.DataRow {
            
            private fleet_monitorDataTable tablefleet_monitor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fleet_monitorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefleet_monitor = ((fleet_monitorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablefleet_monitor.idColumn]));
                }
                set {
                    this[this.tablefleet_monitor.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string imei {
                get {
                    return ((string)(this[this.tablefleet_monitor.imeiColumn]));
                }
                set {
                    this[this.tablefleet_monitor.imeiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string driver_id {
                get {
                    return ((string)(this[this.tablefleet_monitor.driver_idColumn]));
                }
                set {
                    this[this.tablefleet_monitor.driver_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string taxi_id {
                get {
                    return ((string)(this[this.tablefleet_monitor.taxi_idColumn]));
                }
                set {
                    this[this.tablefleet_monitor.taxi_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long booking_id {
                get {
                    return ((long)(this[this.tablefleet_monitor.booking_idColumn]));
                }
                set {
                    this[this.tablefleet_monitor.booking_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int driver_status_id {
                get {
                    return ((int)(this[this.tablefleet_monitor.driver_status_idColumn]));
                }
                set {
                    this[this.tablefleet_monitor.driver_status_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int taxi_moving_status_id {
                get {
                    return ((int)(this[this.tablefleet_monitor.taxi_moving_status_idColumn]));
                }
                set {
                    this[this.tablefleet_monitor.taxi_moving_status_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int booking_status_id {
                get {
                    return ((int)(this[this.tablefleet_monitor.booking_status_idColumn]));
                }
                set {
                    this[this.tablefleet_monitor.booking_status_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double mobile_battery {
                get {
                    return ((double)(this[this.tablefleet_monitor.mobile_batteryColumn]));
                }
                set {
                    this[this.tablefleet_monitor.mobile_batteryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int taxi_meter_status_id {
                get {
                    return ((int)(this[this.tablefleet_monitor.taxi_meter_status_idColumn]));
                }
                set {
                    this[this.tablefleet_monitor.taxi_meter_status_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double time_waiting {
                get {
                    return ((double)(this[this.tablefleet_monitor.time_waitingColumn]));
                }
                set {
                    this[this.tablefleet_monitor.time_waitingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double income {
                get {
                    return ((double)(this[this.tablefleet_monitor.incomeColumn]));
                }
                set {
                    this[this.tablefleet_monitor.incomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime updated_time {
                get {
                    return ((global::System.DateTime)(this[this.tablefleet_monitor.updated_timeColumn]));
                }
                set {
                    this[this.tablefleet_monitor.updated_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string last_location {
                get {
                    try {
                        return ((string)(this[this.tablefleet_monitor.last_locationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'last_location\' in table \'fleet_monitor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefleet_monitor.last_locationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FreeTime {
                get {
                    return ((global::System.DateTime)(this[this.tablefleet_monitor.FreeTimeColumn]));
                }
                set {
                    this[this.tablefleet_monitor.FreeTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastLogin {
                get {
                    return ((global::System.DateTime)(this[this.tablefleet_monitor.LastLoginColumn]));
                }
                set {
                    this[this.tablefleet_monitor.LastLoginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastGPSUpdate {
                get {
                    return ((global::System.DateTime)(this[this.tablefleet_monitor.LastGPSUpdateColumn]));
                }
                set {
                    this[this.tablefleet_monitor.LastGPSUpdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VSpeed {
                get {
                    return ((double)(this[this.tablefleet_monitor.VSpeedColumn]));
                }
                set {
                    this[this.tablefleet_monitor.VSpeedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double nLAT {
                get {
                    return ((double)(this[this.tablefleet_monitor.nLATColumn]));
                }
                set {
                    this[this.tablefleet_monitor.nLATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double nLON {
                get {
                    return ((double)(this[this.tablefleet_monitor.nLONColumn]));
                }
                set {
                    this[this.tablefleet_monitor.nLONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime NonAcceptTime {
                get {
                    return ((global::System.DateTime)(this[this.tablefleet_monitor.NonAcceptTimeColumn]));
                }
                set {
                    this[this.tablefleet_monitor.NonAcceptTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NonAcceptCount {
                get {
                    return ((int)(this[this.tablefleet_monitor.NonAcceptCountColumn]));
                }
                set {
                    this[this.tablefleet_monitor.NonAcceptCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxiType {
                get {
                    return ((string)(this[this.tablefleet_monitor.TaxiTypeColumn]));
                }
                set {
                    this[this.tablefleet_monitor.TaxiTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Islast_locationNull() {
                return this.IsNull(this.tablefleet_monitor.last_locationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setlast_locationNull() {
                this[this.tablefleet_monitor.last_locationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GpsFailRow : global::System.Data.DataRow {
            
            private GpsFailDataTable tableGpsFail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GpsFailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGpsFail = ((GpsFailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AutoID {
                get {
                    return ((int)(this[this.tableGpsFail.AutoIDColumn]));
                }
                set {
                    this[this.tableGpsFail.AutoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CabNo {
                get {
                    return ((string)(this[this.tableGpsFail.CabNoColumn]));
                }
                set {
                    this[this.tableGpsFail.CabNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FailTime {
                get {
                    return ((global::System.DateTime)(this[this.tableGpsFail.FailTimeColumn]));
                }
                set {
                    this[this.tableGpsFail.FailTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Event {
                get {
                    return ((string)(this[this.tableGpsFail.EventColumn]));
                }
                set {
                    this[this.tableGpsFail.EventColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GPSMStatRow : global::System.Data.DataRow {
            
            private GPSMStatDataTable tableGPSMStat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GPSMStatRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGPSMStat = ((GPSMStatDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int S1Value {
                get {
                    return ((int)(this[this.tableGPSMStat.S1ValueColumn]));
                }
                set {
                    this[this.tableGPSMStat.S1ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double S1Correction {
                get {
                    return ((double)(this[this.tableGPSMStat.S1CorrectionColumn]));
                }
                set {
                    this[this.tableGPSMStat.S1CorrectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int S2Value {
                get {
                    return ((int)(this[this.tableGPSMStat.S2ValueColumn]));
                }
                set {
                    this[this.tableGPSMStat.S2ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double S2Correction {
                get {
                    return ((double)(this[this.tableGPSMStat.S2CorrectionColumn]));
                }
                set {
                    this[this.tableGPSMStat.S2CorrectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int D1Value {
                get {
                    return ((int)(this[this.tableGPSMStat.D1ValueColumn]));
                }
                set {
                    this[this.tableGPSMStat.D1ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double D1Correction {
                get {
                    return ((double)(this[this.tableGPSMStat.D1CorrectionColumn]));
                }
                set {
                    this[this.tableGPSMStat.D1CorrectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int D2Value {
                get {
                    return ((int)(this[this.tableGPSMStat.D2ValueColumn]));
                }
                set {
                    this[this.tableGPSMStat.D2ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double D2Correction {
                get {
                    return ((double)(this[this.tableGPSMStat.D2CorrectionColumn]));
                }
                set {
                    this[this.tableGPSMStat.D2CorrectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int D3Value {
                get {
                    return ((int)(this[this.tableGPSMStat.D3ValueColumn]));
                }
                set {
                    this[this.tableGPSMStat.D3ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double D3Correction {
                get {
                    return ((double)(this[this.tableGPSMStat.D3CorrectionColumn]));
                }
                set {
                    this[this.tableGPSMStat.D3CorrectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int D0Value {
                get {
                    return ((int)(this[this.tableGPSMStat.D0ValueColumn]));
                }
                set {
                    this[this.tableGPSMStat.D0ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double D0Correction {
                get {
                    return ((double)(this[this.tableGPSMStat.D0CorrectionColumn]));
                }
                set {
                    this[this.tableGPSMStat.D0CorrectionColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class log_dataRow : global::System.Data.DataRow {
            
            private log_dataDataTable tablelog_data;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal log_dataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelog_data = ((log_dataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablelog_data.idColumn]));
                }
                set {
                    this[this.tablelog_data.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string service_name {
                get {
                    return ((string)(this[this.tablelog_data.service_nameColumn]));
                }
                set {
                    this[this.tablelog_data.service_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string log {
                get {
                    return ((string)(this[this.tablelog_data.logColumn]));
                }
                set {
                    this[this.tablelog_data.logColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime addeddate {
                get {
                    return ((global::System.DateTime)(this[this.tablelog_data.addeddateColumn]));
                }
                set {
                    this[this.tablelog_data.addeddateColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LogOffRow : global::System.Data.DataRow {
            
            private LogOffDataTable tableLogOff;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LogOffRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLogOff = ((LogOffDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CabNo {
                get {
                    return ((string)(this[this.tableLogOff.CabNoColumn]));
                }
                set {
                    this[this.tableLogOff.CabNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AcDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableLogOff.AcDateTimeColumn]));
                }
                set {
                    this[this.tableLogOff.AcDateTimeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LogSheetRow : global::System.Data.DataRow {
            
            private LogSheetDataTable tableLogSheet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LogSheetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLogSheet = ((LogSheetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AutoNo {
                get {
                    return ((long)(this[this.tableLogSheet.AutoNoColumn]));
                }
                set {
                    this[this.tableLogSheet.AutoNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VehiclID {
                get {
                    return ((string)(this[this.tableLogSheet.VehiclIDColumn]));
                }
                set {
                    this[this.tableLogSheet.VehiclIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DriverID {
                get {
                    return ((string)(this[this.tableLogSheet.DriverIDColumn]));
                }
                set {
                    this[this.tableLogSheet.DriverIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BookingID {
                get {
                    return ((long)(this[this.tableLogSheet.BookingIDColumn]));
                }
                set {
                    this[this.tableLogSheet.BookingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MeterONTime {
                get {
                    return ((global::System.DateTime)(this[this.tableLogSheet.MeterONTimeColumn]));
                }
                set {
                    this[this.tableLogSheet.MeterONTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MeterOnLocationLAT {
                get {
                    return ((double)(this[this.tableLogSheet.MeterOnLocationLATColumn]));
                }
                set {
                    this[this.tableLogSheet.MeterOnLocationLATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MeterOnLoationLON {
                get {
                    return ((double)(this[this.tableLogSheet.MeterOnLoationLONColumn]));
                }
                set {
                    this[this.tableLogSheet.MeterOnLoationLONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MeterOFFTime {
                get {
                    return ((global::System.DateTime)(this[this.tableLogSheet.MeterOFFTimeColumn]));
                }
                set {
                    this[this.tableLogSheet.MeterOFFTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MeterOFFLocationLAT {
                get {
                    return ((double)(this[this.tableLogSheet.MeterOFFLocationLATColumn]));
                }
                set {
                    this[this.tableLogSheet.MeterOFFLocationLATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MeterOFFLocationLON {
                get {
                    return ((double)(this[this.tableLogSheet.MeterOFFLocationLONColumn]));
                }
                set {
                    this[this.tableLogSheet.MeterOFFLocationLONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RunningKM {
                get {
                    return ((double)(this[this.tableLogSheet.RunningKMColumn]));
                }
                set {
                    this[this.tableLogSheet.RunningKMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Amount {
                get {
                    return ((double)(this[this.tableLogSheet.AmountColumn]));
                }
                set {
                    this[this.tableLogSheet.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingTime {
                get {
                    return ((float)(this[this.tableLogSheet.WaitingTimeColumn]));
                }
                set {
                    this[this.tableLogSheet.WaitingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingCost {
                get {
                    return ((float)(this[this.tableLogSheet.WaitingCostColumn]));
                }
                set {
                    this[this.tableLogSheet.WaitingCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentType {
                get {
                    return ((string)(this[this.tableLogSheet.PaymentTypeColumn]));
                }
                set {
                    this[this.tableLogSheet.PaymentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentRecive {
                get {
                    return ((string)(this[this.tableLogSheet.PaymentReciveColumn]));
                }
                set {
                    this[this.tableLogSheet.PaymentReciveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalAmount {
                get {
                    return ((double)(this[this.tableLogSheet.TotalAmountColumn]));
                }
                set {
                    this[this.tableLogSheet.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VoucherNo {
                get {
                    return ((string)(this[this.tableLogSheet.VoucherNoColumn]));
                }
                set {
                    this[this.tableLogSheet.VoucherNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MType {
                get {
                    return ((string)(this[this.tableLogSheet.MTypeColumn]));
                }
                set {
                    this[this.tableLogSheet.MTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DiscountAmount {
                get {
                    return ((double)(this[this.tableLogSheet.DiscountAmountColumn]));
                }
                set {
                    this[this.tableLogSheet.DiscountAmountColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class NonAcceptBookingRow : global::System.Data.DataRow {
            
            private NonAcceptBookingDataTable tableNonAcceptBooking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NonAcceptBookingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNonAcceptBooking = ((NonAcceptBookingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AutoID {
                get {
                    return ((long)(this[this.tableNonAcceptBooking.AutoIDColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.AutoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BookingID {
                get {
                    return ((long)(this[this.tableNonAcceptBooking.BookingIDColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.BookingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BookingStatus {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.BookingStatusColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.BookingStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RefNo {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.RefNoColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.RefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImiNo {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.ImiNoColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.ImiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CabNo {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.CabNoColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.CabNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientMobile {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.ClientMobileColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.ClientMobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientName {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.ClientNameColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientAddress {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.ClientAddressColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.ClientAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LandMark {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.LandMarkColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.LandMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.RemarkColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RQTime {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.RQTimeColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.RQTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LAT {
                get {
                    return ((double)(this[this.tableNonAcceptBooking.LATColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.LATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LON {
                get {
                    return ((double)(this[this.tableNonAcceptBooking.LONColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.LONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AcceptTime {
                get {
                    return ((global::System.DateTime)(this[this.tableNonAcceptBooking.AcceptTimeColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.AcceptTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AtThePlaceTime {
                get {
                    return ((global::System.DateTime)(this[this.tableNonAcceptBooking.AtThePlaceTimeColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.AtThePlaceTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MeterOnTime {
                get {
                    return ((global::System.DateTime)(this[this.tableNonAcceptBooking.MeterOnTimeColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.MeterOnTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MeterOffTime {
                get {
                    return ((global::System.DateTime)(this[this.tableNonAcceptBooking.MeterOffTimeColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.MeterOffTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float MeterOffLAT {
                get {
                    return ((float)(this[this.tableNonAcceptBooking.MeterOffLATColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.MeterOffLATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float MeterOffLON {
                get {
                    return ((float)(this[this.tableNonAcceptBooking.MeterOffLONColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.MeterOffLONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MeterOffAddress {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.MeterOffAddressColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.MeterOffAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RunningKM {
                get {
                    return ((double)(this[this.tableNonAcceptBooking.RunningKMColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.RunningKMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Amount {
                get {
                    return ((double)(this[this.tableNonAcceptBooking.AmountColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double InitialKm {
                get {
                    return ((double)(this[this.tableNonAcceptBooking.InitialKmColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.InitialKmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PerKMCharge {
                get {
                    return ((double)(this[this.tableNonAcceptBooking.PerKMChargeColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.PerKMChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Flag {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.FlagColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingPerMinute {
                get {
                    return ((float)(this[this.tableNonAcceptBooking.WaitingPerMinuteColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.WaitingPerMinuteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FixAmount {
                get {
                    return ((float)(this[this.tableNonAcceptBooking.FixAmountColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.FixAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RecordInsertTime {
                get {
                    return ((global::System.DateTime)(this[this.tableNonAcceptBooking.RecordInsertTimeColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.RecordInsertTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GCMFlag {
                get {
                    return ((bool)(this[this.tableNonAcceptBooking.GCMFlagColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.GCMFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int kangarooupdate {
                get {
                    return ((int)(this[this.tableNonAcceptBooking.kangarooupdateColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.kangarooupdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingTime {
                get {
                    return ((float)(this[this.tableNonAcceptBooking.WaitingTimeColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.WaitingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingCost {
                get {
                    return ((float)(this[this.tableNonAcceptBooking.WaitingCostColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.WaitingCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Rating {
                get {
                    return ((int)(this[this.tableNonAcceptBooking.RatingColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.RatingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DNo {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.DNoColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.DNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DRating {
                get {
                    return ((double)(this[this.tableNonAcceptBooking.DRatingColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.DRatingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CabType {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.CabTypeColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.CabTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeWaiting {
                get {
                    return ((int)(this[this.tableNonAcceptBooking.FreeWaitingColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.FreeWaitingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BookingType {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.BookingTypeColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.BookingTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCode {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.PCodeColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.PCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentType {
                get {
                    return ((string)(this[this.tableNonAcceptBooking.PaymentTypeColumn]));
                }
                set {
                    this[this.tableNonAcceptBooking.PaymentTypeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class NonAcceptDespatchBookingRow : global::System.Data.DataRow {
            
            private NonAcceptDespatchBookingDataTable tableNonAcceptDespatchBooking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NonAcceptDespatchBookingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNonAcceptDespatchBooking = ((NonAcceptDespatchBookingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AutoID {
                get {
                    return ((long)(this[this.tableNonAcceptDespatchBooking.AutoIDColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.AutoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BookingID {
                get {
                    return ((long)(this[this.tableNonAcceptDespatchBooking.BookingIDColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.BookingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BookingStatus {
                get {
                    return ((string)(this[this.tableNonAcceptDespatchBooking.BookingStatusColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.BookingStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RefNo {
                get {
                    return ((string)(this[this.tableNonAcceptDespatchBooking.RefNoColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.RefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImiNo {
                get {
                    return ((string)(this[this.tableNonAcceptDespatchBooking.ImiNoColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.ImiNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CabNo {
                get {
                    return ((string)(this[this.tableNonAcceptDespatchBooking.CabNoColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.CabNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientMobile {
                get {
                    return ((string)(this[this.tableNonAcceptDespatchBooking.ClientMobileColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.ClientMobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientName {
                get {
                    return ((string)(this[this.tableNonAcceptDespatchBooking.ClientNameColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientAddress {
                get {
                    return ((string)(this[this.tableNonAcceptDespatchBooking.ClientAddressColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.ClientAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LandMark {
                get {
                    return ((string)(this[this.tableNonAcceptDespatchBooking.LandMarkColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.LandMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    return ((string)(this[this.tableNonAcceptDespatchBooking.RemarkColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RQTime {
                get {
                    return ((string)(this[this.tableNonAcceptDespatchBooking.RQTimeColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.RQTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LAT {
                get {
                    return ((double)(this[this.tableNonAcceptDespatchBooking.LATColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.LATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LON {
                get {
                    return ((double)(this[this.tableNonAcceptDespatchBooking.LONColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.LONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AcceptTime {
                get {
                    return ((global::System.DateTime)(this[this.tableNonAcceptDespatchBooking.AcceptTimeColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.AcceptTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AtThePlaceTime {
                get {
                    return ((global::System.DateTime)(this[this.tableNonAcceptDespatchBooking.AtThePlaceTimeColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.AtThePlaceTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MeterOnTime {
                get {
                    return ((global::System.DateTime)(this[this.tableNonAcceptDespatchBooking.MeterOnTimeColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.MeterOnTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MeterOffTime {
                get {
                    return ((global::System.DateTime)(this[this.tableNonAcceptDespatchBooking.MeterOffTimeColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.MeterOffTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float MeterOffLAT {
                get {
                    return ((float)(this[this.tableNonAcceptDespatchBooking.MeterOffLATColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.MeterOffLATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float MeterOffLON {
                get {
                    return ((float)(this[this.tableNonAcceptDespatchBooking.MeterOffLONColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.MeterOffLONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MeterOffAddress {
                get {
                    return ((string)(this[this.tableNonAcceptDespatchBooking.MeterOffAddressColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.MeterOffAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RunningKM {
                get {
                    return ((double)(this[this.tableNonAcceptDespatchBooking.RunningKMColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.RunningKMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Amount {
                get {
                    return ((double)(this[this.tableNonAcceptDespatchBooking.AmountColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double InitialKm {
                get {
                    return ((double)(this[this.tableNonAcceptDespatchBooking.InitialKmColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.InitialKmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PerKMCharge {
                get {
                    return ((double)(this[this.tableNonAcceptDespatchBooking.PerKMChargeColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.PerKMChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Flag {
                get {
                    return ((string)(this[this.tableNonAcceptDespatchBooking.FlagColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingPerMinute {
                get {
                    return ((float)(this[this.tableNonAcceptDespatchBooking.WaitingPerMinuteColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.WaitingPerMinuteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FixAmount {
                get {
                    return ((float)(this[this.tableNonAcceptDespatchBooking.FixAmountColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.FixAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RecordInsertTime {
                get {
                    return ((global::System.DateTime)(this[this.tableNonAcceptDespatchBooking.RecordInsertTimeColumn]));
                }
                set {
                    this[this.tableNonAcceptDespatchBooking.RecordInsertTimeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class NonDespatchBookingsRow : global::System.Data.DataRow {
            
            private NonDespatchBookingsDataTable tableNonDespatchBookings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NonDespatchBookingsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNonDespatchBookings = ((NonDespatchBookingsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AutoID {
                get {
                    return ((long)(this[this.tableNonDespatchBookings.AutoIDColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.AutoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BookingID {
                get {
                    return ((long)(this[this.tableNonDespatchBookings.BookingIDColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.BookingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RefNo {
                get {
                    return ((string)(this[this.tableNonDespatchBookings.RefNoColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.RefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientMobile {
                get {
                    return ((string)(this[this.tableNonDespatchBookings.ClientMobileColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.ClientMobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Title {
                get {
                    return ((string)(this[this.tableNonDespatchBookings.TitleColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientName {
                get {
                    return ((string)(this[this.tableNonDespatchBookings.ClientNameColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientAddress {
                get {
                    return ((string)(this[this.tableNonDespatchBookings.ClientAddressColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.ClientAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RQDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableNonDespatchBookings.RQDateTimeColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.RQDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RQTime {
                get {
                    return ((string)(this[this.tableNonDespatchBookings.RQTimeColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.RQTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LAT {
                get {
                    return ((double)(this[this.tableNonDespatchBookings.LATColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.LATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LON {
                get {
                    return ((double)(this[this.tableNonDespatchBookings.LONColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.LONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Flag {
                get {
                    return ((string)(this[this.tableNonDespatchBookings.FlagColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RecordInsertTime {
                get {
                    return ((global::System.DateTime)(this[this.tableNonDespatchBookings.RecordInsertTimeColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.RecordInsertTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VType {
                get {
                    return ((string)(this[this.tableNonDespatchBookings.VTypeColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.VTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double dropLAT {
                get {
                    return ((double)(this[this.tableNonDespatchBookings.dropLATColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.dropLATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double dropLON {
                get {
                    return ((double)(this[this.tableNonDespatchBookings.dropLONColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.dropLONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double gpsLAT {
                get {
                    return ((double)(this[this.tableNonDespatchBookings.gpsLATColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.gpsLATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double gpsLON {
                get {
                    return ((double)(this[this.tableNonDespatchBookings.gpsLONColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.gpsLONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int considered {
                get {
                    return ((int)(this[this.tableNonDespatchBookings.consideredColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.consideredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LandMark {
                get {
                    return ((string)(this[this.tableNonDespatchBookings.LandMarkColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.LandMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CabType {
                get {
                    return ((string)(this[this.tableNonDespatchBookings.CabTypeColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.CabTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BookingTimeCategory {
                get {
                    return ((string)(this[this.tableNonDespatchBookings.BookingTimeCategoryColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.BookingTimeCategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCode {
                get {
                    return ((string)(this[this.tableNonDespatchBookings.PCodeColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.PCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentType {
                get {
                    return ((string)(this[this.tableNonDespatchBookings.PaymentTypeColumn]));
                }
                set {
                    this[this.tableNonDespatchBookings.PaymentTypeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class paraRow : global::System.Data.DataRow {
            
            private paraDataTable tablepara;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal paraRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepara = ((paraDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long RPBookingID {
                get {
                    return ((long)(this[this.tablepara.RPBookingIDColumn]));
                }
                set {
                    this[this.tablepara.RPBookingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string preset {
                get {
                    return ((string)(this[this.tablepara.presetColumn]));
                }
                set {
                    this[this.tablepara.presetColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PCUsedRow : global::System.Data.DataRow {
            
            private PCUsedDataTable tablePCUsed;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PCUsedRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePCUsed = ((PCUsedDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AutoID {
                get {
                    return ((long)(this[this.tablePCUsed.AutoIDColumn]));
                }
                set {
                    this[this.tablePCUsed.AutoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientMobile {
                get {
                    return ((string)(this[this.tablePCUsed.ClientMobileColumn]));
                }
                set {
                    this[this.tablePCUsed.ClientMobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BookingID {
                get {
                    return ((long)(this[this.tablePCUsed.BookingIDColumn]));
                }
                set {
                    this[this.tablePCUsed.BookingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCode {
                get {
                    return ((string)(this[this.tablePCUsed.PCodeColumn]));
                }
                set {
                    this[this.tablePCUsed.PCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InsertDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tablePCUsed.InsertDateTimeColumn]));
                }
                set {
                    this[this.tablePCUsed.InsertDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CabType {
                get {
                    return ((string)(this[this.tablePCUsed.CabTypeColumn]));
                }
                set {
                    this[this.tablePCUsed.CabTypeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RatesRow : global::System.Data.DataRow {
            
            private RatesDataTable tableRates;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RatesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRates = ((RatesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AutoID {
                get {
                    return ((int)(this[this.tableRates.AutoIDColumn]));
                }
                set {
                    this[this.tableRates.AutoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float InitialKm {
                get {
                    return ((float)(this[this.tableRates.InitialKmColumn]));
                }
                set {
                    this[this.tableRates.InitialKmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float PerKMCharge {
                get {
                    return ((float)(this[this.tableRates.PerKMChargeColumn]));
                }
                set {
                    this[this.tableRates.PerKMChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingPerMinute {
                get {
                    return ((float)(this[this.tableRates.WaitingPerMinuteColumn]));
                }
                set {
                    this[this.tableRates.WaitingPerMinuteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FixAmount {
                get {
                    return ((float)(this[this.tableRates.FixAmountColumn]));
                }
                set {
                    this[this.tableRates.FixAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxiType {
                get {
                    return ((string)(this[this.tableRates.TaxiTypeColumn]));
                }
                set {
                    this[this.tableRates.TaxiTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NightMode {
                get {
                    return ((string)(this[this.tableRates.NightModeColumn]));
                }
                set {
                    this[this.tableRates.NightModeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RatesNightRow : global::System.Data.DataRow {
            
            private RatesNightDataTable tableRatesNight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RatesNightRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRatesNight = ((RatesNightDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AutoID {
                get {
                    return ((int)(this[this.tableRatesNight.AutoIDColumn]));
                }
                set {
                    this[this.tableRatesNight.AutoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float InitialKm {
                get {
                    return ((float)(this[this.tableRatesNight.InitialKmColumn]));
                }
                set {
                    this[this.tableRatesNight.InitialKmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float PerKMCharge {
                get {
                    return ((float)(this[this.tableRatesNight.PerKMChargeColumn]));
                }
                set {
                    this[this.tableRatesNight.PerKMChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float WaitingPerMinute {
                get {
                    return ((float)(this[this.tableRatesNight.WaitingPerMinuteColumn]));
                }
                set {
                    this[this.tableRatesNight.WaitingPerMinuteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FixAmount {
                get {
                    return ((float)(this[this.tableRatesNight.FixAmountColumn]));
                }
                set {
                    this[this.tableRatesNight.FixAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxiType {
                get {
                    return ((string)(this[this.tableRatesNight.TaxiTypeColumn]));
                }
                set {
                    this[this.tableRatesNight.TaxiTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int start {
                get {
                    return ((int)(this[this.tableRatesNight.startColumn]));
                }
                set {
                    this[this.tableRatesNight.startColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int end {
                get {
                    return ((int)(this[this.tableRatesNight.endColumn]));
                }
                set {
                    this[this.tableRatesNight.endColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SMSRow : global::System.Data.DataRow {
            
            private SMSDataTable tableSMS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SMSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSMS = ((SMSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AutoID {
                get {
                    return ((int)(this[this.tableSMS.AutoIDColumn]));
                }
                set {
                    this[this.tableSMS.AutoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string type {
                get {
                    return ((string)(this[this.tableSMS.typeColumn]));
                }
                set {
                    this[this.tableSMS.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string message {
                get {
                    return ((string)(this[this.tableSMS.messageColumn]));
                }
                set {
                    this[this.tableSMS.messageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string clientmobile {
                get {
                    return ((string)(this[this.tableSMS.clientmobileColumn]));
                }
                set {
                    this[this.tableSMS.clientmobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sendflag {
                get {
                    return ((string)(this[this.tableSMS.sendflagColumn]));
                }
                set {
                    this[this.tableSMS.sendflagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RecordInsertTime {
                get {
                    return ((global::System.DateTime)(this[this.tableSMS.RecordInsertTimeColumn]));
                }
                set {
                    this[this.tableSMS.RecordInsertTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime sendtime {
                get {
                    return ((global::System.DateTime)(this[this.tableSMS.sendtimeColumn]));
                }
                set {
                    this[this.tableSMS.sendtimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string respond {
                get {
                    return ((string)(this[this.tableSMS.respondColumn]));
                }
                set {
                    this[this.tableSMS.respondColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AppBookingCancelationRowChangeEvent : global::System.EventArgs {
            
            private AppBookingCancelationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AppBookingCancelationRowChangeEvent(AppBookingCancelationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AppBookingCancelationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class booking_statusRowChangeEvent : global::System.EventArgs {
            
            private booking_statusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public booking_statusRowChangeEvent(booking_statusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public booking_statusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BookinStatusLogRowChangeEvent : global::System.EventArgs {
            
            private BookinStatusLogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BookinStatusLogRowChangeEvent(BookinStatusLogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BookinStatusLogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CancelBookingRowChangeEvent : global::System.EventArgs {
            
            private CancelBookingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CancelBookingRowChangeEvent(CancelBookingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CancelBookingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CancelBookingNewRowChangeEvent : global::System.EventArgs {
            
            private CancelBookingNewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CancelBookingNewRowChangeEvent(CancelBookingNewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CancelBookingNewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ClientFavoriteRowChangeEvent : global::System.EventArgs {
            
            private ClientFavoriteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientFavoriteRowChangeEvent(ClientFavoriteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientFavoriteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ClientMobileRegistrationOldRowChangeEvent : global::System.EventArgs {
            
            private ClientMobileRegistrationOldRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientMobileRegistrationOldRowChangeEvent(ClientMobileRegistrationOldRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientMobileRegistrationOldRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DespatchBookingRowChangeEvent : global::System.EventArgs {
            
            private DespatchBookingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DespatchBookingRowChangeEvent(DespatchBookingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DespatchBookingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DespatchBookingStatusRowChangeEvent : global::System.EventArgs {
            
            private DespatchBookingStatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DespatchBookingStatusRowChangeEvent(DespatchBookingStatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DespatchBookingStatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DisEngageBookingRowChangeEvent : global::System.EventArgs {
            
            private DisEngageBookingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DisEngageBookingRowChangeEvent(DisEngageBookingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DisEngageBookingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class driver_log_onoffRowChangeEvent : global::System.EventArgs {
            
            private driver_log_onoffRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_log_onoffRowChangeEvent(driver_log_onoffRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_log_onoffRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class driver_mobile_registrationRowChangeEvent : global::System.EventArgs {
            
            private driver_mobile_registrationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_mobile_registrationRowChangeEvent(driver_mobile_registrationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_mobile_registrationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class driver_status_identifierRowChangeEvent : global::System.EventArgs {
            
            private driver_status_identifierRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_status_identifierRowChangeEvent(driver_status_identifierRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public driver_status_identifierRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DriverStatusRowChangeEvent : global::System.EventArgs {
            
            private DriverStatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DriverStatusRowChangeEvent(DriverStatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DriverStatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EMAILRowChangeEvent : global::System.EventArgs {
            
            private EMAILRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMAILRowChangeEvent(EMAILRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMAILRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class fleet_monitorRowChangeEvent : global::System.EventArgs {
            
            private fleet_monitorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fleet_monitorRowChangeEvent(fleet_monitorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fleet_monitorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GpsFailRowChangeEvent : global::System.EventArgs {
            
            private GpsFailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GpsFailRowChangeEvent(GpsFailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GpsFailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GPSMStatRowChangeEvent : global::System.EventArgs {
            
            private GPSMStatRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GPSMStatRowChangeEvent(GPSMStatRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GPSMStatRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class log_dataRowChangeEvent : global::System.EventArgs {
            
            private log_dataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public log_dataRowChangeEvent(log_dataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public log_dataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LogOffRowChangeEvent : global::System.EventArgs {
            
            private LogOffRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogOffRowChangeEvent(LogOffRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogOffRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LogSheetRowChangeEvent : global::System.EventArgs {
            
            private LogSheetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogSheetRowChangeEvent(LogSheetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogSheetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class NonAcceptBookingRowChangeEvent : global::System.EventArgs {
            
            private NonAcceptBookingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonAcceptBookingRowChangeEvent(NonAcceptBookingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonAcceptBookingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class NonAcceptDespatchBookingRowChangeEvent : global::System.EventArgs {
            
            private NonAcceptDespatchBookingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonAcceptDespatchBookingRowChangeEvent(NonAcceptDespatchBookingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonAcceptDespatchBookingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class NonDespatchBookingsRowChangeEvent : global::System.EventArgs {
            
            private NonDespatchBookingsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonDespatchBookingsRowChangeEvent(NonDespatchBookingsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NonDespatchBookingsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class paraRowChangeEvent : global::System.EventArgs {
            
            private paraRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public paraRowChangeEvent(paraRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public paraRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PCUsedRowChangeEvent : global::System.EventArgs {
            
            private PCUsedRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PCUsedRowChangeEvent(PCUsedRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PCUsedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RatesRowChangeEvent : global::System.EventArgs {
            
            private RatesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RatesRowChangeEvent(RatesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RatesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RatesNightRowChangeEvent : global::System.EventArgs {
            
            private RatesNightRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RatesNightRowChangeEvent(RatesNightRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RatesNightRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SMSRowChangeEvent : global::System.EventArgs {
            
            private SMSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SMSRowChangeEvent(SMSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SMSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WindowsFormsApplication3.budgetDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AppBookingCancelationTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AppBookingCancelationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AppBookingCancelation";
            tableMapping.ColumnMappings.Add("BookingID", "BookingID");
            tableMapping.ColumnMappings.Add("CancelTime", "CancelTime");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `AppBookingCancelation` (`BookingID`, `CancelTime`) VALUES (@BookingI" +
                "D, @CancelTime)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CancelTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "CancelTime";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `BookingID`, `CancelTime` FROM `AppBookingCancelation`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.AppBookingCancelationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.AppBookingCancelationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.AppBookingCancelationDataTable dataTable = new budgetDataSet.AppBookingCancelationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.AppBookingCancelationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "AppBookingCancelation");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long BookingID, System.DateTime CancelTime) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(BookingID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(CancelTime));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class booking_statusTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public booking_statusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "booking_status";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("description", "description");
            tableMapping.ColumnMappings.Add("addeddate", "addeddate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `booking_status` WHERE ((`id` = @Original_id) AND ((@IsNull_name = 1 AND `name` IS NULL) OR (`name` = @Original_name)) AND ((@IsNull_description = 1 AND `description` IS NULL) OR (`description` = @Original_description)) AND ((@IsNull_addeddate = 1 AND `addeddate` IS NULL) OR (`addeddate` = @Original_addeddate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_name";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_description";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_description";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_addeddate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_addeddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `booking_status` (`name`, `description`, `addeddate`) VALUES (@name, " +
                "@description, @addeddate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@description";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "description";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@addeddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `booking_status` SET `name` = @name, `description` = @description, `addeddate` = @addeddate WHERE ((`id` = @Original_id) AND ((@IsNull_name = 1 AND `name` IS NULL) OR (`name` = @Original_name)) AND ((@IsNull_description = 1 AND `description` IS NULL) OR (`description` = @Original_description)) AND ((@IsNull_addeddate = 1 AND `addeddate` IS NULL) OR (`addeddate` = @Original_addeddate)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@description";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "description";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@addeddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_name";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_description";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_description";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_addeddate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_addeddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `id`, `name`, `description`, `addeddate` FROM `booking_status`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.booking_statusDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.booking_statusDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.booking_statusDataTable dataTable = new budgetDataSet.booking_statusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.booking_statusDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "booking_status");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_name, string Original_description, global::System.Nullable<global::System.DateTime> Original_addeddate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_name));
            }
            if ((Original_description == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_description));
            }
            if ((Original_addeddate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_addeddate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string name, string description, global::System.Nullable<global::System.DateTime> addeddate) {
            if ((name == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(name));
            }
            if ((description == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(description));
            }
            if ((addeddate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(addeddate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string name, string description, global::System.Nullable<global::System.DateTime> addeddate, int Original_id, string Original_name, string Original_description, global::System.Nullable<global::System.DateTime> Original_addeddate) {
            if ((name == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(name));
            }
            if ((description == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(description));
            }
            if ((addeddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(addeddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_id));
            if ((Original_name == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_name));
            }
            if ((Original_description == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_description));
            }
            if ((Original_addeddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_addeddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BookinStatusLogTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BookinStatusLogTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BookinStatusLog";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("BookingID", "BookingID");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("TriggerTime", "TriggerTime");
            tableMapping.ColumnMappings.Add("TriggerBy", "TriggerBy");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `BookinStatusLog` WHERE ((`ID` = @Original_ID) AND (`BookingID` = @Or" +
                "iginal_BookingID) AND (`Status` = @Original_Status) AND (`TriggerTime` = @Origin" +
                "al_TriggerTime) AND (`TriggerBy` = @Original_TriggerBy))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Status";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Status";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TriggerTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "TriggerTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TriggerBy";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "TriggerBy";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `BookinStatusLog` (`BookingID`, `Status`, `TriggerTime`, `TriggerBy`)" +
                " VALUES (@BookingID, @Status, @TriggerTime, @TriggerBy)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Status";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Status";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TriggerTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "TriggerTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TriggerBy";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "TriggerBy";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `BookinStatusLog` SET `BookingID` = @BookingID, `Status` = @Status, `TriggerTime` = @TriggerTime, `TriggerBy` = @TriggerBy WHERE ((`ID` = @Original_ID) AND (`BookingID` = @Original_BookingID) AND (`Status` = @Original_Status) AND (`TriggerTime` = @Original_TriggerTime) AND (`TriggerBy` = @Original_TriggerBy))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Status";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Status";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TriggerTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "TriggerTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TriggerBy";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "TriggerBy";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Status";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Status";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TriggerTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "TriggerTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TriggerBy";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "TriggerBy";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `ID`, `BookingID`, `Status`, `TriggerTime`, `TriggerBy` FROM `BookinStatus" +
                "Log`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.BookinStatusLogDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.BookinStatusLogDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.BookinStatusLogDataTable dataTable = new budgetDataSet.BookinStatusLogDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.BookinStatusLogDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "BookinStatusLog");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_ID, long Original_BookingID, int Original_Status, System.DateTime Original_TriggerTime, string Original_TriggerBy) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_BookingID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Status));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_TriggerTime));
            if ((Original_TriggerBy == null)) {
                throw new global::System.ArgumentNullException("Original_TriggerBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TriggerBy));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long BookingID, int Status, System.DateTime TriggerTime, string TriggerBy) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(BookingID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Status));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(TriggerTime));
            if ((TriggerBy == null)) {
                throw new global::System.ArgumentNullException("TriggerBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TriggerBy));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long BookingID, int Status, System.DateTime TriggerTime, string TriggerBy, long Original_ID, long Original_BookingID, int Original_Status, System.DateTime Original_TriggerTime, string Original_TriggerBy) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(BookingID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Status));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(TriggerTime));
            if ((TriggerBy == null)) {
                throw new global::System.ArgumentNullException("TriggerBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TriggerBy));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(Original_BookingID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Status));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_TriggerTime));
            if ((Original_TriggerBy == null)) {
                throw new global::System.ArgumentNullException("Original_TriggerBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_TriggerBy));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CancelBookingTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CancelBookingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CancelBooking";
            tableMapping.ColumnMappings.Add("AutoID", "AutoID");
            tableMapping.ColumnMappings.Add("BookingID", "BookingID");
            tableMapping.ColumnMappings.Add("BookingStatus", "BookingStatus");
            tableMapping.ColumnMappings.Add("RefNo", "RefNo");
            tableMapping.ColumnMappings.Add("ImiNo", "ImiNo");
            tableMapping.ColumnMappings.Add("CabNo", "CabNo");
            tableMapping.ColumnMappings.Add("ClientMobile", "ClientMobile");
            tableMapping.ColumnMappings.Add("ClientName", "ClientName");
            tableMapping.ColumnMappings.Add("ClientAddress", "ClientAddress");
            tableMapping.ColumnMappings.Add("LandMark", "LandMark");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("RQTime", "RQTime");
            tableMapping.ColumnMappings.Add("LAT", "LAT");
            tableMapping.ColumnMappings.Add("LON", "LON");
            tableMapping.ColumnMappings.Add("AcceptTime", "AcceptTime");
            tableMapping.ColumnMappings.Add("AtThePlaceTime", "AtThePlaceTime");
            tableMapping.ColumnMappings.Add("MeterOnTime", "MeterOnTime");
            tableMapping.ColumnMappings.Add("MeterOffTime", "MeterOffTime");
            tableMapping.ColumnMappings.Add("MeterOffLAT", "MeterOffLAT");
            tableMapping.ColumnMappings.Add("MeterOffLON", "MeterOffLON");
            tableMapping.ColumnMappings.Add("MeterOffAddress", "MeterOffAddress");
            tableMapping.ColumnMappings.Add("RunningKM", "RunningKM");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("InitialKm", "InitialKm");
            tableMapping.ColumnMappings.Add("PerKMCharge", "PerKMCharge");
            tableMapping.ColumnMappings.Add("Flag", "Flag");
            tableMapping.ColumnMappings.Add("WaitingPerMinute", "WaitingPerMinute");
            tableMapping.ColumnMappings.Add("FixAmount", "FixAmount");
            tableMapping.ColumnMappings.Add("RecordInsertTime", "RecordInsertTime");
            tableMapping.ColumnMappings.Add("GCMFlag", "GCMFlag");
            tableMapping.ColumnMappings.Add("kangarooupdate", "kangarooupdate");
            tableMapping.ColumnMappings.Add("WaitingTime", "WaitingTime");
            tableMapping.ColumnMappings.Add("WaitingCost", "WaitingCost");
            tableMapping.ColumnMappings.Add("Rating", "Rating");
            tableMapping.ColumnMappings.Add("DNo", "DNo");
            tableMapping.ColumnMappings.Add("DRating", "DRating");
            tableMapping.ColumnMappings.Add("CabType", "CabType");
            tableMapping.ColumnMappings.Add("BookingType", "BookingType");
            tableMapping.ColumnMappings.Add("FreeWaiting", "FreeWaiting");
            tableMapping.ColumnMappings.Add("PCode", "PCode");
            tableMapping.ColumnMappings.Add("PaymentType", "PaymentType");
            tableMapping.ColumnMappings.Add("DiscountAmount", "DiscountAmount");
            tableMapping.ColumnMappings.Add("DRatinNew", "DRatinNew");
            tableMapping.ColumnMappings.Add("CancelTime", "CancelTime");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `CancelBooking` (`BookingID`, `BookingStatus`, `RefNo`, `ImiNo`, `CabNo`, `ClientMobile`, `ClientName`, `ClientAddress`, `LandMark`, `Remark`, `RQTime`, `LAT`, `LON`, `AcceptTime`, `AtThePlaceTime`, `MeterOnTime`, `MeterOffTime`, `MeterOffLAT`, `MeterOffLON`, `MeterOffAddress`, `RunningKM`, `Amount`, `InitialKm`, `PerKMCharge`, `Flag`, `WaitingPerMinute`, `FixAmount`, `RecordInsertTime`, `GCMFlag`, `kangarooupdate`, `WaitingTime`, `WaitingCost`, `Rating`, `DNo`, `DRating`, `CabType`, `BookingType`, `FreeWaiting`, `PCode`, `PaymentType`, `DiscountAmount`, `DRatinNew`, `CancelTime`) VALUES (@BookingID, @BookingStatus, @RefNo, @ImiNo, @CabNo, @ClientMobile, @ClientName, @ClientAddress, @LandMark, @Remark, @RQTime, @LAT, @LON, @AcceptTime, @AtThePlaceTime, @MeterOnTime, @MeterOffTime, @MeterOffLAT, @MeterOffLON, @MeterOffAddress, @RunningKM, @Amount, @InitialKm, @PerKMCharge, @Flag, @WaitingPerMinute, @FixAmount, @RecordInsertTime, @GCMFlag, @kangarooupdate, @WaitingTime, @WaitingCost, @Rating, @DNo, @DRating, @CabType, @BookingType, @FreeWaiting, @PCode, @PaymentType, @DiscountAmount, @DRatinNew, @CancelTime)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingStatus";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "BookingStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RefNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "RefNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ImiNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ImiNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientMobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientMobile";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientAddress";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LandMark";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "LandMark";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Remark";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Remark";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RQTime";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "RQTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "LAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "LON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@AcceptTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "AcceptTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@AtThePlaceTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "AtThePlaceTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOnTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterOnTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffLAT";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffLAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffLON";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffLON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffAddress";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RunningKM";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "RunningKM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "Amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@InitialKm";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "InitialKm";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PerKMCharge";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "PerKMCharge";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Flag";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Flag";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingPerMinute";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingPerMinute";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FixAmount";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "FixAmount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RecordInsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "RecordInsertTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@GCMFlag";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "GCMFlag";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kangarooupdate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kangarooupdate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingTime";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingCost";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingCost";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Rating";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Rating";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "DNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DRating";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "DRating";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "CabType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "BookingType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FreeWaiting";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FreeWaiting";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PaymentType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PaymentType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DiscountAmount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "DiscountAmount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DRatinNew";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "DRatinNew";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CancelTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "CancelTime";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `AutoID`, `BookingID`, `BookingStatus`, `RefNo`, `ImiNo`, `CabNo`, `ClientMobile`, `ClientName`, `ClientAddress`, `LandMark`, `Remark`, `RQTime`, `LAT`, `LON`, `AcceptTime`, `AtThePlaceTime`, `MeterOnTime`, `MeterOffTime`, `MeterOffLAT`, `MeterOffLON`, `MeterOffAddress`, `RunningKM`, `Amount`, `InitialKm`, `PerKMCharge`, `Flag`, `WaitingPerMinute`, `FixAmount`, `RecordInsertTime`, `GCMFlag`, `kangarooupdate`, `WaitingTime`, `WaitingCost`, `Rating`, `DNo`, `DRating`, `CabType`, `BookingType`, `FreeWaiting`, `PCode`, `PaymentType`, `DiscountAmount`, `DRatinNew`, `CancelTime` FROM `CancelBooking`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.CancelBookingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.CancelBookingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.CancelBookingDataTable dataTable = new budgetDataSet.CancelBookingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.CancelBookingDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CancelBooking");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long BookingID, 
                    string BookingStatus, 
                    string RefNo, 
                    string ImiNo, 
                    string CabNo, 
                    string ClientMobile, 
                    string ClientName, 
                    string ClientAddress, 
                    string LandMark, 
                    string Remark, 
                    string RQTime, 
                    double LAT, 
                    double LON, 
                    System.DateTime AcceptTime, 
                    System.DateTime AtThePlaceTime, 
                    System.DateTime MeterOnTime, 
                    System.DateTime MeterOffTime, 
                    float MeterOffLAT, 
                    float MeterOffLON, 
                    string MeterOffAddress, 
                    double RunningKM, 
                    double Amount, 
                    double InitialKm, 
                    double PerKMCharge, 
                    string Flag, 
                    float WaitingPerMinute, 
                    float FixAmount, 
                    System.DateTime RecordInsertTime, 
                    byte GCMFlag, 
                    int kangarooupdate, 
                    float WaitingTime, 
                    float WaitingCost, 
                    int Rating, 
                    string DNo, 
                    double DRating, 
                    string CabType, 
                    string BookingType, 
                    int FreeWaiting, 
                    string PCode, 
                    string PaymentType, 
                    double DiscountAmount, 
                    double DRatinNew, 
                    System.DateTime CancelTime) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(BookingID));
            if ((BookingStatus == null)) {
                throw new global::System.ArgumentNullException("BookingStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BookingStatus));
            }
            if ((RefNo == null)) {
                throw new global::System.ArgumentNullException("RefNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(RefNo));
            }
            if ((ImiNo == null)) {
                throw new global::System.ArgumentNullException("ImiNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ImiNo));
            }
            if ((CabNo == null)) {
                throw new global::System.ArgumentNullException("CabNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CabNo));
            }
            if ((ClientMobile == null)) {
                throw new global::System.ArgumentNullException("ClientMobile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ClientMobile));
            }
            if ((ClientName == null)) {
                throw new global::System.ArgumentNullException("ClientName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ClientName));
            }
            if ((ClientAddress == null)) {
                throw new global::System.ArgumentNullException("ClientAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ClientAddress));
            }
            if ((LandMark == null)) {
                throw new global::System.ArgumentNullException("LandMark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(LandMark));
            }
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Remark));
            }
            if ((RQTime == null)) {
                throw new global::System.ArgumentNullException("RQTime");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(RQTime));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((double)(LAT));
            this.Adapter.InsertCommand.Parameters[12].Value = ((double)(LON));
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(AcceptTime));
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(AtThePlaceTime));
            this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(MeterOnTime));
            this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(MeterOffTime));
            this.Adapter.InsertCommand.Parameters[17].Value = ((float)(MeterOffLAT));
            this.Adapter.InsertCommand.Parameters[18].Value = ((float)(MeterOffLON));
            if ((MeterOffAddress == null)) {
                throw new global::System.ArgumentNullException("MeterOffAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(MeterOffAddress));
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((double)(RunningKM));
            this.Adapter.InsertCommand.Parameters[21].Value = ((double)(Amount));
            this.Adapter.InsertCommand.Parameters[22].Value = ((double)(InitialKm));
            this.Adapter.InsertCommand.Parameters[23].Value = ((double)(PerKMCharge));
            if ((Flag == null)) {
                throw new global::System.ArgumentNullException("Flag");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Flag));
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((float)(WaitingPerMinute));
            this.Adapter.InsertCommand.Parameters[26].Value = ((float)(FixAmount));
            this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(RecordInsertTime));
            this.Adapter.InsertCommand.Parameters[28].Value = ((byte)(GCMFlag));
            this.Adapter.InsertCommand.Parameters[29].Value = ((int)(kangarooupdate));
            this.Adapter.InsertCommand.Parameters[30].Value = ((float)(WaitingTime));
            this.Adapter.InsertCommand.Parameters[31].Value = ((float)(WaitingCost));
            this.Adapter.InsertCommand.Parameters[32].Value = ((int)(Rating));
            if ((DNo == null)) {
                throw new global::System.ArgumentNullException("DNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(DNo));
            }
            this.Adapter.InsertCommand.Parameters[34].Value = ((double)(DRating));
            if ((CabType == null)) {
                throw new global::System.ArgumentNullException("CabType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(CabType));
            }
            if ((BookingType == null)) {
                throw new global::System.ArgumentNullException("BookingType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(BookingType));
            }
            this.Adapter.InsertCommand.Parameters[37].Value = ((int)(FreeWaiting));
            if ((PCode == null)) {
                throw new global::System.ArgumentNullException("PCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(PCode));
            }
            if ((PaymentType == null)) {
                throw new global::System.ArgumentNullException("PaymentType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(PaymentType));
            }
            this.Adapter.InsertCommand.Parameters[40].Value = ((double)(DiscountAmount));
            this.Adapter.InsertCommand.Parameters[41].Value = ((double)(DRatinNew));
            this.Adapter.InsertCommand.Parameters[42].Value = ((System.DateTime)(CancelTime));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CancelBookingNewTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CancelBookingNewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CancelBookingNew";
            tableMapping.ColumnMappings.Add("AutoID", "AutoID");
            tableMapping.ColumnMappings.Add("BookingID", "BookingID");
            tableMapping.ColumnMappings.Add("BookingStatus", "BookingStatus");
            tableMapping.ColumnMappings.Add("RefNo", "RefNo");
            tableMapping.ColumnMappings.Add("ImiNo", "ImiNo");
            tableMapping.ColumnMappings.Add("CabNo", "CabNo");
            tableMapping.ColumnMappings.Add("ClientMobile", "ClientMobile");
            tableMapping.ColumnMappings.Add("ClientName", "ClientName");
            tableMapping.ColumnMappings.Add("ClientAddress", "ClientAddress");
            tableMapping.ColumnMappings.Add("LandMark", "LandMark");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("RQTime", "RQTime");
            tableMapping.ColumnMappings.Add("LAT", "LAT");
            tableMapping.ColumnMappings.Add("LON", "LON");
            tableMapping.ColumnMappings.Add("AcceptTime", "AcceptTime");
            tableMapping.ColumnMappings.Add("AtThePlaceTime", "AtThePlaceTime");
            tableMapping.ColumnMappings.Add("MeterOnTime", "MeterOnTime");
            tableMapping.ColumnMappings.Add("MeterOffTime", "MeterOffTime");
            tableMapping.ColumnMappings.Add("MeterOffLAT", "MeterOffLAT");
            tableMapping.ColumnMappings.Add("MeterOffLON", "MeterOffLON");
            tableMapping.ColumnMappings.Add("MeterOffAddress", "MeterOffAddress");
            tableMapping.ColumnMappings.Add("RunningKM", "RunningKM");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("InitialKm", "InitialKm");
            tableMapping.ColumnMappings.Add("PerKMCharge", "PerKMCharge");
            tableMapping.ColumnMappings.Add("Flag", "Flag");
            tableMapping.ColumnMappings.Add("WaitingPerMinute", "WaitingPerMinute");
            tableMapping.ColumnMappings.Add("FixAmount", "FixAmount");
            tableMapping.ColumnMappings.Add("RecordInsertTime", "RecordInsertTime");
            tableMapping.ColumnMappings.Add("GCMFlag", "GCMFlag");
            tableMapping.ColumnMappings.Add("kangarooupdate", "kangarooupdate");
            tableMapping.ColumnMappings.Add("WaitingTime", "WaitingTime");
            tableMapping.ColumnMappings.Add("WaitingCost", "WaitingCost");
            tableMapping.ColumnMappings.Add("Rating", "Rating");
            tableMapping.ColumnMappings.Add("DNo", "DNo");
            tableMapping.ColumnMappings.Add("DRating", "DRating");
            tableMapping.ColumnMappings.Add("CabType", "CabType");
            tableMapping.ColumnMappings.Add("BookingType", "BookingType");
            tableMapping.ColumnMappings.Add("FreeWaiting", "FreeWaiting");
            tableMapping.ColumnMappings.Add("DiscountAmount", "DiscountAmount");
            tableMapping.ColumnMappings.Add("PCode", "PCode");
            tableMapping.ColumnMappings.Add("PaymentType", "PaymentType");
            tableMapping.ColumnMappings.Add("DRatinNew", "DRatinNew");
            tableMapping.ColumnMappings.Add("CancelTime", "CancelTime");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `CancelBookingNew` (`BookingID`, `BookingStatus`, `RefNo`, `ImiNo`, `CabNo`, `ClientMobile`, `ClientName`, `ClientAddress`, `LandMark`, `Remark`, `RQTime`, `LAT`, `LON`, `AcceptTime`, `AtThePlaceTime`, `MeterOnTime`, `MeterOffTime`, `MeterOffLAT`, `MeterOffLON`, `MeterOffAddress`, `RunningKM`, `Amount`, `InitialKm`, `PerKMCharge`, `Flag`, `WaitingPerMinute`, `FixAmount`, `RecordInsertTime`, `GCMFlag`, `kangarooupdate`, `WaitingTime`, `WaitingCost`, `Rating`, `DNo`, `DRating`, `CabType`, `BookingType`, `FreeWaiting`, `DiscountAmount`, `PCode`, `PaymentType`, `DRatinNew`, `CancelTime`) VALUES (@BookingID, @BookingStatus, @RefNo, @ImiNo, @CabNo, @ClientMobile, @ClientName, @ClientAddress, @LandMark, @Remark, @RQTime, @LAT, @LON, @AcceptTime, @AtThePlaceTime, @MeterOnTime, @MeterOffTime, @MeterOffLAT, @MeterOffLON, @MeterOffAddress, @RunningKM, @Amount, @InitialKm, @PerKMCharge, @Flag, @WaitingPerMinute, @FixAmount, @RecordInsertTime, @GCMFlag, @kangarooupdate, @WaitingTime, @WaitingCost, @Rating, @DNo, @DRating, @CabType, @BookingType, @FreeWaiting, @DiscountAmount, @PCode, @PaymentType, @DRatinNew, @CancelTime)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingStatus";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "BookingStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RefNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "RefNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ImiNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ImiNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientMobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientMobile";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientAddress";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LandMark";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "LandMark";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Remark";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Remark";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RQTime";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "RQTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "LAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "LON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@AcceptTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "AcceptTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@AtThePlaceTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "AtThePlaceTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOnTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterOnTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffLAT";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffLAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffLON";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffLON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffAddress";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RunningKM";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "RunningKM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "Amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@InitialKm";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "InitialKm";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PerKMCharge";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "PerKMCharge";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Flag";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Flag";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingPerMinute";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingPerMinute";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FixAmount";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "FixAmount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RecordInsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "RecordInsertTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@GCMFlag";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "GCMFlag";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kangarooupdate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kangarooupdate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingTime";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingCost";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingCost";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Rating";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Rating";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "DNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DRating";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "DRating";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "CabType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "BookingType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FreeWaiting";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FreeWaiting";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DiscountAmount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "DiscountAmount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PaymentType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PaymentType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DRatinNew";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "DRatinNew";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CancelTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "CancelTime";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `AutoID`, `BookingID`, `BookingStatus`, `RefNo`, `ImiNo`, `CabNo`, `ClientMobile`, `ClientName`, `ClientAddress`, `LandMark`, `Remark`, `RQTime`, `LAT`, `LON`, `AcceptTime`, `AtThePlaceTime`, `MeterOnTime`, `MeterOffTime`, `MeterOffLAT`, `MeterOffLON`, `MeterOffAddress`, `RunningKM`, `Amount`, `InitialKm`, `PerKMCharge`, `Flag`, `WaitingPerMinute`, `FixAmount`, `RecordInsertTime`, `GCMFlag`, `kangarooupdate`, `WaitingTime`, `WaitingCost`, `Rating`, `DNo`, `DRating`, `CabType`, `BookingType`, `FreeWaiting`, `DiscountAmount`, `PCode`, `PaymentType`, `DRatinNew`, `CancelTime` FROM `CancelBookingNew`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.CancelBookingNewDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.CancelBookingNewDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.CancelBookingNewDataTable dataTable = new budgetDataSet.CancelBookingNewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.CancelBookingNewDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CancelBookingNew");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long BookingID, 
                    string BookingStatus, 
                    string RefNo, 
                    string ImiNo, 
                    string CabNo, 
                    string ClientMobile, 
                    string ClientName, 
                    string ClientAddress, 
                    string LandMark, 
                    string Remark, 
                    string RQTime, 
                    double LAT, 
                    double LON, 
                    System.DateTime AcceptTime, 
                    System.DateTime AtThePlaceTime, 
                    System.DateTime MeterOnTime, 
                    System.DateTime MeterOffTime, 
                    float MeterOffLAT, 
                    float MeterOffLON, 
                    string MeterOffAddress, 
                    double RunningKM, 
                    double Amount, 
                    double InitialKm, 
                    double PerKMCharge, 
                    string Flag, 
                    float WaitingPerMinute, 
                    float FixAmount, 
                    System.DateTime RecordInsertTime, 
                    byte GCMFlag, 
                    int kangarooupdate, 
                    float WaitingTime, 
                    float WaitingCost, 
                    int Rating, 
                    string DNo, 
                    double DRating, 
                    string CabType, 
                    string BookingType, 
                    int FreeWaiting, 
                    double DiscountAmount, 
                    string PCode, 
                    string PaymentType, 
                    double DRatinNew, 
                    System.DateTime CancelTime) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(BookingID));
            if ((BookingStatus == null)) {
                throw new global::System.ArgumentNullException("BookingStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BookingStatus));
            }
            if ((RefNo == null)) {
                throw new global::System.ArgumentNullException("RefNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(RefNo));
            }
            if ((ImiNo == null)) {
                throw new global::System.ArgumentNullException("ImiNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ImiNo));
            }
            if ((CabNo == null)) {
                throw new global::System.ArgumentNullException("CabNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CabNo));
            }
            if ((ClientMobile == null)) {
                throw new global::System.ArgumentNullException("ClientMobile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ClientMobile));
            }
            if ((ClientName == null)) {
                throw new global::System.ArgumentNullException("ClientName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ClientName));
            }
            if ((ClientAddress == null)) {
                throw new global::System.ArgumentNullException("ClientAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ClientAddress));
            }
            if ((LandMark == null)) {
                throw new global::System.ArgumentNullException("LandMark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(LandMark));
            }
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Remark));
            }
            if ((RQTime == null)) {
                throw new global::System.ArgumentNullException("RQTime");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(RQTime));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((double)(LAT));
            this.Adapter.InsertCommand.Parameters[12].Value = ((double)(LON));
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(AcceptTime));
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(AtThePlaceTime));
            this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(MeterOnTime));
            this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(MeterOffTime));
            this.Adapter.InsertCommand.Parameters[17].Value = ((float)(MeterOffLAT));
            this.Adapter.InsertCommand.Parameters[18].Value = ((float)(MeterOffLON));
            if ((MeterOffAddress == null)) {
                throw new global::System.ArgumentNullException("MeterOffAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(MeterOffAddress));
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((double)(RunningKM));
            this.Adapter.InsertCommand.Parameters[21].Value = ((double)(Amount));
            this.Adapter.InsertCommand.Parameters[22].Value = ((double)(InitialKm));
            this.Adapter.InsertCommand.Parameters[23].Value = ((double)(PerKMCharge));
            if ((Flag == null)) {
                throw new global::System.ArgumentNullException("Flag");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Flag));
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((float)(WaitingPerMinute));
            this.Adapter.InsertCommand.Parameters[26].Value = ((float)(FixAmount));
            this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(RecordInsertTime));
            this.Adapter.InsertCommand.Parameters[28].Value = ((byte)(GCMFlag));
            this.Adapter.InsertCommand.Parameters[29].Value = ((int)(kangarooupdate));
            this.Adapter.InsertCommand.Parameters[30].Value = ((float)(WaitingTime));
            this.Adapter.InsertCommand.Parameters[31].Value = ((float)(WaitingCost));
            this.Adapter.InsertCommand.Parameters[32].Value = ((int)(Rating));
            if ((DNo == null)) {
                throw new global::System.ArgumentNullException("DNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(DNo));
            }
            this.Adapter.InsertCommand.Parameters[34].Value = ((double)(DRating));
            if ((CabType == null)) {
                throw new global::System.ArgumentNullException("CabType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(CabType));
            }
            if ((BookingType == null)) {
                throw new global::System.ArgumentNullException("BookingType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(BookingType));
            }
            this.Adapter.InsertCommand.Parameters[37].Value = ((int)(FreeWaiting));
            this.Adapter.InsertCommand.Parameters[38].Value = ((double)(DiscountAmount));
            if ((PCode == null)) {
                throw new global::System.ArgumentNullException("PCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(PCode));
            }
            if ((PaymentType == null)) {
                throw new global::System.ArgumentNullException("PaymentType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(PaymentType));
            }
            this.Adapter.InsertCommand.Parameters[41].Value = ((double)(DRatinNew));
            this.Adapter.InsertCommand.Parameters[42].Value = ((System.DateTime)(CancelTime));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ClientFavoriteTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ClientFavoriteTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ClientFavorite";
            tableMapping.ColumnMappings.Add("mobile", "mobile");
            tableMapping.ColumnMappings.Add("title", "title");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("lat", "lat");
            tableMapping.ColumnMappings.Add("lon", "lon");
            tableMapping.ColumnMappings.Add("type", "type");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `ClientFavorite` WHERE ((`mobile` = @Original_mobile) AND (`title` = " +
                "@Original_title) AND (`address` = @Original_address) AND (`lat` = @Original_lat)" +
                " AND (`lon` = @Original_lon) AND (`type` = @Original_type))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_mobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_title";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "title";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_address";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "address";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_lat";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "lat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_lon";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "lon";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_type";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `ClientFavorite` (`mobile`, `title`, `address`, `lat`, `lon`, `type`)" +
                " VALUES (@mobile, @title, @address, @lat, @lon, @type)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@mobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mobile";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@title";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "title";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@address";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "address";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@lat";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "lat";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@lon";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "lon";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@type";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "type";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `ClientFavorite` SET `mobile` = @mobile, `title` = @title, `address` = @address, `lat` = @lat, `lon` = @lon, `type` = @type WHERE ((`mobile` = @Original_mobile) AND (`title` = @Original_title) AND (`address` = @Original_address) AND (`lat` = @Original_lat) AND (`lon` = @Original_lon) AND (`type` = @Original_type))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@mobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mobile";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@title";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "title";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@address";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "address";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@lat";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "lat";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@lon";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "lon";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@type";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "type";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_mobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_title";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "title";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_address";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "address";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_lat";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "lat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_lon";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "lon";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_type";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `mobile`, `title`, `address`, `lat`, `lon`, `type` FROM `ClientFavorite`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.ClientFavoriteDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.ClientFavoriteDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.ClientFavoriteDataTable dataTable = new budgetDataSet.ClientFavoriteDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.ClientFavoriteDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ClientFavorite");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_mobile, string Original_title, string Original_address, double Original_lat, double Original_lon, string Original_type) {
            if ((Original_mobile == null)) {
                throw new global::System.ArgumentNullException("Original_mobile");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_mobile));
            }
            if ((Original_title == null)) {
                throw new global::System.ArgumentNullException("Original_title");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_title));
            }
            if ((Original_address == null)) {
                throw new global::System.ArgumentNullException("Original_address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_address));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_lat));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_lon));
            if ((Original_type == null)) {
                throw new global::System.ArgumentNullException("Original_type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_type));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string mobile, string title, string address, double lat, double lon, string type) {
            if ((mobile == null)) {
                throw new global::System.ArgumentNullException("mobile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(mobile));
            }
            if ((title == null)) {
                throw new global::System.ArgumentNullException("title");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(title));
            }
            if ((address == null)) {
                throw new global::System.ArgumentNullException("address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(address));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(lat));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(lon));
            if ((type == null)) {
                throw new global::System.ArgumentNullException("type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(type));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string mobile, string title, string address, double lat, double lon, string type, string Original_mobile, string Original_title, string Original_address, double Original_lat, double Original_lon, string Original_type) {
            if ((mobile == null)) {
                throw new global::System.ArgumentNullException("mobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(mobile));
            }
            if ((title == null)) {
                throw new global::System.ArgumentNullException("title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(title));
            }
            if ((address == null)) {
                throw new global::System.ArgumentNullException("address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(address));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(lat));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(lon));
            if ((type == null)) {
                throw new global::System.ArgumentNullException("type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(type));
            }
            if ((Original_mobile == null)) {
                throw new global::System.ArgumentNullException("Original_mobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_mobile));
            }
            if ((Original_title == null)) {
                throw new global::System.ArgumentNullException("Original_title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_title));
            }
            if ((Original_address == null)) {
                throw new global::System.ArgumentNullException("Original_address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_address));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Original_lat));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Original_lon));
            if ((Original_type == null)) {
                throw new global::System.ArgumentNullException("Original_type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_type));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string address, double lat, double lon, string type, string Original_mobile, string Original_title, string Original_address, double Original_lat, double Original_lon, string Original_type) {
            return this.Update(Original_mobile, Original_title, address, lat, lon, type, Original_mobile, Original_title, Original_address, Original_lat, Original_lon, Original_type);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ClientMobileRegistrationOldTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ClientMobileRegistrationOldTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ClientMobileRegistrationOld";
            tableMapping.ColumnMappings.Add("Mobile", "Mobile");
            tableMapping.ColumnMappings.Add("DeviceID", "DeviceID");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("EMail", "EMail");
            tableMapping.ColumnMappings.Add("Password", "Password");
            tableMapping.ColumnMappings.Add("Pin", "Pin");
            tableMapping.ColumnMappings.Add("RegDateTime", "RegDateTime");
            tableMapping.ColumnMappings.Add("BookingCount", "BookingCount");
            tableMapping.ColumnMappings.Add("CancelCount", "CancelCount");
            tableMapping.ColumnMappings.Add("InsertTime", "InsertTime");
            tableMapping.ColumnMappings.Add("UpdateTime", "UpdateTime");
            tableMapping.ColumnMappings.Add("PhoneModel", "PhoneModel");
            tableMapping.ColumnMappings.Add("OS", "OS");
            tableMapping.ColumnMappings.Add("CountryCode", "CountryCode");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("EMailSubcription", "EMailSubcription");
            tableMapping.ColumnMappings.Add("RequestSendTime", "RequestSendTime");
            tableMapping.ColumnMappings.Add("PinExpairDuration", "PinExpairDuration");
            tableMapping.ColumnMappings.Add("PreferedLangauge", "PreferedLangauge");
            tableMapping.ColumnMappings.Add("login", "login");
            tableMapping.ColumnMappings.Add("LastLogin", "LastLogin");
            tableMapping.ColumnMappings.Add("PinValidate", "PinValidate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `ClientMobileRegistrationOld` WHERE ((`Mobile` = @Original_Mobile) AND (`DeviceID` = @Original_DeviceID) AND (`Title` = @Original_Title) AND (`Name` = @Original_Name) AND (`EMail` = @Original_EMail) AND (`Password` = @Original_Password) AND (`Pin` = @Original_Pin) AND (`RegDateTime` = @Original_RegDateTime) AND (`BookingCount` = @Original_BookingCount) AND (`CancelCount` = @Original_CancelCount) AND (`InsertTime` = @Original_InsertTime) AND (`UpdateTime` = @Original_UpdateTime) AND (`PhoneModel` = @Original_PhoneModel) AND (`OS` = @Original_OS) AND (`CountryCode` = @Original_CountryCode) AND (`Country` = @Original_Country) AND (`EMailSubcription` = @Original_EMailSubcription) AND (`RequestSendTime` = @Original_RequestSendTime) AND (`PinExpairDuration` = @Original_PinExpairDuration) AND (`PreferedLangauge` = @Original_PreferedLangauge) AND (`login` = @Original_login) AND (`LastLogin` = @Original_LastLogin) AND (`PinValidate` = @Original_PinValidate))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Mobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Mobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_DeviceID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "DeviceID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Title";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Title";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_EMail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "EMail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Password";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "Password";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Pin";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Pin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_RegDateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "RegDateTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_BookingCount";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BookingCount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CancelCount";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CancelCount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_InsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "InsertTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_UpdateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "UpdateTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PhoneModel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PhoneModel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_OS";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "OS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CountryCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CountryCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Country";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Country";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_EMailSubcription";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "EMailSubcription";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_RequestSendTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "RequestSendTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PinExpairDuration";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "PinExpairDuration";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PreferedLangauge";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PreferedLangauge";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_login";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "login";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_LastLogin";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "LastLogin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PinValidate";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "PinValidate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `ClientMobileRegistrationOld` (`Mobile`, `DeviceID`, `Title`, `Name`, `EMail`, `Password`, `Pin`, `RegDateTime`, `BookingCount`, `CancelCount`, `InsertTime`, `UpdateTime`, `PhoneModel`, `OS`, `CountryCode`, `Country`, `EMailSubcription`, `RequestSendTime`, `PinExpairDuration`, `PreferedLangauge`, `login`, `LastLogin`, `PinValidate`) VALUES (@Mobile, @DeviceID, @Title, @Name, @EMail, @Password, @Pin, @RegDateTime, @BookingCount, @CancelCount, @InsertTime, @UpdateTime, @PhoneModel, @OS, @CountryCode, @Country, @EMailSubcription, @RequestSendTime, @PinExpairDuration, @PreferedLangauge, @login, @LastLogin, @PinValidate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Mobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Mobile";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DeviceID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "DeviceID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Title";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Title";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@EMail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "EMail";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Password";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "Password";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Pin";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Pin";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RegDateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "RegDateTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingCount";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BookingCount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CancelCount";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CancelCount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@InsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "InsertTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@UpdateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "UpdateTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PhoneModel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PhoneModel";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@OS";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "OS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CountryCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CountryCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Country";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Country";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@EMailSubcription";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "EMailSubcription";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RequestSendTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "RequestSendTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PinExpairDuration";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "PinExpairDuration";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PreferedLangauge";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PreferedLangauge";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@login";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "login";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LastLogin";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "LastLogin";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PinValidate";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "PinValidate";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `ClientMobileRegistrationOld` SET `Mobile` = @Mobile, `DeviceID` = @Device" +
                "ID, `Title` = @Title, `Name` = @Name, `EMail` = @EMail, `Password` = @Password, " +
                "`Pin` = @Pin, `RegDateTime` = @RegDateTime, `BookingCount` = @BookingCount, `Can" +
                "celCount` = @CancelCount, `InsertTime` = @InsertTime, `UpdateTime` = @UpdateTime" +
                ", `PhoneModel` = @PhoneModel, `OS` = @OS, `CountryCode` = @CountryCode, `Country" +
                "` = @Country, `EMailSubcription` = @EMailSubcription, `RequestSendTime` = @Reque" +
                "stSendTime, `PinExpairDuration` = @PinExpairDuration, `PreferedLangauge` = @Pref" +
                "eredLangauge, `login` = @login, `LastLogin` = @LastLogin, `PinValidate` = @PinVa" +
                "lidate WHERE ((`Mobile` = @Original_Mobile) AND (`DeviceID` = @Original_DeviceID" +
                ") AND (`Title` = @Original_Title) AND (`Name` = @Original_Name) AND (`EMail` = @" +
                "Original_EMail) AND (`Password` = @Original_Password) AND (`Pin` = @Original_Pin" +
                ") AND (`RegDateTime` = @Original_RegDateTime) AND (`BookingCount` = @Original_Bo" +
                "okingCount) AND (`CancelCount` = @Original_CancelCount) AND (`InsertTime` = @Ori" +
                "ginal_InsertTime) AND (`UpdateTime` = @Original_UpdateTime) AND (`PhoneModel` = " +
                "@Original_PhoneModel) AND (`OS` = @Original_OS) AND (`CountryCode` = @Original_C" +
                "ountryCode) AND (`Country` = @Original_Country) AND (`EMailSubcription` = @Origi" +
                "nal_EMailSubcription) AND (`RequestSendTime` = @Original_RequestSendTime) AND (`" +
                "PinExpairDuration` = @Original_PinExpairDuration) AND (`PreferedLangauge` = @Ori" +
                "ginal_PreferedLangauge) AND (`login` = @Original_login) AND (`LastLogin` = @Orig" +
                "inal_LastLogin) AND (`PinValidate` = @Original_PinValidate))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Mobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Mobile";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DeviceID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "DeviceID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Title";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Title";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@EMail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "EMail";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Password";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "Password";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Pin";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Pin";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RegDateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "RegDateTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingCount";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BookingCount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CancelCount";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CancelCount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@InsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "InsertTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@UpdateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "UpdateTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PhoneModel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PhoneModel";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@OS";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "OS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CountryCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CountryCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Country";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Country";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@EMailSubcription";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "EMailSubcription";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RequestSendTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "RequestSendTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PinExpairDuration";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "PinExpairDuration";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PreferedLangauge";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PreferedLangauge";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@login";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "login";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LastLogin";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "LastLogin";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PinValidate";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "PinValidate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Mobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Mobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_DeviceID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "DeviceID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Title";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Title";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_EMail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "EMail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Password";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "Password";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Pin";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Pin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_RegDateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "RegDateTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_BookingCount";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BookingCount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CancelCount";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CancelCount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_InsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "InsertTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_UpdateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "UpdateTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PhoneModel";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PhoneModel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_OS";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "OS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CountryCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CountryCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Country";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Country";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_EMailSubcription";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "EMailSubcription";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_RequestSendTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "RequestSendTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PinExpairDuration";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "PinExpairDuration";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PreferedLangauge";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PreferedLangauge";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_login";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "login";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_LastLogin";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "LastLogin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PinValidate";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "PinValidate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `Mobile`, `DeviceID`, `Title`, `Name`, `EMail`, `Password`, `Pin`, `RegDateTime`, `BookingCount`, `CancelCount`, `InsertTime`, `UpdateTime`, `PhoneModel`, `OS`, `CountryCode`, `Country`, `EMailSubcription`, `RequestSendTime`, `PinExpairDuration`, `PreferedLangauge`, `login`, `LastLogin`, `PinValidate` FROM `ClientMobileRegistrationOld`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.ClientMobileRegistrationOldDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.ClientMobileRegistrationOldDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.ClientMobileRegistrationOldDataTable dataTable = new budgetDataSet.ClientMobileRegistrationOldDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.ClientMobileRegistrationOldDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ClientMobileRegistrationOld");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_Mobile, 
                    string Original_DeviceID, 
                    string Original_Title, 
                    string Original_Name, 
                    string Original_EMail, 
                    string Original_Password, 
                    int Original_Pin, 
                    System.DateTime Original_RegDateTime, 
                    int Original_BookingCount, 
                    int Original_CancelCount, 
                    System.DateTime Original_InsertTime, 
                    System.DateTime Original_UpdateTime, 
                    string Original_PhoneModel, 
                    string Original_OS, 
                    string Original_CountryCode, 
                    string Original_Country, 
                    byte Original_EMailSubcription, 
                    System.DateTime Original_RequestSendTime, 
                    int Original_PinExpairDuration, 
                    string Original_PreferedLangauge, 
                    int Original_login, 
                    System.DateTime Original_LastLogin, 
                    byte Original_PinValidate) {
            if ((Original_Mobile == null)) {
                throw new global::System.ArgumentNullException("Original_Mobile");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Mobile));
            }
            if ((Original_DeviceID == null)) {
                throw new global::System.ArgumentNullException("Original_DeviceID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_DeviceID));
            }
            if ((Original_Title == null)) {
                throw new global::System.ArgumentNullException("Original_Title");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Title));
            }
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Name));
            }
            if ((Original_EMail == null)) {
                throw new global::System.ArgumentNullException("Original_EMail");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_EMail));
            }
            if ((Original_Password == null)) {
                throw new global::System.ArgumentNullException("Original_Password");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Password));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_Pin));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_RegDateTime));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_BookingCount));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_CancelCount));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_InsertTime));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_UpdateTime));
            if ((Original_PhoneModel == null)) {
                throw new global::System.ArgumentNullException("Original_PhoneModel");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_PhoneModel));
            }
            if ((Original_OS == null)) {
                throw new global::System.ArgumentNullException("Original_OS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_OS));
            }
            if ((Original_CountryCode == null)) {
                throw new global::System.ArgumentNullException("Original_CountryCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_CountryCode));
            }
            if ((Original_Country == null)) {
                throw new global::System.ArgumentNullException("Original_Country");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Country));
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((byte)(Original_EMailSubcription));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_RequestSendTime));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_PinExpairDuration));
            if ((Original_PreferedLangauge == null)) {
                throw new global::System.ArgumentNullException("Original_PreferedLangauge");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_PreferedLangauge));
            }
            this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_login));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTime)(Original_LastLogin));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((byte)(Original_PinValidate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Mobile, 
                    string DeviceID, 
                    string Title, 
                    string Name, 
                    string EMail, 
                    string Password, 
                    int Pin, 
                    System.DateTime RegDateTime, 
                    int BookingCount, 
                    int CancelCount, 
                    System.DateTime InsertTime, 
                    System.DateTime UpdateTime, 
                    string PhoneModel, 
                    string OS, 
                    string CountryCode, 
                    string Country, 
                    byte EMailSubcription, 
                    System.DateTime RequestSendTime, 
                    int PinExpairDuration, 
                    string PreferedLangauge, 
                    int login, 
                    System.DateTime LastLogin, 
                    byte PinValidate) {
            if ((Mobile == null)) {
                throw new global::System.ArgumentNullException("Mobile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Mobile));
            }
            if ((DeviceID == null)) {
                throw new global::System.ArgumentNullException("DeviceID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DeviceID));
            }
            if ((Title == null)) {
                throw new global::System.ArgumentNullException("Title");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Title));
            }
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Name));
            }
            if ((EMail == null)) {
                throw new global::System.ArgumentNullException("EMail");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(EMail));
            }
            if ((Password == null)) {
                throw new global::System.ArgumentNullException("Password");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Password));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Pin));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(RegDateTime));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(BookingCount));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(CancelCount));
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(InsertTime));
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(UpdateTime));
            if ((PhoneModel == null)) {
                throw new global::System.ArgumentNullException("PhoneModel");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(PhoneModel));
            }
            if ((OS == null)) {
                throw new global::System.ArgumentNullException("OS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(OS));
            }
            if ((CountryCode == null)) {
                throw new global::System.ArgumentNullException("CountryCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(CountryCode));
            }
            if ((Country == null)) {
                throw new global::System.ArgumentNullException("Country");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Country));
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((byte)(EMailSubcription));
            this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(RequestSendTime));
            this.Adapter.InsertCommand.Parameters[18].Value = ((int)(PinExpairDuration));
            if ((PreferedLangauge == null)) {
                throw new global::System.ArgumentNullException("PreferedLangauge");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(PreferedLangauge));
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(login));
            this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(LastLogin));
            this.Adapter.InsertCommand.Parameters[22].Value = ((byte)(PinValidate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Mobile, 
                    string DeviceID, 
                    string Title, 
                    string Name, 
                    string EMail, 
                    string Password, 
                    int Pin, 
                    System.DateTime RegDateTime, 
                    int BookingCount, 
                    int CancelCount, 
                    System.DateTime InsertTime, 
                    System.DateTime UpdateTime, 
                    string PhoneModel, 
                    string OS, 
                    string CountryCode, 
                    string Country, 
                    byte EMailSubcription, 
                    System.DateTime RequestSendTime, 
                    int PinExpairDuration, 
                    string PreferedLangauge, 
                    int login, 
                    System.DateTime LastLogin, 
                    byte PinValidate, 
                    string Original_Mobile, 
                    string Original_DeviceID, 
                    string Original_Title, 
                    string Original_Name, 
                    string Original_EMail, 
                    string Original_Password, 
                    int Original_Pin, 
                    System.DateTime Original_RegDateTime, 
                    int Original_BookingCount, 
                    int Original_CancelCount, 
                    System.DateTime Original_InsertTime, 
                    System.DateTime Original_UpdateTime, 
                    string Original_PhoneModel, 
                    string Original_OS, 
                    string Original_CountryCode, 
                    string Original_Country, 
                    byte Original_EMailSubcription, 
                    System.DateTime Original_RequestSendTime, 
                    int Original_PinExpairDuration, 
                    string Original_PreferedLangauge, 
                    int Original_login, 
                    System.DateTime Original_LastLogin, 
                    byte Original_PinValidate) {
            if ((Mobile == null)) {
                throw new global::System.ArgumentNullException("Mobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Mobile));
            }
            if ((DeviceID == null)) {
                throw new global::System.ArgumentNullException("DeviceID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DeviceID));
            }
            if ((Title == null)) {
                throw new global::System.ArgumentNullException("Title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Title));
            }
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Name));
            }
            if ((EMail == null)) {
                throw new global::System.ArgumentNullException("EMail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(EMail));
            }
            if ((Password == null)) {
                throw new global::System.ArgumentNullException("Password");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Password));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Pin));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(RegDateTime));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(BookingCount));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(CancelCount));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(InsertTime));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(UpdateTime));
            if ((PhoneModel == null)) {
                throw new global::System.ArgumentNullException("PhoneModel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(PhoneModel));
            }
            if ((OS == null)) {
                throw new global::System.ArgumentNullException("OS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(OS));
            }
            if ((CountryCode == null)) {
                throw new global::System.ArgumentNullException("CountryCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(CountryCode));
            }
            if ((Country == null)) {
                throw new global::System.ArgumentNullException("Country");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Country));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((byte)(EMailSubcription));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(RequestSendTime));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(PinExpairDuration));
            if ((PreferedLangauge == null)) {
                throw new global::System.ArgumentNullException("PreferedLangauge");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(PreferedLangauge));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(login));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(LastLogin));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((byte)(PinValidate));
            if ((Original_Mobile == null)) {
                throw new global::System.ArgumentNullException("Original_Mobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Mobile));
            }
            if ((Original_DeviceID == null)) {
                throw new global::System.ArgumentNullException("Original_DeviceID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_DeviceID));
            }
            if ((Original_Title == null)) {
                throw new global::System.ArgumentNullException("Original_Title");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Title));
            }
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Name));
            }
            if ((Original_EMail == null)) {
                throw new global::System.ArgumentNullException("Original_EMail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_EMail));
            }
            if ((Original_Password == null)) {
                throw new global::System.ArgumentNullException("Original_Password");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Password));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_Pin));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_RegDateTime));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_BookingCount));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_CancelCount));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(Original_InsertTime));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(Original_UpdateTime));
            if ((Original_PhoneModel == null)) {
                throw new global::System.ArgumentNullException("Original_PhoneModel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_PhoneModel));
            }
            if ((Original_OS == null)) {
                throw new global::System.ArgumentNullException("Original_OS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_OS));
            }
            if ((Original_CountryCode == null)) {
                throw new global::System.ArgumentNullException("Original_CountryCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_CountryCode));
            }
            if ((Original_Country == null)) {
                throw new global::System.ArgumentNullException("Original_Country");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_Country));
            }
            this.Adapter.UpdateCommand.Parameters[39].Value = ((byte)(Original_EMailSubcription));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(Original_RequestSendTime));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_PinExpairDuration));
            if ((Original_PreferedLangauge == null)) {
                throw new global::System.ArgumentNullException("Original_PreferedLangauge");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_PreferedLangauge));
            }
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_login));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(Original_LastLogin));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((byte)(Original_PinValidate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DeviceID, 
                    string Title, 
                    string Name, 
                    string EMail, 
                    string Password, 
                    int Pin, 
                    System.DateTime RegDateTime, 
                    int BookingCount, 
                    int CancelCount, 
                    System.DateTime InsertTime, 
                    System.DateTime UpdateTime, 
                    string PhoneModel, 
                    string OS, 
                    string CountryCode, 
                    string Country, 
                    byte EMailSubcription, 
                    System.DateTime RequestSendTime, 
                    int PinExpairDuration, 
                    string PreferedLangauge, 
                    int login, 
                    System.DateTime LastLogin, 
                    byte PinValidate, 
                    string Original_Mobile, 
                    string Original_DeviceID, 
                    string Original_Title, 
                    string Original_Name, 
                    string Original_EMail, 
                    string Original_Password, 
                    int Original_Pin, 
                    System.DateTime Original_RegDateTime, 
                    int Original_BookingCount, 
                    int Original_CancelCount, 
                    System.DateTime Original_InsertTime, 
                    System.DateTime Original_UpdateTime, 
                    string Original_PhoneModel, 
                    string Original_OS, 
                    string Original_CountryCode, 
                    string Original_Country, 
                    byte Original_EMailSubcription, 
                    System.DateTime Original_RequestSendTime, 
                    int Original_PinExpairDuration, 
                    string Original_PreferedLangauge, 
                    int Original_login, 
                    System.DateTime Original_LastLogin, 
                    byte Original_PinValidate) {
            return this.Update(Original_Mobile, DeviceID, Title, Name, EMail, Password, Pin, RegDateTime, BookingCount, CancelCount, InsertTime, UpdateTime, PhoneModel, OS, CountryCode, Country, EMailSubcription, RequestSendTime, PinExpairDuration, PreferedLangauge, login, LastLogin, PinValidate, Original_Mobile, Original_DeviceID, Original_Title, Original_Name, Original_EMail, Original_Password, Original_Pin, Original_RegDateTime, Original_BookingCount, Original_CancelCount, Original_InsertTime, Original_UpdateTime, Original_PhoneModel, Original_OS, Original_CountryCode, Original_Country, Original_EMailSubcription, Original_RequestSendTime, Original_PinExpairDuration, Original_PreferedLangauge, Original_login, Original_LastLogin, Original_PinValidate);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DespatchBookingTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DespatchBookingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DespatchBooking";
            tableMapping.ColumnMappings.Add("AutoID", "AutoID");
            tableMapping.ColumnMappings.Add("BookingID", "BookingID");
            tableMapping.ColumnMappings.Add("BookingStatus", "BookingStatus");
            tableMapping.ColumnMappings.Add("RefNo", "RefNo");
            tableMapping.ColumnMappings.Add("ImiNo", "ImiNo");
            tableMapping.ColumnMappings.Add("CabNo", "CabNo");
            tableMapping.ColumnMappings.Add("ClientMobile", "ClientMobile");
            tableMapping.ColumnMappings.Add("ClientName", "ClientName");
            tableMapping.ColumnMappings.Add("ClientAddress", "ClientAddress");
            tableMapping.ColumnMappings.Add("LandMark", "LandMark");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("RQTime", "RQTime");
            tableMapping.ColumnMappings.Add("LAT", "LAT");
            tableMapping.ColumnMappings.Add("LON", "LON");
            tableMapping.ColumnMappings.Add("AcceptTime", "AcceptTime");
            tableMapping.ColumnMappings.Add("AtThePlaceTime", "AtThePlaceTime");
            tableMapping.ColumnMappings.Add("MeterOnTime", "MeterOnTime");
            tableMapping.ColumnMappings.Add("MeterOffTime", "MeterOffTime");
            tableMapping.ColumnMappings.Add("MeterOffLAT", "MeterOffLAT");
            tableMapping.ColumnMappings.Add("MeterOffLON", "MeterOffLON");
            tableMapping.ColumnMappings.Add("MeterOffAddress", "MeterOffAddress");
            tableMapping.ColumnMappings.Add("RunningKM", "RunningKM");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("InitialKm", "InitialKm");
            tableMapping.ColumnMappings.Add("PerKMCharge", "PerKMCharge");
            tableMapping.ColumnMappings.Add("Flag", "Flag");
            tableMapping.ColumnMappings.Add("WaitingPerMinute", "WaitingPerMinute");
            tableMapping.ColumnMappings.Add("FixAmount", "FixAmount");
            tableMapping.ColumnMappings.Add("RecordInsertTime", "RecordInsertTime");
            tableMapping.ColumnMappings.Add("GCMFlag", "GCMFlag");
            tableMapping.ColumnMappings.Add("kangarooupdate", "kangarooupdate");
            tableMapping.ColumnMappings.Add("WaitingTime", "WaitingTime");
            tableMapping.ColumnMappings.Add("WaitingCost", "WaitingCost");
            tableMapping.ColumnMappings.Add("Rating", "Rating");
            tableMapping.ColumnMappings.Add("DNo", "DNo");
            tableMapping.ColumnMappings.Add("DRating", "DRating");
            tableMapping.ColumnMappings.Add("CabType", "CabType");
            tableMapping.ColumnMappings.Add("BookingType", "BookingType");
            tableMapping.ColumnMappings.Add("FreeWaiting", "FreeWaiting");
            tableMapping.ColumnMappings.Add("PCode", "PCode");
            tableMapping.ColumnMappings.Add("PaymentType", "PaymentType");
            tableMapping.ColumnMappings.Add("DiscountAmount", "DiscountAmount");
            tableMapping.ColumnMappings.Add("DRatinNew", "DRatinNew");
            tableMapping.ColumnMappings.Add("Paid", "Paid");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `DespatchBooking` (`BookingID`, `BookingStatus`, `RefNo`, `ImiNo`, `CabNo`, `ClientMobile`, `ClientName`, `ClientAddress`, `LandMark`, `Remark`, `RQTime`, `LAT`, `LON`, `AcceptTime`, `AtThePlaceTime`, `MeterOnTime`, `MeterOffTime`, `MeterOffLAT`, `MeterOffLON`, `MeterOffAddress`, `RunningKM`, `Amount`, `InitialKm`, `PerKMCharge`, `Flag`, `WaitingPerMinute`, `FixAmount`, `RecordInsertTime`, `GCMFlag`, `kangarooupdate`, `WaitingTime`, `WaitingCost`, `Rating`, `DNo`, `DRating`, `CabType`, `BookingType`, `FreeWaiting`, `PCode`, `PaymentType`, `DiscountAmount`, `DRatinNew`, `Paid`) VALUES (@BookingID, @BookingStatus, @RefNo, @ImiNo, @CabNo, @ClientMobile, @ClientName, @ClientAddress, @LandMark, @Remark, @RQTime, @LAT, @LON, @AcceptTime, @AtThePlaceTime, @MeterOnTime, @MeterOffTime, @MeterOffLAT, @MeterOffLON, @MeterOffAddress, @RunningKM, @Amount, @InitialKm, @PerKMCharge, @Flag, @WaitingPerMinute, @FixAmount, @RecordInsertTime, @GCMFlag, @kangarooupdate, @WaitingTime, @WaitingCost, @Rating, @DNo, @DRating, @CabType, @BookingType, @FreeWaiting, @PCode, @PaymentType, @DiscountAmount, @DRatinNew, @Paid)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingStatus";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "BookingStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RefNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "RefNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ImiNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ImiNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientMobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientMobile";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientAddress";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LandMark";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "LandMark";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Remark";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Remark";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RQTime";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "RQTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "LAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "LON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@AcceptTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "AcceptTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@AtThePlaceTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "AtThePlaceTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOnTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterOnTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffLAT";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffLAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffLON";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffLON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffAddress";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RunningKM";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "RunningKM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "Amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@InitialKm";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "InitialKm";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PerKMCharge";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "PerKMCharge";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Flag";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Flag";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingPerMinute";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingPerMinute";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FixAmount";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "FixAmount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RecordInsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "RecordInsertTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@GCMFlag";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "GCMFlag";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kangarooupdate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kangarooupdate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingTime";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingCost";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingCost";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Rating";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Rating";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "DNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DRating";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "DRating";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "CabType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "BookingType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FreeWaiting";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FreeWaiting";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PaymentType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PaymentType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DiscountAmount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "DiscountAmount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DRatinNew";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "DRatinNew";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Paid";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Paid";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `AutoID`, `BookingID`, `BookingStatus`, `RefNo`, `ImiNo`, `CabNo`, `ClientMobile`, `ClientName`, `ClientAddress`, `LandMark`, `Remark`, `RQTime`, `LAT`, `LON`, `AcceptTime`, `AtThePlaceTime`, `MeterOnTime`, `MeterOffTime`, `MeterOffLAT`, `MeterOffLON`, `MeterOffAddress`, `RunningKM`, `Amount`, `InitialKm`, `PerKMCharge`, `Flag`, `WaitingPerMinute`, `FixAmount`, `RecordInsertTime`, `GCMFlag`, `kangarooupdate`, `WaitingTime`, `WaitingCost`, `Rating`, `DNo`, `DRating`, `CabType`, `BookingType`, `FreeWaiting`, `PCode`, `PaymentType`, `DiscountAmount`, `DRatinNew`, `Paid` FROM `DespatchBooking`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.DespatchBookingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.DespatchBookingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.DespatchBookingDataTable dataTable = new budgetDataSet.DespatchBookingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.DespatchBookingDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "DespatchBooking");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long BookingID, 
                    string BookingStatus, 
                    string RefNo, 
                    string ImiNo, 
                    string CabNo, 
                    string ClientMobile, 
                    string ClientName, 
                    string ClientAddress, 
                    string LandMark, 
                    string Remark, 
                    string RQTime, 
                    double LAT, 
                    double LON, 
                    System.DateTime AcceptTime, 
                    System.DateTime AtThePlaceTime, 
                    System.DateTime MeterOnTime, 
                    System.DateTime MeterOffTime, 
                    float MeterOffLAT, 
                    float MeterOffLON, 
                    string MeterOffAddress, 
                    double RunningKM, 
                    double Amount, 
                    double InitialKm, 
                    double PerKMCharge, 
                    string Flag, 
                    float WaitingPerMinute, 
                    float FixAmount, 
                    System.DateTime RecordInsertTime, 
                    byte GCMFlag, 
                    int kangarooupdate, 
                    float WaitingTime, 
                    float WaitingCost, 
                    int Rating, 
                    string DNo, 
                    double DRating, 
                    string CabType, 
                    string BookingType, 
                    int FreeWaiting, 
                    string PCode, 
                    string PaymentType, 
                    double DiscountAmount, 
                    double DRatinNew, 
                    int Paid) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(BookingID));
            if ((BookingStatus == null)) {
                throw new global::System.ArgumentNullException("BookingStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BookingStatus));
            }
            if ((RefNo == null)) {
                throw new global::System.ArgumentNullException("RefNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(RefNo));
            }
            if ((ImiNo == null)) {
                throw new global::System.ArgumentNullException("ImiNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ImiNo));
            }
            if ((CabNo == null)) {
                throw new global::System.ArgumentNullException("CabNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CabNo));
            }
            if ((ClientMobile == null)) {
                throw new global::System.ArgumentNullException("ClientMobile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ClientMobile));
            }
            if ((ClientName == null)) {
                throw new global::System.ArgumentNullException("ClientName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ClientName));
            }
            if ((ClientAddress == null)) {
                throw new global::System.ArgumentNullException("ClientAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ClientAddress));
            }
            if ((LandMark == null)) {
                throw new global::System.ArgumentNullException("LandMark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(LandMark));
            }
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Remark));
            }
            if ((RQTime == null)) {
                throw new global::System.ArgumentNullException("RQTime");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(RQTime));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((double)(LAT));
            this.Adapter.InsertCommand.Parameters[12].Value = ((double)(LON));
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(AcceptTime));
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(AtThePlaceTime));
            this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(MeterOnTime));
            this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(MeterOffTime));
            this.Adapter.InsertCommand.Parameters[17].Value = ((float)(MeterOffLAT));
            this.Adapter.InsertCommand.Parameters[18].Value = ((float)(MeterOffLON));
            if ((MeterOffAddress == null)) {
                throw new global::System.ArgumentNullException("MeterOffAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(MeterOffAddress));
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((double)(RunningKM));
            this.Adapter.InsertCommand.Parameters[21].Value = ((double)(Amount));
            this.Adapter.InsertCommand.Parameters[22].Value = ((double)(InitialKm));
            this.Adapter.InsertCommand.Parameters[23].Value = ((double)(PerKMCharge));
            if ((Flag == null)) {
                throw new global::System.ArgumentNullException("Flag");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Flag));
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((float)(WaitingPerMinute));
            this.Adapter.InsertCommand.Parameters[26].Value = ((float)(FixAmount));
            this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(RecordInsertTime));
            this.Adapter.InsertCommand.Parameters[28].Value = ((byte)(GCMFlag));
            this.Adapter.InsertCommand.Parameters[29].Value = ((int)(kangarooupdate));
            this.Adapter.InsertCommand.Parameters[30].Value = ((float)(WaitingTime));
            this.Adapter.InsertCommand.Parameters[31].Value = ((float)(WaitingCost));
            this.Adapter.InsertCommand.Parameters[32].Value = ((int)(Rating));
            if ((DNo == null)) {
                throw new global::System.ArgumentNullException("DNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(DNo));
            }
            this.Adapter.InsertCommand.Parameters[34].Value = ((double)(DRating));
            if ((CabType == null)) {
                throw new global::System.ArgumentNullException("CabType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(CabType));
            }
            if ((BookingType == null)) {
                throw new global::System.ArgumentNullException("BookingType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(BookingType));
            }
            this.Adapter.InsertCommand.Parameters[37].Value = ((int)(FreeWaiting));
            if ((PCode == null)) {
                throw new global::System.ArgumentNullException("PCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(PCode));
            }
            if ((PaymentType == null)) {
                throw new global::System.ArgumentNullException("PaymentType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(PaymentType));
            }
            this.Adapter.InsertCommand.Parameters[40].Value = ((double)(DiscountAmount));
            this.Adapter.InsertCommand.Parameters[41].Value = ((double)(DRatinNew));
            this.Adapter.InsertCommand.Parameters[42].Value = ((int)(Paid));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DespatchBookingStatusTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DespatchBookingStatusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DespatchBookingStatus";
            tableMapping.ColumnMappings.Add("AutoNo", "AutoNo");
            tableMapping.ColumnMappings.Add("BookingID", "BookingID");
            tableMapping.ColumnMappings.Add("GCMId", "GCMId");
            tableMapping.ColumnMappings.Add("GCMCount", "GCMCount");
            tableMapping.ColumnMappings.Add("GCMSendTime", "GCMSendTime");
            tableMapping.ColumnMappings.Add("CabNo", "CabNo");
            tableMapping.ColumnMappings.Add("Flag", "Flag");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `DespatchBookingStatus` WHERE ((`AutoNo` = @Original_AutoNo) AND (`BookingID` = @Original_BookingID) AND (`GCMId` = @Original_GCMId) AND (`GCMCount` = @Original_GCMCount) AND (`GCMSendTime` = @Original_GCMSendTime) AND (`CabNo` = @Original_CabNo) AND (`Flag` = @Original_Flag))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoNo";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "AutoNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_GCMId";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "GCMId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_GCMCount";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "GCMCount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_GCMSendTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "GCMSendTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Flag";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "Flag";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `DespatchBookingStatus` (`BookingID`, `GCMId`, `GCMCount`, `GCMSendTi" +
                "me`, `CabNo`, `Flag`) VALUES (@BookingID, @GCMId, @GCMCount, @GCMSendTime, @CabN" +
                "o, @Flag)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@GCMId";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "GCMId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@GCMCount";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "GCMCount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@GCMSendTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "GCMSendTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Flag";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "Flag";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `DespatchBookingStatus` SET `BookingID` = @BookingID, `GCMId` = @GCMId, `GCMCount` = @GCMCount, `GCMSendTime` = @GCMSendTime, `CabNo` = @CabNo, `Flag` = @Flag WHERE ((`AutoNo` = @Original_AutoNo) AND (`BookingID` = @Original_BookingID) AND (`GCMId` = @Original_GCMId) AND (`GCMCount` = @Original_GCMCount) AND (`GCMSendTime` = @Original_GCMSendTime) AND (`CabNo` = @Original_CabNo) AND (`Flag` = @Original_Flag))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@GCMId";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "GCMId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@GCMCount";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "GCMCount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@GCMSendTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "GCMSendTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Flag";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "Flag";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoNo";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "AutoNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_GCMId";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "GCMId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_GCMCount";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "GCMCount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_GCMSendTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "GCMSendTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Flag";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "Flag";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `AutoNo`, `BookingID`, `GCMId`, `GCMCount`, `GCMSendTime`, `CabNo`, `Flag`" +
                " FROM `DespatchBookingStatus`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.DespatchBookingStatusDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.DespatchBookingStatusDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.DespatchBookingStatusDataTable dataTable = new budgetDataSet.DespatchBookingStatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.DespatchBookingStatusDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "DespatchBookingStatus");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_AutoNo, long Original_BookingID, string Original_GCMId, byte Original_GCMCount, System.DateTime Original_GCMSendTime, string Original_CabNo, byte Original_Flag) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_AutoNo));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_BookingID));
            if ((Original_GCMId == null)) {
                throw new global::System.ArgumentNullException("Original_GCMId");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_GCMId));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((byte)(Original_GCMCount));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_GCMSendTime));
            if ((Original_CabNo == null)) {
                throw new global::System.ArgumentNullException("Original_CabNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_CabNo));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((byte)(Original_Flag));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long BookingID, string GCMId, byte GCMCount, System.DateTime GCMSendTime, string CabNo, byte Flag) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(BookingID));
            if ((GCMId == null)) {
                throw new global::System.ArgumentNullException("GCMId");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(GCMId));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((byte)(GCMCount));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(GCMSendTime));
            if ((CabNo == null)) {
                throw new global::System.ArgumentNullException("CabNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CabNo));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((byte)(Flag));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long BookingID, string GCMId, byte GCMCount, System.DateTime GCMSendTime, string CabNo, byte Flag, long Original_AutoNo, long Original_BookingID, string Original_GCMId, byte Original_GCMCount, System.DateTime Original_GCMSendTime, string Original_CabNo, byte Original_Flag) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(BookingID));
            if ((GCMId == null)) {
                throw new global::System.ArgumentNullException("GCMId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(GCMId));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((byte)(GCMCount));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(GCMSendTime));
            if ((CabNo == null)) {
                throw new global::System.ArgumentNullException("CabNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CabNo));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((byte)(Flag));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Original_AutoNo));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Original_BookingID));
            if ((Original_GCMId == null)) {
                throw new global::System.ArgumentNullException("Original_GCMId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_GCMId));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((byte)(Original_GCMCount));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_GCMSendTime));
            if ((Original_CabNo == null)) {
                throw new global::System.ArgumentNullException("Original_CabNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_CabNo));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((byte)(Original_Flag));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DisEngageBookingTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DisEngageBookingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DisEngageBooking";
            tableMapping.ColumnMappings.Add("AutoID", "AutoID");
            tableMapping.ColumnMappings.Add("BookingID", "BookingID");
            tableMapping.ColumnMappings.Add("RefNo", "RefNo");
            tableMapping.ColumnMappings.Add("ClientMobile", "ClientMobile");
            tableMapping.ColumnMappings.Add("ClientName", "ClientName");
            tableMapping.ColumnMappings.Add("DisTime", "DisTime");
            tableMapping.ColumnMappings.Add("CabNo", "CabNo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `DisEngageBooking` WHERE ((`AutoID` = @Original_AutoID) AND (`BookingID` = @Original_BookingID) AND (`RefNo` = @Original_RefNo) AND (`ClientMobile` = @Original_ClientMobile) AND (`ClientName` = @Original_ClientName) AND (`DisTime` = @Original_DisTime) AND (`CabNo` = @Original_CabNo))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AutoID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_RefNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "RefNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ClientMobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientMobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ClientName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_DisTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "DisTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `DisEngageBooking` (`BookingID`, `RefNo`, `ClientMobile`, `ClientName" +
                "`, `DisTime`, `CabNo`) VALUES (@BookingID, @RefNo, @ClientMobile, @ClientName, @" +
                "DisTime, @CabNo)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RefNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "RefNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientMobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientMobile";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DisTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "DisTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `DisEngageBooking` SET `BookingID` = @BookingID, `RefNo` = @RefNo, `ClientMobile` = @ClientMobile, `ClientName` = @ClientName, `DisTime` = @DisTime, `CabNo` = @CabNo WHERE ((`AutoID` = @Original_AutoID) AND (`BookingID` = @Original_BookingID) AND (`RefNo` = @Original_RefNo) AND (`ClientMobile` = @Original_ClientMobile) AND (`ClientName` = @Original_ClientName) AND (`DisTime` = @Original_DisTime) AND (`CabNo` = @Original_CabNo))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RefNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "RefNo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientMobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientMobile";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DisTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "DisTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AutoID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_RefNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "RefNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ClientMobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientMobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ClientName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_DisTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "DisTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `AutoID`, `BookingID`, `RefNo`, `ClientMobile`, `ClientName`, `DisTime`, `" +
                "CabNo` FROM `DisEngageBooking`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.DisEngageBookingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.DisEngageBookingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.DisEngageBookingDataTable dataTable = new budgetDataSet.DisEngageBookingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.DisEngageBookingDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "DisEngageBooking");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_AutoID, long Original_BookingID, string Original_RefNo, string Original_ClientMobile, string Original_ClientName, System.DateTime Original_DisTime, string Original_CabNo) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AutoID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_BookingID));
            if ((Original_RefNo == null)) {
                throw new global::System.ArgumentNullException("Original_RefNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_RefNo));
            }
            if ((Original_ClientMobile == null)) {
                throw new global::System.ArgumentNullException("Original_ClientMobile");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ClientMobile));
            }
            if ((Original_ClientName == null)) {
                throw new global::System.ArgumentNullException("Original_ClientName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ClientName));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_DisTime));
            if ((Original_CabNo == null)) {
                throw new global::System.ArgumentNullException("Original_CabNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_CabNo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long BookingID, string RefNo, string ClientMobile, string ClientName, System.DateTime DisTime, string CabNo) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(BookingID));
            if ((RefNo == null)) {
                throw new global::System.ArgumentNullException("RefNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(RefNo));
            }
            if ((ClientMobile == null)) {
                throw new global::System.ArgumentNullException("ClientMobile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ClientMobile));
            }
            if ((ClientName == null)) {
                throw new global::System.ArgumentNullException("ClientName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ClientName));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(DisTime));
            if ((CabNo == null)) {
                throw new global::System.ArgumentNullException("CabNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CabNo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long BookingID, string RefNo, string ClientMobile, string ClientName, System.DateTime DisTime, string CabNo, int Original_AutoID, long Original_BookingID, string Original_RefNo, string Original_ClientMobile, string Original_ClientName, System.DateTime Original_DisTime, string Original_CabNo) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(BookingID));
            if ((RefNo == null)) {
                throw new global::System.ArgumentNullException("RefNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(RefNo));
            }
            if ((ClientMobile == null)) {
                throw new global::System.ArgumentNullException("ClientMobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ClientMobile));
            }
            if ((ClientName == null)) {
                throw new global::System.ArgumentNullException("ClientName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ClientName));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(DisTime));
            if ((CabNo == null)) {
                throw new global::System.ArgumentNullException("CabNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CabNo));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_AutoID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Original_BookingID));
            if ((Original_RefNo == null)) {
                throw new global::System.ArgumentNullException("Original_RefNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_RefNo));
            }
            if ((Original_ClientMobile == null)) {
                throw new global::System.ArgumentNullException("Original_ClientMobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_ClientMobile));
            }
            if ((Original_ClientName == null)) {
                throw new global::System.ArgumentNullException("Original_ClientName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_ClientName));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_DisTime));
            if ((Original_CabNo == null)) {
                throw new global::System.ArgumentNullException("Original_CabNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_CabNo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class driver_log_onoffTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public driver_log_onoffTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "driver_log_onoff";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("imei", "imei");
            tableMapping.ColumnMappings.Add("driver_id", "driver_id");
            tableMapping.ColumnMappings.Add("vehicle_id", "vehicle_id");
            tableMapping.ColumnMappings.Add("login_time", "login_time");
            tableMapping.ColumnMappings.Add("login_location", "login_location");
            tableMapping.ColumnMappings.Add("insert_time", "insert_time");
            tableMapping.ColumnMappings.Add("logoff_time", "logoff_time");
            tableMapping.ColumnMappings.Add("logoff_location", "logoff_location");
            tableMapping.ColumnMappings.Add("update_time", "update_time");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `driver_log_onoff` WHERE ((`id` = @Original_id) AND (`imei` = @Original_imei) AND (`driver_id` = @Original_driver_id) AND (`vehicle_id` = @Original_vehicle_id) AND (`login_time` = @Original_login_time) AND (`login_location` = @Original_login_location) AND (`insert_time` = @Original_insert_time) AND (`logoff_time` = @Original_logoff_time) AND (`logoff_location` = @Original_logoff_location) AND (`update_time` = @Original_update_time))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_imei";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "imei";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driver_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_vehicle_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "vehicle_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_login_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "login_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_login_location";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login_location";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_insert_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "insert_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logoff_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "logoff_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logoff_location";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logoff_location";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_update_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "update_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `driver_log_onoff` (`imei`, `driver_id`, `vehicle_id`, `login_time`, `login_location`, `insert_time`, `logoff_time`, `logoff_location`, `update_time`) VALUES (@imei, @driver_id, @vehicle_id, @login_time, @login_location, @insert_time, @logoff_time, @logoff_location, @update_time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@imei";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "imei";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driver_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@vehicle_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "vehicle_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@login_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "login_time";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@login_location";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login_location";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@insert_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "insert_time";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logoff_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "logoff_time";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logoff_location";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logoff_location";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@update_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "update_time";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `driver_log_onoff` SET `imei` = @imei, `driver_id` = @driver_id, `vehicle_id` = @vehicle_id, `login_time` = @login_time, `login_location` = @login_location, `insert_time` = @insert_time, `logoff_time` = @logoff_time, `logoff_location` = @logoff_location, `update_time` = @update_time WHERE ((`id` = @Original_id) AND (`imei` = @Original_imei) AND (`driver_id` = @Original_driver_id) AND (`vehicle_id` = @Original_vehicle_id) AND (`login_time` = @Original_login_time) AND (`login_location` = @Original_login_location) AND (`insert_time` = @Original_insert_time) AND (`logoff_time` = @Original_logoff_time) AND (`logoff_location` = @Original_logoff_location) AND (`update_time` = @Original_update_time))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@imei";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "imei";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driver_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@vehicle_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "vehicle_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@login_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "login_time";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@login_location";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login_location";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@insert_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "insert_time";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logoff_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "logoff_time";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logoff_location";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logoff_location";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@update_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "update_time";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_imei";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "imei";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driver_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_vehicle_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "vehicle_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_login_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "login_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_login_location";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "login_location";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_insert_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "insert_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logoff_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "logoff_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logoff_location";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logoff_location";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_update_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "update_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `id`, `imei`, `driver_id`, `vehicle_id`, `login_time`, `login_location`, `" +
                "insert_time`, `logoff_time`, `logoff_location`, `update_time` FROM `driver_log_o" +
                "noff`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.driver_log_onoffDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.driver_log_onoffDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.driver_log_onoffDataTable dataTable = new budgetDataSet.driver_log_onoffDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.driver_log_onoffDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "driver_log_onoff");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_imei, string Original_driver_id, int Original_vehicle_id, System.DateTime Original_login_time, string Original_login_location, System.DateTime Original_insert_time, System.DateTime Original_logoff_time, string Original_logoff_location, System.DateTime Original_update_time) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_imei == null)) {
                throw new global::System.ArgumentNullException("Original_imei");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_imei));
            }
            if ((Original_driver_id == null)) {
                throw new global::System.ArgumentNullException("Original_driver_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_driver_id));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_vehicle_id));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_login_time));
            if ((Original_login_location == null)) {
                throw new global::System.ArgumentNullException("Original_login_location");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_login_location));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_insert_time));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_logoff_time));
            if ((Original_logoff_location == null)) {
                throw new global::System.ArgumentNullException("Original_logoff_location");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_logoff_location));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_update_time));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string imei, string driver_id, int vehicle_id, System.DateTime login_time, string login_location, System.DateTime insert_time, System.DateTime logoff_time, string logoff_location, System.DateTime update_time) {
            if ((imei == null)) {
                throw new global::System.ArgumentNullException("imei");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(imei));
            }
            if ((driver_id == null)) {
                throw new global::System.ArgumentNullException("driver_id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(driver_id));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(vehicle_id));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(login_time));
            if ((login_location == null)) {
                throw new global::System.ArgumentNullException("login_location");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(login_location));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(insert_time));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(logoff_time));
            if ((logoff_location == null)) {
                throw new global::System.ArgumentNullException("logoff_location");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(logoff_location));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(update_time));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string imei, 
                    string driver_id, 
                    int vehicle_id, 
                    System.DateTime login_time, 
                    string login_location, 
                    System.DateTime insert_time, 
                    System.DateTime logoff_time, 
                    string logoff_location, 
                    System.DateTime update_time, 
                    int Original_id, 
                    string Original_imei, 
                    string Original_driver_id, 
                    int Original_vehicle_id, 
                    System.DateTime Original_login_time, 
                    string Original_login_location, 
                    System.DateTime Original_insert_time, 
                    System.DateTime Original_logoff_time, 
                    string Original_logoff_location, 
                    System.DateTime Original_update_time) {
            if ((imei == null)) {
                throw new global::System.ArgumentNullException("imei");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(imei));
            }
            if ((driver_id == null)) {
                throw new global::System.ArgumentNullException("driver_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(driver_id));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(vehicle_id));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(login_time));
            if ((login_location == null)) {
                throw new global::System.ArgumentNullException("login_location");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(login_location));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(insert_time));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(logoff_time));
            if ((logoff_location == null)) {
                throw new global::System.ArgumentNullException("logoff_location");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(logoff_location));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(update_time));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_id));
            if ((Original_imei == null)) {
                throw new global::System.ArgumentNullException("Original_imei");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_imei));
            }
            if ((Original_driver_id == null)) {
                throw new global::System.ArgumentNullException("Original_driver_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_driver_id));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_vehicle_id));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_login_time));
            if ((Original_login_location == null)) {
                throw new global::System.ArgumentNullException("Original_login_location");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_login_location));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_insert_time));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_logoff_time));
            if ((Original_logoff_location == null)) {
                throw new global::System.ArgumentNullException("Original_logoff_location");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_logoff_location));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_update_time));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class driver_mobile_registrationTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public driver_mobile_registrationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "driver_mobile_registration";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("mobile_no", "mobile_no");
            tableMapping.ColumnMappings.Add("imei_no", "imei_no");
            tableMapping.ColumnMappings.Add("vehicle_id", "vehicle_id");
            tableMapping.ColumnMappings.Add("driver_app_id", "driver_app_id");
            tableMapping.ColumnMappings.Add("send_time", "send_time");
            tableMapping.ColumnMappings.Add("addeddate", "addeddate");
            tableMapping.ColumnMappings.Add("updateddate", "updateddate");
            tableMapping.ColumnMappings.Add("deleted", "deleted");
            tableMapping.ColumnMappings.Add("deleteddate", "deleteddate");
            tableMapping.ColumnMappings.Add("sync", "sync");
            tableMapping.ColumnMappings.Add("syncdate", "syncdate");
            tableMapping.ColumnMappings.Add("taxi_type_id", "taxi_type_id");
            tableMapping.ColumnMappings.Add("status_id", "status_id");
            tableMapping.ColumnMappings.Add("pulse", "pulse");
            tableMapping.ColumnMappings.Add("TaxiType", "TaxiType");
            tableMapping.ColumnMappings.Add("BluetoothSerial", "BluetoothSerial");
            tableMapping.ColumnMappings.Add("vcode", "vcode");
            tableMapping.ColumnMappings.Add("vname", "vname");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `driver_mobile_registration` WHERE ((`id` = @Original_id) AND (`mobile_no` = @Original_mobile_no) AND (`imei_no` = @Original_imei_no) AND (`vehicle_id` = @Original_vehicle_id) AND (`driver_app_id` = @Original_driver_app_id) AND (`send_time` = @Original_send_time) AND (`addeddate` = @Original_addeddate) AND ((@IsNull_updateddate = 1 AND `updateddate` IS NULL) OR (`updateddate` = @Original_updateddate)) AND ((@IsNull_deleted = 1 AND `deleted` IS NULL) OR (`deleted` = @Original_deleted)) AND ((@IsNull_deleteddate = 1 AND `deleteddate` IS NULL) OR (`deleteddate` = @Original_deleteddate)) AND ((@IsNull_sync = 1 AND `sync` IS NULL) OR (`sync` = @Original_sync)) AND ((@IsNull_syncdate = 1 AND `syncdate` IS NULL) OR (`syncdate` = @Original_syncdate)) AND (`taxi_type_id` = @Original_taxi_type_id) AND (`status_id` = @Original_status_id) AND (`pulse` = @Original_pulse) AND (`TaxiType` = @Original_TaxiType) AND (`BluetoothSerial` = @Original_BluetoothSerial) AND (`vcode` = @Original_vcode) AND (`vname` = @Original_vname))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_mobile_no";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mobile_no";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_imei_no";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "imei_no";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_vehicle_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "vehicle_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driver_app_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_app_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_send_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "send_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_addeddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_updateddate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "updateddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_updateddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "updateddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_deleted";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "deleted";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_deleted";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "deleted";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_deleteddate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "deleteddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_deleteddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "deleteddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_sync";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sync";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sync";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sync";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_syncdate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "syncdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_syncdate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "syncdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_taxi_type_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "taxi_type_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "status_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pulse";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pulse";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TaxiType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "TaxiType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_BluetoothSerial";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "BluetoothSerial";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_vcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "vcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_vname";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "vname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `driver_mobile_registration` (`mobile_no`, `imei_no`, `vehicle_id`, `driver_app_id`, `send_time`, `addeddate`, `updateddate`, `deleted`, `deleteddate`, `sync`, `syncdate`, `taxi_type_id`, `status_id`, `pulse`, `TaxiType`, `BluetoothSerial`, `vcode`, `vname`) VALUES (@mobile_no, @imei_no, @vehicle_id, @driver_app_id, @send_time, @addeddate, @updateddate, @deleted, @deleteddate, @sync, @syncdate, @taxi_type_id, @status_id, @pulse, @TaxiType, @BluetoothSerial, @vcode, @vname)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@mobile_no";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mobile_no";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@imei_no";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "imei_no";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@vehicle_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "vehicle_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driver_app_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_app_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@send_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "send_time";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@addeddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@updateddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "updateddate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@deleted";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "deleted";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@deleteddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "deleteddate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sync";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sync";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@syncdate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "syncdate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@taxi_type_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "taxi_type_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "status_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pulse";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pulse";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TaxiType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "TaxiType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BluetoothSerial";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "BluetoothSerial";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@vcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "vcode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@vname";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "vname";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `driver_mobile_registration` SET `mobile_no` = @mobile_no, `imei_no` = @imei_no, `vehicle_id` = @vehicle_id, `driver_app_id` = @driver_app_id, `send_time` = @send_time, `addeddate` = @addeddate, `updateddate` = @updateddate, `deleted` = @deleted, `deleteddate` = @deleteddate, `sync` = @sync, `syncdate` = @syncdate, `taxi_type_id` = @taxi_type_id, `status_id` = @status_id, `pulse` = @pulse, `TaxiType` = @TaxiType, `BluetoothSerial` = @BluetoothSerial, `vcode` = @vcode, `vname` = @vname WHERE ((`id` = @Original_id) AND (`mobile_no` = @Original_mobile_no) AND (`imei_no` = @Original_imei_no) AND (`vehicle_id` = @Original_vehicle_id) AND (`driver_app_id` = @Original_driver_app_id) AND (`send_time` = @Original_send_time) AND (`addeddate` = @Original_addeddate) AND ((@IsNull_updateddate = 1 AND `updateddate` IS NULL) OR (`updateddate` = @Original_updateddate)) AND ((@IsNull_deleted = 1 AND `deleted` IS NULL) OR (`deleted` = @Original_deleted)) AND ((@IsNull_deleteddate = 1 AND `deleteddate` IS NULL) OR (`deleteddate` = @Original_deleteddate)) AND ((@IsNull_sync = 1 AND `sync` IS NULL) OR (`sync` = @Original_sync)) AND ((@IsNull_syncdate = 1 AND `syncdate` IS NULL) OR (`syncdate` = @Original_syncdate)) AND (`taxi_type_id` = @Original_taxi_type_id) AND (`status_id` = @Original_status_id) AND (`pulse` = @Original_pulse) AND (`TaxiType` = @Original_TaxiType) AND (`BluetoothSerial` = @Original_BluetoothSerial) AND (`vcode` = @Original_vcode) AND (`vname` = @Original_vname))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@mobile_no";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mobile_no";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@imei_no";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "imei_no";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@vehicle_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "vehicle_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driver_app_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_app_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@send_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "send_time";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@addeddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@updateddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "updateddate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@deleted";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "deleted";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@deleteddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "deleteddate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sync";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sync";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@syncdate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "syncdate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@taxi_type_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "taxi_type_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "status_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pulse";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pulse";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TaxiType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "TaxiType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BluetoothSerial";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "BluetoothSerial";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@vcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "vcode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@vname";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "vname";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_mobile_no";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mobile_no";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_imei_no";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "imei_no";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_vehicle_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "vehicle_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driver_app_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_app_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_send_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "send_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_addeddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_updateddate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "updateddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_updateddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "updateddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_deleted";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "deleted";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_deleted";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "deleted";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_deleteddate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "deleteddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_deleteddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "deleteddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_sync";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sync";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sync";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sync";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_syncdate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "syncdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_syncdate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "syncdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_taxi_type_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "taxi_type_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "status_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pulse";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pulse";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TaxiType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "TaxiType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_BluetoothSerial";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "BluetoothSerial";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_vcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "vcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_vname";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "vname";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `id`, `mobile_no`, `imei_no`, `vehicle_id`, `driver_app_id`, `send_time`, `addeddate`, `updateddate`, `deleted`, `deleteddate`, `sync`, `syncdate`, `taxi_type_id`, `status_id`, `pulse`, `TaxiType`, `BluetoothSerial`, `vcode`, `vname` FROM `driver_mobile_registration`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.driver_mobile_registrationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.driver_mobile_registrationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.driver_mobile_registrationDataTable dataTable = new budgetDataSet.driver_mobile_registrationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.driver_mobile_registrationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "driver_mobile_registration");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    string Original_mobile_no, 
                    string Original_imei_no, 
                    string Original_vehicle_id, 
                    string Original_driver_app_id, 
                    System.DateTime Original_send_time, 
                    System.DateTime Original_addeddate, 
                    global::System.Nullable<global::System.DateTime> Original_updateddate, 
                    global::System.Nullable<int> Original_deleted, 
                    global::System.Nullable<global::System.DateTime> Original_deleteddate, 
                    global::System.Nullable<int> Original_sync, 
                    global::System.Nullable<global::System.DateTime> Original_syncdate, 
                    int Original_taxi_type_id, 
                    int Original_status_id, 
                    int Original_pulse, 
                    string Original_TaxiType, 
                    string Original_BluetoothSerial, 
                    int Original_vcode, 
                    string Original_vname) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_mobile_no == null)) {
                throw new global::System.ArgumentNullException("Original_mobile_no");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_mobile_no));
            }
            if ((Original_imei_no == null)) {
                throw new global::System.ArgumentNullException("Original_imei_no");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_imei_no));
            }
            if ((Original_vehicle_id == null)) {
                throw new global::System.ArgumentNullException("Original_vehicle_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_vehicle_id));
            }
            if ((Original_driver_app_id == null)) {
                throw new global::System.ArgumentNullException("Original_driver_app_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_driver_app_id));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_send_time));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_addeddate));
            if ((Original_updateddate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_updateddate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_deleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_deleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_deleteddate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_deleteddate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_sync.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_sync.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_syncdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_syncdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_taxi_type_id));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_status_id));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_pulse));
            if ((Original_TaxiType == null)) {
                throw new global::System.ArgumentNullException("Original_TaxiType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_TaxiType));
            }
            if ((Original_BluetoothSerial == null)) {
                throw new global::System.ArgumentNullException("Original_BluetoothSerial");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_BluetoothSerial));
            }
            this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_vcode));
            if ((Original_vname == null)) {
                throw new global::System.ArgumentNullException("Original_vname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_vname));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string mobile_no, 
                    string imei_no, 
                    string vehicle_id, 
                    string driver_app_id, 
                    System.DateTime send_time, 
                    System.DateTime addeddate, 
                    global::System.Nullable<global::System.DateTime> updateddate, 
                    global::System.Nullable<int> deleted, 
                    global::System.Nullable<global::System.DateTime> deleteddate, 
                    global::System.Nullable<int> sync, 
                    global::System.Nullable<global::System.DateTime> syncdate, 
                    int taxi_type_id, 
                    int status_id, 
                    int pulse, 
                    string TaxiType, 
                    string BluetoothSerial, 
                    int vcode, 
                    string vname) {
            if ((mobile_no == null)) {
                throw new global::System.ArgumentNullException("mobile_no");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(mobile_no));
            }
            if ((imei_no == null)) {
                throw new global::System.ArgumentNullException("imei_no");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(imei_no));
            }
            if ((vehicle_id == null)) {
                throw new global::System.ArgumentNullException("vehicle_id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(vehicle_id));
            }
            if ((driver_app_id == null)) {
                throw new global::System.ArgumentNullException("driver_app_id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(driver_app_id));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(send_time));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(addeddate));
            if ((updateddate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(updateddate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((deleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(deleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((deleteddate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(deleteddate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((sync.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(sync.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((syncdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(syncdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(taxi_type_id));
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(status_id));
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(pulse));
            if ((TaxiType == null)) {
                throw new global::System.ArgumentNullException("TaxiType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(TaxiType));
            }
            if ((BluetoothSerial == null)) {
                throw new global::System.ArgumentNullException("BluetoothSerial");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(BluetoothSerial));
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((int)(vcode));
            if ((vname == null)) {
                throw new global::System.ArgumentNullException("vname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(vname));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string mobile_no, 
                    string imei_no, 
                    string vehicle_id, 
                    string driver_app_id, 
                    System.DateTime send_time, 
                    System.DateTime addeddate, 
                    global::System.Nullable<global::System.DateTime> updateddate, 
                    global::System.Nullable<int> deleted, 
                    global::System.Nullable<global::System.DateTime> deleteddate, 
                    global::System.Nullable<int> sync, 
                    global::System.Nullable<global::System.DateTime> syncdate, 
                    int taxi_type_id, 
                    int status_id, 
                    int pulse, 
                    string TaxiType, 
                    string BluetoothSerial, 
                    int vcode, 
                    string vname, 
                    int Original_id, 
                    string Original_mobile_no, 
                    string Original_imei_no, 
                    string Original_vehicle_id, 
                    string Original_driver_app_id, 
                    System.DateTime Original_send_time, 
                    System.DateTime Original_addeddate, 
                    global::System.Nullable<global::System.DateTime> Original_updateddate, 
                    global::System.Nullable<int> Original_deleted, 
                    global::System.Nullable<global::System.DateTime> Original_deleteddate, 
                    global::System.Nullable<int> Original_sync, 
                    global::System.Nullable<global::System.DateTime> Original_syncdate, 
                    int Original_taxi_type_id, 
                    int Original_status_id, 
                    int Original_pulse, 
                    string Original_TaxiType, 
                    string Original_BluetoothSerial, 
                    int Original_vcode, 
                    string Original_vname) {
            if ((mobile_no == null)) {
                throw new global::System.ArgumentNullException("mobile_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(mobile_no));
            }
            if ((imei_no == null)) {
                throw new global::System.ArgumentNullException("imei_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(imei_no));
            }
            if ((vehicle_id == null)) {
                throw new global::System.ArgumentNullException("vehicle_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(vehicle_id));
            }
            if ((driver_app_id == null)) {
                throw new global::System.ArgumentNullException("driver_app_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(driver_app_id));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(send_time));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(addeddate));
            if ((updateddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(updateddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((deleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(deleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((deleteddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(deleteddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((sync.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(sync.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((syncdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(syncdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(taxi_type_id));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(status_id));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(pulse));
            if ((TaxiType == null)) {
                throw new global::System.ArgumentNullException("TaxiType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(TaxiType));
            }
            if ((BluetoothSerial == null)) {
                throw new global::System.ArgumentNullException("BluetoothSerial");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(BluetoothSerial));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(vcode));
            if ((vname == null)) {
                throw new global::System.ArgumentNullException("vname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(vname));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_id));
            if ((Original_mobile_no == null)) {
                throw new global::System.ArgumentNullException("Original_mobile_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_mobile_no));
            }
            if ((Original_imei_no == null)) {
                throw new global::System.ArgumentNullException("Original_imei_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_imei_no));
            }
            if ((Original_vehicle_id == null)) {
                throw new global::System.ArgumentNullException("Original_vehicle_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_vehicle_id));
            }
            if ((Original_driver_app_id == null)) {
                throw new global::System.ArgumentNullException("Original_driver_app_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_driver_app_id));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_send_time));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_addeddate));
            if ((Original_updateddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_updateddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_deleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_deleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_deleteddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_deleteddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_sync.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_sync.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_syncdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(Original_syncdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_taxi_type_id));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_status_id));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_pulse));
            if ((Original_TaxiType == null)) {
                throw new global::System.ArgumentNullException("Original_TaxiType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_TaxiType));
            }
            if ((Original_BluetoothSerial == null)) {
                throw new global::System.ArgumentNullException("Original_BluetoothSerial");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_BluetoothSerial));
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_vcode));
            if ((Original_vname == null)) {
                throw new global::System.ArgumentNullException("Original_vname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_vname));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class driver_status_identifierTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public driver_status_identifierTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "driver_status_identifier";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("tracker_name", "tracker_name");
            tableMapping.ColumnMappings.Add("driver_id", "driver_id");
            tableMapping.ColumnMappings.Add("vehicle_id", "vehicle_id");
            tableMapping.ColumnMappings.Add("driver_app_id", "driver_app_id");
            tableMapping.ColumnMappings.Add("m_1_send", "m_1_send");
            tableMapping.ColumnMappings.Add("m_1_send_time", "m_1_send_time");
            tableMapping.ColumnMappings.Add("m_1_send_time_geo", "m_1_send_time_geo");
            tableMapping.ColumnMappings.Add("m_1_respond", "m_1_respond");
            tableMapping.ColumnMappings.Add("m_1_respond_time", "m_1_respond_time");
            tableMapping.ColumnMappings.Add("m_1_respond_time_geo", "m_1_respond_time_geo");
            tableMapping.ColumnMappings.Add("m_1_respond_send_time", "m_1_respond_send_time");
            tableMapping.ColumnMappings.Add("free_to_distance", "free_to_distance");
            tableMapping.ColumnMappings.Add("addeddate", "addeddate");
            tableMapping.ColumnMappings.Add("updateddate", "updateddate");
            tableMapping.ColumnMappings.Add("deleted", "deleted");
            tableMapping.ColumnMappings.Add("deleteddate", "deleteddate");
            tableMapping.ColumnMappings.Add("sync", "sync");
            tableMapping.ColumnMappings.Add("syncdate", "syncdate");
            tableMapping.ColumnMappings.Add("status_id", "status_id");
            tableMapping.ColumnMappings.Add("CurrentJobID", "CurrentJobID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `driver_status_identifier` WHERE ((`id` = @Original_id) AND ((@IsNull" +
                "_tracker_name = 1 AND `tracker_name` IS NULL) OR (`tracker_name` = @Original_tra" +
                "cker_name)) AND ((@IsNull_driver_id = 1 AND `driver_id` IS NULL) OR (`driver_id`" +
                " = @Original_driver_id)) AND ((@IsNull_vehicle_id = 1 AND `vehicle_id` IS NULL) " +
                "OR (`vehicle_id` = @Original_vehicle_id)) AND ((@IsNull_driver_app_id = 1 AND `d" +
                "river_app_id` IS NULL) OR (`driver_app_id` = @Original_driver_app_id)) AND ((@Is" +
                "Null_m_1_send = 1 AND `m_1_send` IS NULL) OR (`m_1_send` = @Original_m_1_send)) " +
                "AND ((@IsNull_m_1_send_time = 1 AND `m_1_send_time` IS NULL) OR (`m_1_send_time`" +
                " = @Original_m_1_send_time)) AND ((@IsNull_m_1_send_time_geo = 1 AND `m_1_send_t" +
                "ime_geo` IS NULL) OR (`m_1_send_time_geo` = @Original_m_1_send_time_geo)) AND ((" +
                "@IsNull_m_1_respond = 1 AND `m_1_respond` IS NULL) OR (`m_1_respond` = @Original" +
                "_m_1_respond)) AND ((@IsNull_m_1_respond_time = 1 AND `m_1_respond_time` IS NULL" +
                ") OR (`m_1_respond_time` = @Original_m_1_respond_time)) AND ((@IsNull_m_1_respon" +
                "d_time_geo = 1 AND `m_1_respond_time_geo` IS NULL) OR (`m_1_respond_time_geo` = " +
                "@Original_m_1_respond_time_geo)) AND ((@IsNull_m_1_respond_send_time = 1 AND `m_" +
                "1_respond_send_time` IS NULL) OR (`m_1_respond_send_time` = @Original_m_1_respon" +
                "d_send_time)) AND ((@IsNull_free_to_distance = 1 AND `free_to_distance` IS NULL)" +
                " OR (`free_to_distance` = @Original_free_to_distance)) AND ((@IsNull_addeddate =" +
                " 1 AND `addeddate` IS NULL) OR (`addeddate` = @Original_addeddate)) AND ((@IsNul" +
                "l_updateddate = 1 AND `updateddate` IS NULL) OR (`updateddate` = @Original_updat" +
                "eddate)) AND ((@IsNull_deleted = 1 AND `deleted` IS NULL) OR (`deleted` = @Origi" +
                "nal_deleted)) AND ((@IsNull_deleteddate = 1 AND `deleteddate` IS NULL) OR (`dele" +
                "teddate` = @Original_deleteddate)) AND ((@IsNull_sync = 1 AND `sync` IS NULL) OR" +
                " (`sync` = @Original_sync)) AND ((@IsNull_syncdate = 1 AND `syncdate` IS NULL) O" +
                "R (`syncdate` = @Original_syncdate)) AND ((@IsNull_status_id = 1 AND `status_id`" +
                " IS NULL) OR (`status_id` = @Original_status_id)) AND (`CurrentJobID` = @Origina" +
                "l_CurrentJobID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_tracker_name";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "tracker_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_tracker_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tracker_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_driver_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "driver_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driver_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_vehicle_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "vehicle_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_vehicle_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "vehicle_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_driver_app_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "driver_app_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driver_app_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_app_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_m_1_send";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_m_1_send";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_m_1_send_time";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_m_1_send_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_m_1_send_time_geo";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send_time_geo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_m_1_send_time_geo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send_time_geo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_m_1_respond";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_m_1_respond";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_m_1_respond_time";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_m_1_respond_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_m_1_respond_time_geo";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_time_geo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_m_1_respond_time_geo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_time_geo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_m_1_respond_send_time";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_send_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_m_1_respond_send_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_send_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_free_to_distance";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "free_to_distance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_free_to_distance";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "free_to_distance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_addeddate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_addeddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_updateddate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "updateddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_updateddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "updateddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_deleted";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "deleted";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_deleted";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "deleted";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_deleteddate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "deleteddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_deleteddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "deleteddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_sync";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sync";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sync";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sync";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_syncdate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "syncdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_syncdate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "syncdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "status_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "status_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CurrentJobID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "CurrentJobID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `driver_status_identifier` (`tracker_name`, `driver_id`, `vehicle_id`, `driver_app_id`, `m_1_send`, `m_1_send_time`, `m_1_send_time_geo`, `m_1_respond`, `m_1_respond_time`, `m_1_respond_time_geo`, `m_1_respond_send_time`, `free_to_distance`, `addeddate`, `updateddate`, `deleted`, `deleteddate`, `sync`, `syncdate`, `status_id`, `CurrentJobID`) VALUES (@tracker_name, @driver_id, @vehicle_id, @driver_app_id, @m_1_send, @m_1_send_time, @m_1_send_time_geo, @m_1_respond, @m_1_respond_time, @m_1_respond_time_geo, @m_1_respond_send_time, @free_to_distance, @addeddate, @updateddate, @deleted, @deleteddate, @sync, @syncdate, @status_id, @CurrentJobID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tracker_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tracker_name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driver_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@vehicle_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "vehicle_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driver_app_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_app_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@m_1_send";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@m_1_send_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send_time";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@m_1_send_time_geo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send_time_geo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@m_1_respond";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@m_1_respond_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_time";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@m_1_respond_time_geo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_time_geo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@m_1_respond_send_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_send_time";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@free_to_distance";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "free_to_distance";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@addeddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@updateddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "updateddate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@deleted";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "deleted";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@deleteddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "deleteddate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sync";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sync";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@syncdate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "syncdate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "status_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CurrentJobID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "CurrentJobID";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `driver_status_identifier` SET `tracker_name` = @tracker_name, `driver_id`" +
                " = @driver_id, `vehicle_id` = @vehicle_id, `driver_app_id` = @driver_app_id, `m_" +
                "1_send` = @m_1_send, `m_1_send_time` = @m_1_send_time, `m_1_send_time_geo` = @m_" +
                "1_send_time_geo, `m_1_respond` = @m_1_respond, `m_1_respond_time` = @m_1_respond" +
                "_time, `m_1_respond_time_geo` = @m_1_respond_time_geo, `m_1_respond_send_time` =" +
                " @m_1_respond_send_time, `free_to_distance` = @free_to_distance, `addeddate` = @" +
                "addeddate, `updateddate` = @updateddate, `deleted` = @deleted, `deleteddate` = @" +
                "deleteddate, `sync` = @sync, `syncdate` = @syncdate, `status_id` = @status_id, `" +
                "CurrentJobID` = @CurrentJobID WHERE ((`id` = @Original_id) AND ((@IsNull_tracker" +
                "_name = 1 AND `tracker_name` IS NULL) OR (`tracker_name` = @Original_tracker_nam" +
                "e)) AND ((@IsNull_driver_id = 1 AND `driver_id` IS NULL) OR (`driver_id` = @Orig" +
                "inal_driver_id)) AND ((@IsNull_vehicle_id = 1 AND `vehicle_id` IS NULL) OR (`veh" +
                "icle_id` = @Original_vehicle_id)) AND ((@IsNull_driver_app_id = 1 AND `driver_ap" +
                "p_id` IS NULL) OR (`driver_app_id` = @Original_driver_app_id)) AND ((@IsNull_m_1" +
                "_send = 1 AND `m_1_send` IS NULL) OR (`m_1_send` = @Original_m_1_send)) AND ((@I" +
                "sNull_m_1_send_time = 1 AND `m_1_send_time` IS NULL) OR (`m_1_send_time` = @Orig" +
                "inal_m_1_send_time)) AND ((@IsNull_m_1_send_time_geo = 1 AND `m_1_send_time_geo`" +
                " IS NULL) OR (`m_1_send_time_geo` = @Original_m_1_send_time_geo)) AND ((@IsNull_" +
                "m_1_respond = 1 AND `m_1_respond` IS NULL) OR (`m_1_respond` = @Original_m_1_res" +
                "pond)) AND ((@IsNull_m_1_respond_time = 1 AND `m_1_respond_time` IS NULL) OR (`m" +
                "_1_respond_time` = @Original_m_1_respond_time)) AND ((@IsNull_m_1_respond_time_g" +
                "eo = 1 AND `m_1_respond_time_geo` IS NULL) OR (`m_1_respond_time_geo` = @Origina" +
                "l_m_1_respond_time_geo)) AND ((@IsNull_m_1_respond_send_time = 1 AND `m_1_respon" +
                "d_send_time` IS NULL) OR (`m_1_respond_send_time` = @Original_m_1_respond_send_t" +
                "ime)) AND ((@IsNull_free_to_distance = 1 AND `free_to_distance` IS NULL) OR (`fr" +
                "ee_to_distance` = @Original_free_to_distance)) AND ((@IsNull_addeddate = 1 AND `" +
                "addeddate` IS NULL) OR (`addeddate` = @Original_addeddate)) AND ((@IsNull_update" +
                "ddate = 1 AND `updateddate` IS NULL) OR (`updateddate` = @Original_updateddate))" +
                " AND ((@IsNull_deleted = 1 AND `deleted` IS NULL) OR (`deleted` = @Original_dele" +
                "ted)) AND ((@IsNull_deleteddate = 1 AND `deleteddate` IS NULL) OR (`deleteddate`" +
                " = @Original_deleteddate)) AND ((@IsNull_sync = 1 AND `sync` IS NULL) OR (`sync`" +
                " = @Original_sync)) AND ((@IsNull_syncdate = 1 AND `syncdate` IS NULL) OR (`sync" +
                "date` = @Original_syncdate)) AND ((@IsNull_status_id = 1 AND `status_id` IS NULL" +
                ") OR (`status_id` = @Original_status_id)) AND (`CurrentJobID` = @Original_Curren" +
                "tJobID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tracker_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tracker_name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driver_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@vehicle_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "vehicle_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driver_app_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_app_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@m_1_send";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@m_1_send_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send_time";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@m_1_send_time_geo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send_time_geo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@m_1_respond";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@m_1_respond_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_time";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@m_1_respond_time_geo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_time_geo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@m_1_respond_send_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_send_time";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@free_to_distance";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "free_to_distance";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@addeddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@updateddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "updateddate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@deleted";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "deleted";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@deleteddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "deleteddate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sync";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sync";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@syncdate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "syncdate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "status_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CurrentJobID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "CurrentJobID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_tracker_name";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "tracker_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_tracker_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "tracker_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_driver_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "driver_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driver_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_vehicle_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "vehicle_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_vehicle_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "vehicle_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_driver_app_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "driver_app_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driver_app_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_app_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_m_1_send";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_m_1_send";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_m_1_send_time";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_m_1_send_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_m_1_send_time_geo";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send_time_geo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_m_1_send_time_geo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "m_1_send_time_geo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_m_1_respond";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_m_1_respond";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_m_1_respond_time";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_m_1_respond_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_m_1_respond_time_geo";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_time_geo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_m_1_respond_time_geo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_time_geo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_m_1_respond_send_time";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_send_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_m_1_respond_send_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "m_1_respond_send_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_free_to_distance";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "free_to_distance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_free_to_distance";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "free_to_distance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_addeddate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_addeddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_updateddate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "updateddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_updateddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "updateddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_deleted";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "deleted";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_deleted";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "deleted";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_deleteddate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "deleteddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_deleteddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "deleteddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_sync";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sync";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sync";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sync";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_syncdate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "syncdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_syncdate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "syncdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "status_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "status_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CurrentJobID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "CurrentJobID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `id`, `tracker_name`, `driver_id`, `vehicle_id`, `driver_app_id`, `m_1_send`, `m_1_send_time`, `m_1_send_time_geo`, `m_1_respond`, `m_1_respond_time`, `m_1_respond_time_geo`, `m_1_respond_send_time`, `free_to_distance`, `addeddate`, `updateddate`, `deleted`, `deleteddate`, `sync`, `syncdate`, `status_id`, `CurrentJobID` FROM `driver_status_identifier`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.driver_status_identifierDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.driver_status_identifierDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.driver_status_identifierDataTable dataTable = new budgetDataSet.driver_status_identifierDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.driver_status_identifierDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "driver_status_identifier");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    string Original_tracker_name, 
                    string Original_driver_id, 
                    string Original_vehicle_id, 
                    string Original_driver_app_id, 
                    global::System.Nullable<int> Original_m_1_send, 
                    global::System.Nullable<global::System.DateTime> Original_m_1_send_time, 
                    string Original_m_1_send_time_geo, 
                    global::System.Nullable<int> Original_m_1_respond, 
                    global::System.Nullable<global::System.DateTime> Original_m_1_respond_time, 
                    string Original_m_1_respond_time_geo, 
                    global::System.Nullable<global::System.DateTime> Original_m_1_respond_send_time, 
                    global::System.Nullable<double> Original_free_to_distance, 
                    global::System.Nullable<global::System.DateTime> Original_addeddate, 
                    global::System.Nullable<global::System.DateTime> Original_updateddate, 
                    global::System.Nullable<int> Original_deleted, 
                    global::System.Nullable<global::System.DateTime> Original_deleteddate, 
                    global::System.Nullable<int> Original_sync, 
                    global::System.Nullable<global::System.DateTime> Original_syncdate, 
                    global::System.Nullable<int> Original_status_id, 
                    long Original_CurrentJobID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_tracker_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_tracker_name));
            }
            if ((Original_driver_id == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_driver_id));
            }
            if ((Original_vehicle_id == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_vehicle_id));
            }
            if ((Original_driver_app_id == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_driver_app_id));
            }
            if ((Original_m_1_send.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_m_1_send.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_m_1_send_time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_m_1_send_time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_m_1_send_time_geo == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_m_1_send_time_geo));
            }
            if ((Original_m_1_respond.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_m_1_respond.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_m_1_respond_time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_m_1_respond_time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_m_1_respond_time_geo == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_m_1_respond_time_geo));
            }
            if ((Original_m_1_respond_send_time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_m_1_respond_send_time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_free_to_distance.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(Original_free_to_distance.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_addeddate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((System.DateTime)(Original_addeddate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_updateddate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((System.DateTime)(Original_updateddate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_deleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_deleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_deleteddate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((System.DateTime)(Original_deleteddate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_sync.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_sync.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_syncdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((System.DateTime)(Original_syncdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_status_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_status_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[39].Value = ((long)(Original_CurrentJobID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string tracker_name, 
                    string driver_id, 
                    string vehicle_id, 
                    string driver_app_id, 
                    global::System.Nullable<int> m_1_send, 
                    global::System.Nullable<global::System.DateTime> m_1_send_time, 
                    string m_1_send_time_geo, 
                    global::System.Nullable<int> m_1_respond, 
                    global::System.Nullable<global::System.DateTime> m_1_respond_time, 
                    string m_1_respond_time_geo, 
                    global::System.Nullable<global::System.DateTime> m_1_respond_send_time, 
                    global::System.Nullable<double> free_to_distance, 
                    global::System.Nullable<global::System.DateTime> addeddate, 
                    global::System.Nullable<global::System.DateTime> updateddate, 
                    global::System.Nullable<int> deleted, 
                    global::System.Nullable<global::System.DateTime> deleteddate, 
                    global::System.Nullable<int> sync, 
                    global::System.Nullable<global::System.DateTime> syncdate, 
                    global::System.Nullable<int> status_id, 
                    long CurrentJobID) {
            if ((tracker_name == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(tracker_name));
            }
            if ((driver_id == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(driver_id));
            }
            if ((vehicle_id == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(vehicle_id));
            }
            if ((driver_app_id == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(driver_app_id));
            }
            if ((m_1_send.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(m_1_send.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((m_1_send_time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(m_1_send_time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((m_1_send_time_geo == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(m_1_send_time_geo));
            }
            if ((m_1_respond.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(m_1_respond.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((m_1_respond_time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(m_1_respond_time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((m_1_respond_time_geo == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(m_1_respond_time_geo));
            }
            if ((m_1_respond_send_time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(m_1_respond_send_time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((free_to_distance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(free_to_distance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((addeddate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(addeddate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((updateddate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(updateddate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((deleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(deleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((deleteddate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(deleteddate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((sync.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(sync.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((syncdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(syncdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((status_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(status_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((long)(CurrentJobID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string tracker_name, 
                    string driver_id, 
                    string vehicle_id, 
                    string driver_app_id, 
                    global::System.Nullable<int> m_1_send, 
                    global::System.Nullable<global::System.DateTime> m_1_send_time, 
                    string m_1_send_time_geo, 
                    global::System.Nullable<int> m_1_respond, 
                    global::System.Nullable<global::System.DateTime> m_1_respond_time, 
                    string m_1_respond_time_geo, 
                    global::System.Nullable<global::System.DateTime> m_1_respond_send_time, 
                    global::System.Nullable<double> free_to_distance, 
                    global::System.Nullable<global::System.DateTime> addeddate, 
                    global::System.Nullable<global::System.DateTime> updateddate, 
                    global::System.Nullable<int> deleted, 
                    global::System.Nullable<global::System.DateTime> deleteddate, 
                    global::System.Nullable<int> sync, 
                    global::System.Nullable<global::System.DateTime> syncdate, 
                    global::System.Nullable<int> status_id, 
                    long CurrentJobID, 
                    int Original_id, 
                    string Original_tracker_name, 
                    string Original_driver_id, 
                    string Original_vehicle_id, 
                    string Original_driver_app_id, 
                    global::System.Nullable<int> Original_m_1_send, 
                    global::System.Nullable<global::System.DateTime> Original_m_1_send_time, 
                    string Original_m_1_send_time_geo, 
                    global::System.Nullable<int> Original_m_1_respond, 
                    global::System.Nullable<global::System.DateTime> Original_m_1_respond_time, 
                    string Original_m_1_respond_time_geo, 
                    global::System.Nullable<global::System.DateTime> Original_m_1_respond_send_time, 
                    global::System.Nullable<double> Original_free_to_distance, 
                    global::System.Nullable<global::System.DateTime> Original_addeddate, 
                    global::System.Nullable<global::System.DateTime> Original_updateddate, 
                    global::System.Nullable<int> Original_deleted, 
                    global::System.Nullable<global::System.DateTime> Original_deleteddate, 
                    global::System.Nullable<int> Original_sync, 
                    global::System.Nullable<global::System.DateTime> Original_syncdate, 
                    global::System.Nullable<int> Original_status_id, 
                    long Original_CurrentJobID) {
            if ((tracker_name == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(tracker_name));
            }
            if ((driver_id == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(driver_id));
            }
            if ((vehicle_id == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(vehicle_id));
            }
            if ((driver_app_id == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(driver_app_id));
            }
            if ((m_1_send.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(m_1_send.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((m_1_send_time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(m_1_send_time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((m_1_send_time_geo == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(m_1_send_time_geo));
            }
            if ((m_1_respond.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(m_1_respond.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((m_1_respond_time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(m_1_respond_time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((m_1_respond_time_geo == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(m_1_respond_time_geo));
            }
            if ((m_1_respond_send_time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(m_1_respond_send_time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((free_to_distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(free_to_distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((addeddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(addeddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((updateddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(updateddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((deleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(deleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((deleteddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(deleteddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((sync.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(sync.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((syncdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(syncdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((status_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(status_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((long)(CurrentJobID));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_id));
            if ((Original_tracker_name == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_tracker_name));
            }
            if ((Original_driver_id == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_driver_id));
            }
            if ((Original_vehicle_id == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_vehicle_id));
            }
            if ((Original_driver_app_id == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_driver_app_id));
            }
            if ((Original_m_1_send.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_m_1_send.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_m_1_send_time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_m_1_send_time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_m_1_send_time_geo == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_m_1_send_time_geo));
            }
            if ((Original_m_1_respond.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_m_1_respond.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_m_1_respond_time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTime)(Original_m_1_respond_time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_m_1_respond_time_geo == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_m_1_respond_time_geo));
            }
            if ((Original_m_1_respond_send_time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(Original_m_1_respond_send_time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_free_to_distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((double)(Original_free_to_distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_addeddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((System.DateTime)(Original_addeddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_updateddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((System.DateTime)(Original_updateddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_deleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Original_deleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_deleteddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTime)(Original_deleteddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_sync.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(Original_sync.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_syncdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((System.DateTime)(Original_syncdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_status_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(Original_status_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[59].Value = ((long)(Original_CurrentJobID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DriverStatusTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DriverStatusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DriverStatus";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Description", "Description");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `DriverStatus` WHERE ((`ID` = @Original_ID) AND (`Description` = @Ori" +
                "ginal_Description))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Description";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `DriverStatus` (`ID`, `Description`) VALUES (@ID, @Description)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Description";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Description";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `DriverStatus` SET `ID` = @ID, `Description` = @Description WHERE ((`ID` =" +
                " @Original_ID) AND (`Description` = @Original_Description))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Description";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Description";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Description";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Description";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `ID`, `Description` FROM `DriverStatus`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.DriverStatusDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.DriverStatusDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.DriverStatusDataTable dataTable = new budgetDataSet.DriverStatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.DriverStatusDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "DriverStatus");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_Description) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Description == null)) {
                throw new global::System.ArgumentNullException("Original_Description");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID, string Description) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
            if ((Description == null)) {
                throw new global::System.ArgumentNullException("Description");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID, string Description, int Original_ID, string Original_Description) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
            if ((Description == null)) {
                throw new global::System.ArgumentNullException("Description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Description));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID));
            if ((Original_Description == null)) {
                throw new global::System.ArgumentNullException("Original_Description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Description, int Original_ID, string Original_Description) {
            return this.Update(Original_ID, Description, Original_ID, Original_Description);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EMAILTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EMAILTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EMAIL";
            tableMapping.ColumnMappings.Add("AutoID", "AutoID");
            tableMapping.ColumnMappings.Add("clientmobile", "clientmobile");
            tableMapping.ColumnMappings.Add("bookingid", "bookingid");
            tableMapping.ColumnMappings.Add("RecordInsertTime", "RecordInsertTime");
            tableMapping.ColumnMappings.Add("sendtime", "sendtime");
            tableMapping.ColumnMappings.Add("sendflag", "sendflag");
            tableMapping.ColumnMappings.Add("respond", "respond");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `EMAIL` WHERE ((`AutoID` = @Original_AutoID) AND (`clientmobile` = @Original_clientmobile) AND (`bookingid` = @Original_bookingid) AND (`RecordInsertTime` = @Original_RecordInsertTime) AND (`sendtime` = @Original_sendtime) AND (`sendflag` = @Original_sendflag) AND (`respond` = @Original_respond))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AutoID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_clientmobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "clientmobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_bookingid";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "bookingid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_RecordInsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "RecordInsertTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sendtime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "sendtime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sendflag";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sendflag";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_respond";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "respond";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `EMAIL` (`clientmobile`, `bookingid`, `RecordInsertTime`, `sendtime`," +
                " `sendflag`, `respond`) VALUES (@clientmobile, @bookingid, @RecordInsertTime, @s" +
                "endtime, @sendflag, @respond)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@clientmobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "clientmobile";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@bookingid";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "bookingid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RecordInsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "RecordInsertTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sendtime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "sendtime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sendflag";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sendflag";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@respond";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "respond";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `EMAIL` SET `clientmobile` = @clientmobile, `bookingid` = @bookingid, `RecordInsertTime` = @RecordInsertTime, `sendtime` = @sendtime, `sendflag` = @sendflag, `respond` = @respond WHERE ((`AutoID` = @Original_AutoID) AND (`clientmobile` = @Original_clientmobile) AND (`bookingid` = @Original_bookingid) AND (`RecordInsertTime` = @Original_RecordInsertTime) AND (`sendtime` = @Original_sendtime) AND (`sendflag` = @Original_sendflag) AND (`respond` = @Original_respond))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@clientmobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "clientmobile";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@bookingid";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "bookingid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RecordInsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "RecordInsertTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sendtime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "sendtime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sendflag";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sendflag";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@respond";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "respond";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AutoID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_clientmobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "clientmobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_bookingid";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "bookingid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_RecordInsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "RecordInsertTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sendtime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "sendtime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sendflag";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sendflag";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_respond";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "respond";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `AutoID`, `clientmobile`, `bookingid`, `RecordInsertTime`, `sendtime`, `se" +
                "ndflag`, `respond` FROM `EMAIL`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.EMAILDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.EMAILDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.EMAILDataTable dataTable = new budgetDataSet.EMAILDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.EMAILDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "EMAIL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_AutoID, string Original_clientmobile, long Original_bookingid, System.DateTime Original_RecordInsertTime, System.DateTime Original_sendtime, string Original_sendflag, string Original_respond) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AutoID));
            if ((Original_clientmobile == null)) {
                throw new global::System.ArgumentNullException("Original_clientmobile");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_clientmobile));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_bookingid));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_RecordInsertTime));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_sendtime));
            if ((Original_sendflag == null)) {
                throw new global::System.ArgumentNullException("Original_sendflag");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_sendflag));
            }
            if ((Original_respond == null)) {
                throw new global::System.ArgumentNullException("Original_respond");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_respond));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string clientmobile, long bookingid, System.DateTime RecordInsertTime, System.DateTime sendtime, string sendflag, string respond) {
            if ((clientmobile == null)) {
                throw new global::System.ArgumentNullException("clientmobile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(clientmobile));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(bookingid));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(RecordInsertTime));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(sendtime));
            if ((sendflag == null)) {
                throw new global::System.ArgumentNullException("sendflag");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(sendflag));
            }
            if ((respond == null)) {
                throw new global::System.ArgumentNullException("respond");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(respond));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string clientmobile, long bookingid, System.DateTime RecordInsertTime, System.DateTime sendtime, string sendflag, string respond, int Original_AutoID, string Original_clientmobile, long Original_bookingid, System.DateTime Original_RecordInsertTime, System.DateTime Original_sendtime, string Original_sendflag, string Original_respond) {
            if ((clientmobile == null)) {
                throw new global::System.ArgumentNullException("clientmobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(clientmobile));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(bookingid));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(RecordInsertTime));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(sendtime));
            if ((sendflag == null)) {
                throw new global::System.ArgumentNullException("sendflag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(sendflag));
            }
            if ((respond == null)) {
                throw new global::System.ArgumentNullException("respond");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(respond));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_AutoID));
            if ((Original_clientmobile == null)) {
                throw new global::System.ArgumentNullException("Original_clientmobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_clientmobile));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(Original_bookingid));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_RecordInsertTime));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_sendtime));
            if ((Original_sendflag == null)) {
                throw new global::System.ArgumentNullException("Original_sendflag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_sendflag));
            }
            if ((Original_respond == null)) {
                throw new global::System.ArgumentNullException("Original_respond");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_respond));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class fleet_monitorTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public fleet_monitorTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "fleet_monitor";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("imei", "imei");
            tableMapping.ColumnMappings.Add("driver_id", "driver_id");
            tableMapping.ColumnMappings.Add("taxi_id", "taxi_id");
            tableMapping.ColumnMappings.Add("booking_id", "booking_id");
            tableMapping.ColumnMappings.Add("driver_status_id", "driver_status_id");
            tableMapping.ColumnMappings.Add("taxi_moving_status_id", "taxi_moving_status_id");
            tableMapping.ColumnMappings.Add("booking_status_id", "booking_status_id");
            tableMapping.ColumnMappings.Add("mobile_battery", "mobile_battery");
            tableMapping.ColumnMappings.Add("taxi_meter_status_id", "taxi_meter_status_id");
            tableMapping.ColumnMappings.Add("time_waiting", "time_waiting");
            tableMapping.ColumnMappings.Add("income", "income");
            tableMapping.ColumnMappings.Add("updated_time", "updated_time");
            tableMapping.ColumnMappings.Add("last_location", "last_location");
            tableMapping.ColumnMappings.Add("FreeTime", "FreeTime");
            tableMapping.ColumnMappings.Add("LastLogin", "LastLogin");
            tableMapping.ColumnMappings.Add("LastGPSUpdate", "LastGPSUpdate");
            tableMapping.ColumnMappings.Add("VSpeed", "VSpeed");
            tableMapping.ColumnMappings.Add("nLAT", "nLAT");
            tableMapping.ColumnMappings.Add("nLON", "nLON");
            tableMapping.ColumnMappings.Add("NonAcceptTime", "NonAcceptTime");
            tableMapping.ColumnMappings.Add("NonAcceptCount", "NonAcceptCount");
            tableMapping.ColumnMappings.Add("TaxiType", "TaxiType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `fleet_monitor` WHERE ((`id` = @Original_id) AND (`imei` = @Original_imei) AND (`driver_id` = @Original_driver_id) AND (`taxi_id` = @Original_taxi_id) AND (`booking_id` = @Original_booking_id) AND (`driver_status_id` = @Original_driver_status_id) AND (`taxi_moving_status_id` = @Original_taxi_moving_status_id) AND (`booking_status_id` = @Original_booking_status_id) AND (`mobile_battery` = @Original_mobile_battery) AND (`taxi_meter_status_id` = @Original_taxi_meter_status_id) AND (`time_waiting` = @Original_time_waiting) AND (`income` = @Original_income) AND (`updated_time` = @Original_updated_time) AND ((@IsNull_last_location = 1 AND `last_location` IS NULL) OR (`last_location` = @Original_last_location)) AND (`FreeTime` = @Original_FreeTime) AND (`LastLogin` = @Original_LastLogin) AND (`LastGPSUpdate` = @Original_LastGPSUpdate) AND (`VSpeed` = @Original_VSpeed) AND (`nLAT` = @Original_nLAT) AND (`nLON` = @Original_nLON) AND (`NonAcceptTime` = @Original_NonAcceptTime) AND (`NonAcceptCount` = @Original_NonAcceptCount) AND (`TaxiType` = @Original_TaxiType))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_imei";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "imei";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driver_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_taxi_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "taxi_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_booking_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "booking_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driver_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "driver_status_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_taxi_moving_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "taxi_moving_status_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_booking_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "booking_status_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_mobile_battery";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "mobile_battery";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_taxi_meter_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "taxi_meter_status_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_time_waiting";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "time_waiting";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_income";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "income";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_updated_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "updated_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_last_location";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "last_location";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_last_location";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "last_location";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_FreeTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "FreeTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_LastLogin";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "LastLogin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_LastGPSUpdate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "LastGPSUpdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_VSpeed";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "VSpeed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_nLAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "nLAT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_nLON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "nLON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_NonAcceptTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "NonAcceptTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_NonAcceptCount";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NonAcceptCount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TaxiType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "TaxiType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `fleet_monitor` (`imei`, `driver_id`, `taxi_id`, `booking_id`, `driver_status_id`, `taxi_moving_status_id`, `booking_status_id`, `mobile_battery`, `taxi_meter_status_id`, `time_waiting`, `income`, `updated_time`, `last_location`, `FreeTime`, `LastLogin`, `LastGPSUpdate`, `VSpeed`, `nLAT`, `nLON`, `NonAcceptTime`, `NonAcceptCount`, `TaxiType`) VALUES (@imei, @driver_id, @taxi_id, @booking_id, @driver_status_id, @taxi_moving_status_id, @booking_status_id, @mobile_battery, @taxi_meter_status_id, @time_waiting, @income, @updated_time, @last_location, @FreeTime, @LastLogin, @LastGPSUpdate, @VSpeed, @nLAT, @nLON, @NonAcceptTime, @NonAcceptCount, @TaxiType)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@imei";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "imei";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driver_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@taxi_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "taxi_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@booking_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "booking_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driver_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "driver_status_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@taxi_moving_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "taxi_moving_status_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@booking_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "booking_status_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@mobile_battery";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "mobile_battery";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@taxi_meter_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "taxi_meter_status_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@time_waiting";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "time_waiting";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@income";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "income";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@updated_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "updated_time";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@last_location";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "last_location";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FreeTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "FreeTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LastLogin";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "LastLogin";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LastGPSUpdate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "LastGPSUpdate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@VSpeed";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "VSpeed";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@nLAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "nLAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@nLON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "nLON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@NonAcceptTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "NonAcceptTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@NonAcceptCount";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NonAcceptCount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TaxiType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "TaxiType";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `fleet_monitor` SET `imei` = @imei, `driver_id` = @driver_id, `taxi_id` = " +
                "@taxi_id, `booking_id` = @booking_id, `driver_status_id` = @driver_status_id, `t" +
                "axi_moving_status_id` = @taxi_moving_status_id, `booking_status_id` = @booking_s" +
                "tatus_id, `mobile_battery` = @mobile_battery, `taxi_meter_status_id` = @taxi_met" +
                "er_status_id, `time_waiting` = @time_waiting, `income` = @income, `updated_time`" +
                " = @updated_time, `last_location` = @last_location, `FreeTime` = @FreeTime, `Las" +
                "tLogin` = @LastLogin, `LastGPSUpdate` = @LastGPSUpdate, `VSpeed` = @VSpeed, `nLA" +
                "T` = @nLAT, `nLON` = @nLON, `NonAcceptTime` = @NonAcceptTime, `NonAcceptCount` =" +
                " @NonAcceptCount, `TaxiType` = @TaxiType WHERE ((`id` = @Original_id) AND (`imei" +
                "` = @Original_imei) AND (`driver_id` = @Original_driver_id) AND (`taxi_id` = @Or" +
                "iginal_taxi_id) AND (`booking_id` = @Original_booking_id) AND (`driver_status_id" +
                "` = @Original_driver_status_id) AND (`taxi_moving_status_id` = @Original_taxi_mo" +
                "ving_status_id) AND (`booking_status_id` = @Original_booking_status_id) AND (`mo" +
                "bile_battery` = @Original_mobile_battery) AND (`taxi_meter_status_id` = @Origina" +
                "l_taxi_meter_status_id) AND (`time_waiting` = @Original_time_waiting) AND (`inco" +
                "me` = @Original_income) AND (`updated_time` = @Original_updated_time) AND ((@IsN" +
                "ull_last_location = 1 AND `last_location` IS NULL) OR (`last_location` = @Origin" +
                "al_last_location)) AND (`FreeTime` = @Original_FreeTime) AND (`LastLogin` = @Ori" +
                "ginal_LastLogin) AND (`LastGPSUpdate` = @Original_LastGPSUpdate) AND (`VSpeed` =" +
                " @Original_VSpeed) AND (`nLAT` = @Original_nLAT) AND (`nLON` = @Original_nLON) A" +
                "ND (`NonAcceptTime` = @Original_NonAcceptTime) AND (`NonAcceptCount` = @Original" +
                "_NonAcceptCount) AND (`TaxiType` = @Original_TaxiType))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@imei";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "imei";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driver_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@taxi_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "taxi_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@booking_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "booking_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@driver_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "driver_status_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@taxi_moving_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "taxi_moving_status_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@booking_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "booking_status_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@mobile_battery";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "mobile_battery";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@taxi_meter_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "taxi_meter_status_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@time_waiting";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "time_waiting";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@income";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "income";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@updated_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "updated_time";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@last_location";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "last_location";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FreeTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "FreeTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LastLogin";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "LastLogin";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LastGPSUpdate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "LastGPSUpdate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@VSpeed";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "VSpeed";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@nLAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "nLAT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@nLON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "nLON";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@NonAcceptTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "NonAcceptTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@NonAcceptCount";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NonAcceptCount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TaxiType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "TaxiType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_imei";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "imei";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driver_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "driver_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_taxi_id";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "taxi_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_booking_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "booking_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_driver_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "driver_status_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_taxi_moving_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "taxi_moving_status_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_booking_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "booking_status_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_mobile_battery";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "mobile_battery";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_taxi_meter_status_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "taxi_meter_status_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_time_waiting";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "time_waiting";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_income";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "income";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_updated_time";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "updated_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_last_location";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "last_location";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_last_location";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "last_location";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_FreeTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "FreeTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_LastLogin";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "LastLogin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_LastGPSUpdate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "LastGPSUpdate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_VSpeed";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "VSpeed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_nLAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "nLAT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_nLON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "nLON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_NonAcceptTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "NonAcceptTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_NonAcceptCount";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NonAcceptCount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TaxiType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "TaxiType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `id`, `imei`, `driver_id`, `taxi_id`, `booking_id`, `driver_status_id`, `taxi_moving_status_id`, `booking_status_id`, `mobile_battery`, `taxi_meter_status_id`, `time_waiting`, `income`, `updated_time`, `last_location`, `FreeTime`, `LastLogin`, `LastGPSUpdate`, `VSpeed`, `nLAT`, `nLON`, `NonAcceptTime`, `NonAcceptCount`, `TaxiType` FROM `fleet_monitor`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.fleet_monitorDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.fleet_monitorDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.fleet_monitorDataTable dataTable = new budgetDataSet.fleet_monitorDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.fleet_monitorDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "fleet_monitor");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    string Original_imei, 
                    string Original_driver_id, 
                    string Original_taxi_id, 
                    long Original_booking_id, 
                    int Original_driver_status_id, 
                    int Original_taxi_moving_status_id, 
                    int Original_booking_status_id, 
                    double Original_mobile_battery, 
                    int Original_taxi_meter_status_id, 
                    double Original_time_waiting, 
                    double Original_income, 
                    System.DateTime Original_updated_time, 
                    string Original_last_location, 
                    System.DateTime Original_FreeTime, 
                    System.DateTime Original_LastLogin, 
                    System.DateTime Original_LastGPSUpdate, 
                    double Original_VSpeed, 
                    double Original_nLAT, 
                    double Original_nLON, 
                    System.DateTime Original_NonAcceptTime, 
                    int Original_NonAcceptCount, 
                    string Original_TaxiType) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_imei == null)) {
                throw new global::System.ArgumentNullException("Original_imei");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_imei));
            }
            if ((Original_driver_id == null)) {
                throw new global::System.ArgumentNullException("Original_driver_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_driver_id));
            }
            if ((Original_taxi_id == null)) {
                throw new global::System.ArgumentNullException("Original_taxi_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_taxi_id));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((long)(Original_booking_id));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_driver_status_id));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_taxi_moving_status_id));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_booking_status_id));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_mobile_battery));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_taxi_meter_status_id));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_time_waiting));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_income));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_updated_time));
            if ((Original_last_location == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_last_location));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_FreeTime));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_LastLogin));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_LastGPSUpdate));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_VSpeed));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((double)(Original_nLAT));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_nLON));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTime)(Original_NonAcceptTime));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_NonAcceptCount));
            if ((Original_TaxiType == null)) {
                throw new global::System.ArgumentNullException("Original_TaxiType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_TaxiType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string imei, 
                    string driver_id, 
                    string taxi_id, 
                    long booking_id, 
                    int driver_status_id, 
                    int taxi_moving_status_id, 
                    int booking_status_id, 
                    double mobile_battery, 
                    int taxi_meter_status_id, 
                    double time_waiting, 
                    double income, 
                    System.DateTime updated_time, 
                    string last_location, 
                    System.DateTime FreeTime, 
                    System.DateTime LastLogin, 
                    System.DateTime LastGPSUpdate, 
                    double VSpeed, 
                    double nLAT, 
                    double nLON, 
                    System.DateTime NonAcceptTime, 
                    int NonAcceptCount, 
                    string TaxiType) {
            if ((imei == null)) {
                throw new global::System.ArgumentNullException("imei");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(imei));
            }
            if ((driver_id == null)) {
                throw new global::System.ArgumentNullException("driver_id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(driver_id));
            }
            if ((taxi_id == null)) {
                throw new global::System.ArgumentNullException("taxi_id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(taxi_id));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(booking_id));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(driver_status_id));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(taxi_moving_status_id));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(booking_status_id));
            this.Adapter.InsertCommand.Parameters[7].Value = ((double)(mobile_battery));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(taxi_meter_status_id));
            this.Adapter.InsertCommand.Parameters[9].Value = ((double)(time_waiting));
            this.Adapter.InsertCommand.Parameters[10].Value = ((double)(income));
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(updated_time));
            if ((last_location == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(last_location));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(FreeTime));
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(LastLogin));
            this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(LastGPSUpdate));
            this.Adapter.InsertCommand.Parameters[16].Value = ((double)(VSpeed));
            this.Adapter.InsertCommand.Parameters[17].Value = ((double)(nLAT));
            this.Adapter.InsertCommand.Parameters[18].Value = ((double)(nLON));
            this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(NonAcceptTime));
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(NonAcceptCount));
            if ((TaxiType == null)) {
                throw new global::System.ArgumentNullException("TaxiType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(TaxiType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string imei, 
                    string driver_id, 
                    string taxi_id, 
                    long booking_id, 
                    int driver_status_id, 
                    int taxi_moving_status_id, 
                    int booking_status_id, 
                    double mobile_battery, 
                    int taxi_meter_status_id, 
                    double time_waiting, 
                    double income, 
                    System.DateTime updated_time, 
                    string last_location, 
                    System.DateTime FreeTime, 
                    System.DateTime LastLogin, 
                    System.DateTime LastGPSUpdate, 
                    double VSpeed, 
                    double nLAT, 
                    double nLON, 
                    System.DateTime NonAcceptTime, 
                    int NonAcceptCount, 
                    string TaxiType, 
                    int Original_id, 
                    string Original_imei, 
                    string Original_driver_id, 
                    string Original_taxi_id, 
                    long Original_booking_id, 
                    int Original_driver_status_id, 
                    int Original_taxi_moving_status_id, 
                    int Original_booking_status_id, 
                    double Original_mobile_battery, 
                    int Original_taxi_meter_status_id, 
                    double Original_time_waiting, 
                    double Original_income, 
                    System.DateTime Original_updated_time, 
                    string Original_last_location, 
                    System.DateTime Original_FreeTime, 
                    System.DateTime Original_LastLogin, 
                    System.DateTime Original_LastGPSUpdate, 
                    double Original_VSpeed, 
                    double Original_nLAT, 
                    double Original_nLON, 
                    System.DateTime Original_NonAcceptTime, 
                    int Original_NonAcceptCount, 
                    string Original_TaxiType) {
            if ((imei == null)) {
                throw new global::System.ArgumentNullException("imei");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(imei));
            }
            if ((driver_id == null)) {
                throw new global::System.ArgumentNullException("driver_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(driver_id));
            }
            if ((taxi_id == null)) {
                throw new global::System.ArgumentNullException("taxi_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(taxi_id));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(booking_id));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(driver_status_id));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(taxi_moving_status_id));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(booking_status_id));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(mobile_battery));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(taxi_meter_status_id));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(time_waiting));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(income));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(updated_time));
            if ((last_location == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(last_location));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(FreeTime));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(LastLogin));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(LastGPSUpdate));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(VSpeed));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(nLAT));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(nLON));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(NonAcceptTime));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(NonAcceptCount));
            if ((TaxiType == null)) {
                throw new global::System.ArgumentNullException("TaxiType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(TaxiType));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_id));
            if ((Original_imei == null)) {
                throw new global::System.ArgumentNullException("Original_imei");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_imei));
            }
            if ((Original_driver_id == null)) {
                throw new global::System.ArgumentNullException("Original_driver_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_driver_id));
            }
            if ((Original_taxi_id == null)) {
                throw new global::System.ArgumentNullException("Original_taxi_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_taxi_id));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((long)(Original_booking_id));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_driver_status_id));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_taxi_moving_status_id));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_booking_status_id));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(Original_mobile_battery));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_taxi_meter_status_id));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(Original_time_waiting));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(Original_income));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(Original_updated_time));
            if ((Original_last_location == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_last_location));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(Original_FreeTime));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTime)(Original_LastLogin));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((System.DateTime)(Original_LastGPSUpdate));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(Original_VSpeed));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((double)(Original_nLAT));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((double)(Original_nLON));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(Original_NonAcceptTime));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_NonAcceptCount));
            if ((Original_TaxiType == null)) {
                throw new global::System.ArgumentNullException("Original_TaxiType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_TaxiType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GpsFailTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GpsFailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GpsFail";
            tableMapping.ColumnMappings.Add("AutoID", "AutoID");
            tableMapping.ColumnMappings.Add("CabNo", "CabNo");
            tableMapping.ColumnMappings.Add("FailTime", "FailTime");
            tableMapping.ColumnMappings.Add("Event", "Event");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `GpsFail` WHERE ((`AutoID` = @Original_AutoID) AND (`CabNo` = @Origin" +
                "al_CabNo) AND (`FailTime` = @Original_FailTime) AND (`Event` = @Original_Event))" +
                "";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AutoID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_FailTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "FailTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Event";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Event";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `GpsFail` (`CabNo`, `FailTime`, `Event`) VALUES (@CabNo, @FailTime, @" +
                "Event)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FailTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "FailTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Event";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Event";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `GpsFail` SET `CabNo` = @CabNo, `FailTime` = @FailTime, `Event` = @Event W" +
                "HERE ((`AutoID` = @Original_AutoID) AND (`CabNo` = @Original_CabNo) AND (`FailTi" +
                "me` = @Original_FailTime) AND (`Event` = @Original_Event))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FailTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "FailTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Event";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Event";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AutoID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_FailTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "FailTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Event";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Event";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `AutoID`, `CabNo`, `FailTime`, `Event` FROM `GpsFail`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.GpsFailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.GpsFailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.GpsFailDataTable dataTable = new budgetDataSet.GpsFailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.GpsFailDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "GpsFail");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_AutoID, string Original_CabNo, System.DateTime Original_FailTime, string Original_Event) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AutoID));
            if ((Original_CabNo == null)) {
                throw new global::System.ArgumentNullException("Original_CabNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_CabNo));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_FailTime));
            if ((Original_Event == null)) {
                throw new global::System.ArgumentNullException("Original_Event");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Event));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CabNo, System.DateTime FailTime, string Event) {
            if ((CabNo == null)) {
                throw new global::System.ArgumentNullException("CabNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CabNo));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(FailTime));
            if ((Event == null)) {
                throw new global::System.ArgumentNullException("Event");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Event));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CabNo, System.DateTime FailTime, string Event, int Original_AutoID, string Original_CabNo, System.DateTime Original_FailTime, string Original_Event) {
            if ((CabNo == null)) {
                throw new global::System.ArgumentNullException("CabNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CabNo));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(FailTime));
            if ((Event == null)) {
                throw new global::System.ArgumentNullException("Event");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Event));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_AutoID));
            if ((Original_CabNo == null)) {
                throw new global::System.ArgumentNullException("Original_CabNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_CabNo));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_FailTime));
            if ((Original_Event == null)) {
                throw new global::System.ArgumentNullException("Original_Event");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Event));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GPSMStatTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GPSMStatTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GPSMStat";
            tableMapping.ColumnMappings.Add("S1Value", "S1Value");
            tableMapping.ColumnMappings.Add("S1Correction", "S1Correction");
            tableMapping.ColumnMappings.Add("S2Value", "S2Value");
            tableMapping.ColumnMappings.Add("S2Correction", "S2Correction");
            tableMapping.ColumnMappings.Add("D1Value", "D1Value");
            tableMapping.ColumnMappings.Add("D1Correction", "D1Correction");
            tableMapping.ColumnMappings.Add("D2Value", "D2Value");
            tableMapping.ColumnMappings.Add("D2Correction", "D2Correction");
            tableMapping.ColumnMappings.Add("D3Value", "D3Value");
            tableMapping.ColumnMappings.Add("D3Correction", "D3Correction");
            tableMapping.ColumnMappings.Add("D0Value", "D0Value");
            tableMapping.ColumnMappings.Add("D0Correction", "D0Correction");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `GPSMStat` (`S1Value`, `S1Correction`, `S2Value`, `S2Correction`, `D1Value`, `D1Correction`, `D2Value`, `D2Correction`, `D3Value`, `D3Correction`, `D0Value`, `D0Correction`) VALUES (@S1Value, @S1Correction, @S2Value, @S2Correction, @D1Value, @D1Correction, @D2Value, @D2Correction, @D3Value, @D3Correction, @D0Value, @D0Correction)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@S1Value";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "S1Value";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@S1Correction";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "S1Correction";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@S2Value";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "S2Value";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@S2Correction";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "S2Correction";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@D1Value";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "D1Value";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@D1Correction";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "D1Correction";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@D2Value";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "D2Value";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@D2Correction";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "D2Correction";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@D3Value";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "D3Value";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@D3Correction";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "D3Correction";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@D0Value";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "D0Value";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@D0Correction";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "D0Correction";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `S1Value`, `S1Correction`, `S2Value`, `S2Correction`, `D1Value`, `D1Correc" +
                "tion`, `D2Value`, `D2Correction`, `D3Value`, `D3Correction`, `D0Value`, `D0Corre" +
                "ction` FROM `GPSMStat`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.GPSMStatDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.GPSMStatDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.GPSMStatDataTable dataTable = new budgetDataSet.GPSMStatDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.GPSMStatDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "GPSMStat");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int S1Value, double S1Correction, int S2Value, double S2Correction, int D1Value, double D1Correction, int D2Value, double D2Correction, int D3Value, double D3Correction, int D0Value, double D0Correction) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(S1Value));
            this.Adapter.InsertCommand.Parameters[1].Value = ((double)(S1Correction));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(S2Value));
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(S2Correction));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(D1Value));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(D1Correction));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(D2Value));
            this.Adapter.InsertCommand.Parameters[7].Value = ((double)(D2Correction));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(D3Value));
            this.Adapter.InsertCommand.Parameters[9].Value = ((double)(D3Correction));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(D0Value));
            this.Adapter.InsertCommand.Parameters[11].Value = ((double)(D0Correction));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class log_dataTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public log_dataTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "log_data";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("service_name", "service_name");
            tableMapping.ColumnMappings.Add("log", "log");
            tableMapping.ColumnMappings.Add("addeddate", "addeddate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `log_data` WHERE ((`id` = @Original_id) AND (`service_name` = @Origin" +
                "al_service_name) AND (`addeddate` = @Original_addeddate))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_service_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "service_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_addeddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `log_data` (`service_name`, `log`, `addeddate`) VALUES (@service_name" +
                ", @log, @addeddate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@service_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "service_name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@log";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "log";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@addeddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `log_data` SET `service_name` = @service_name, `log` = @log, `addeddate` =" +
                " @addeddate WHERE ((`id` = @Original_id) AND (`service_name` = @Original_service" +
                "_name) AND (`addeddate` = @Original_addeddate))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@service_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "service_name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@log";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "log";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@addeddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_service_name";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "service_name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_addeddate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "addeddate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `id`, `service_name`, `log`, `addeddate` FROM `log_data`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.log_dataDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.log_dataDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.log_dataDataTable dataTable = new budgetDataSet.log_dataDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.log_dataDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "log_data");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_service_name, System.DateTime Original_addeddate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_service_name == null)) {
                throw new global::System.ArgumentNullException("Original_service_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_service_name));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_addeddate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string service_name, string log, System.DateTime addeddate) {
            if ((service_name == null)) {
                throw new global::System.ArgumentNullException("service_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(service_name));
            }
            if ((log == null)) {
                throw new global::System.ArgumentNullException("log");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(log));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(addeddate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string service_name, string log, System.DateTime addeddate, int Original_id, string Original_service_name, System.DateTime Original_addeddate) {
            if ((service_name == null)) {
                throw new global::System.ArgumentNullException("service_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(service_name));
            }
            if ((log == null)) {
                throw new global::System.ArgumentNullException("log");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(log));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(addeddate));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_id));
            if ((Original_service_name == null)) {
                throw new global::System.ArgumentNullException("Original_service_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_service_name));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_addeddate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LogOffTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LogOffTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LogOff";
            tableMapping.ColumnMappings.Add("CabNo", "CabNo");
            tableMapping.ColumnMappings.Add("AcDateTime", "AcDateTime");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `LogOff` WHERE ((`CabNo` = @Original_CabNo) AND (`AcDateTime` = @Orig" +
                "inal_AcDateTime))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AcDateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "AcDateTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `LogOff` (`CabNo`, `AcDateTime`) VALUES (@CabNo, @AcDateTime)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@AcDateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "AcDateTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `LogOff` SET `CabNo` = @CabNo, `AcDateTime` = @AcDateTime WHERE ((`CabNo` " +
                "= @Original_CabNo) AND (`AcDateTime` = @Original_AcDateTime))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@AcDateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "AcDateTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AcDateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "AcDateTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `CabNo`, `AcDateTime` FROM `LogOff`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.LogOffDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.LogOffDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.LogOffDataTable dataTable = new budgetDataSet.LogOffDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.LogOffDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "LogOff");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_CabNo, System.DateTime Original_AcDateTime) {
            if ((Original_CabNo == null)) {
                throw new global::System.ArgumentNullException("Original_CabNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CabNo));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_AcDateTime));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CabNo, System.DateTime AcDateTime) {
            if ((CabNo == null)) {
                throw new global::System.ArgumentNullException("CabNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CabNo));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(AcDateTime));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CabNo, System.DateTime AcDateTime, string Original_CabNo, System.DateTime Original_AcDateTime) {
            if ((CabNo == null)) {
                throw new global::System.ArgumentNullException("CabNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CabNo));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(AcDateTime));
            if ((Original_CabNo == null)) {
                throw new global::System.ArgumentNullException("Original_CabNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_CabNo));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Original_AcDateTime));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime AcDateTime, string Original_CabNo, System.DateTime Original_AcDateTime) {
            return this.Update(Original_CabNo, AcDateTime, Original_CabNo, Original_AcDateTime);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LogSheetTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LogSheetTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LogSheet";
            tableMapping.ColumnMappings.Add("AutoNo", "AutoNo");
            tableMapping.ColumnMappings.Add("VehiclID", "VehiclID");
            tableMapping.ColumnMappings.Add("DriverID", "DriverID");
            tableMapping.ColumnMappings.Add("BookingID", "BookingID");
            tableMapping.ColumnMappings.Add("MeterONTime", "MeterONTime");
            tableMapping.ColumnMappings.Add("MeterOnLocationLAT", "MeterOnLocationLAT");
            tableMapping.ColumnMappings.Add("MeterOnLoationLON", "MeterOnLoationLON");
            tableMapping.ColumnMappings.Add("MeterOFFTime", "MeterOFFTime");
            tableMapping.ColumnMappings.Add("MeterOFFLocationLAT", "MeterOFFLocationLAT");
            tableMapping.ColumnMappings.Add("MeterOFFLocationLON", "MeterOFFLocationLON");
            tableMapping.ColumnMappings.Add("RunningKM", "RunningKM");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("WaitingTime", "WaitingTime");
            tableMapping.ColumnMappings.Add("WaitingCost", "WaitingCost");
            tableMapping.ColumnMappings.Add("PaymentType", "PaymentType");
            tableMapping.ColumnMappings.Add("PaymentRecive", "PaymentRecive");
            tableMapping.ColumnMappings.Add("TotalAmount", "TotalAmount");
            tableMapping.ColumnMappings.Add("VoucherNo", "VoucherNo");
            tableMapping.ColumnMappings.Add("MType", "MType");
            tableMapping.ColumnMappings.Add("DiscountAmount", "DiscountAmount");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `LogSheet` WHERE ((`AutoNo` = @Original_AutoNo) AND (`VehiclID` = @Original_VehiclID) AND (`DriverID` = @Original_DriverID) AND (`BookingID` = @Original_BookingID) AND (`MeterONTime` = @Original_MeterONTime) AND (`MeterOnLocationLAT` = @Original_MeterOnLocationLAT) AND (`MeterOnLoationLON` = @Original_MeterOnLoationLON) AND (`MeterOFFTime` = @Original_MeterOFFTime) AND (`MeterOFFLocationLAT` = @Original_MeterOFFLocationLAT) AND (`MeterOFFLocationLON` = @Original_MeterOFFLocationLON) AND (`RunningKM` = @Original_RunningKM) AND (`Amount` = @Original_Amount) AND (`WaitingTime` = @Original_WaitingTime) AND (`WaitingCost` = @Original_WaitingCost) AND (`PaymentType` = @Original_PaymentType) AND (`PaymentRecive` = @Original_PaymentRecive) AND (`TotalAmount` = @Original_TotalAmount) AND (`VoucherNo` = @Original_VoucherNo) AND (`MType` = @Original_MType) AND (`DiscountAmount` = @Original_DiscountAmount))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoNo";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "AutoNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_VehiclID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "VehiclID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_DriverID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "DriverID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_MeterONTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterONTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_MeterOnLocationLAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "MeterOnLocationLAT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_MeterOnLoationLON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "MeterOnLoationLON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_MeterOFFTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterOFFTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_MeterOFFLocationLAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "MeterOFFLocationLAT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_MeterOFFLocationLON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "MeterOFFLocationLON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_RunningKM";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "RunningKM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "Amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_WaitingTime";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_WaitingCost";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingCost";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PaymentType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "PaymentType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PaymentRecive";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "PaymentRecive";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TotalAmount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "TotalAmount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_VoucherNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "VoucherNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_MType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "MType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_DiscountAmount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "DiscountAmount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `LogSheet` (`VehiclID`, `DriverID`, `BookingID`, `MeterONTime`, `MeterOnLocationLAT`, `MeterOnLoationLON`, `MeterOFFTime`, `MeterOFFLocationLAT`, `MeterOFFLocationLON`, `RunningKM`, `Amount`, `WaitingTime`, `WaitingCost`, `PaymentType`, `PaymentRecive`, `TotalAmount`, `VoucherNo`, `MType`, `DiscountAmount`) VALUES (@VehiclID, @DriverID, @BookingID, @MeterONTime, @MeterOnLocationLAT, @MeterOnLoationLON, @MeterOFFTime, @MeterOFFLocationLAT, @MeterOFFLocationLON, @RunningKM, @Amount, @WaitingTime, @WaitingCost, @PaymentType, @PaymentRecive, @TotalAmount, @VoucherNo, @MType, @DiscountAmount)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@VehiclID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "VehiclID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DriverID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "DriverID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterONTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterONTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOnLocationLAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "MeterOnLocationLAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOnLoationLON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "MeterOnLoationLON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOFFTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterOFFTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOFFLocationLAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "MeterOFFLocationLAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOFFLocationLON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "MeterOFFLocationLON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RunningKM";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "RunningKM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "Amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingTime";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingCost";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingCost";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PaymentType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "PaymentType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PaymentRecive";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "PaymentRecive";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TotalAmount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "TotalAmount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@VoucherNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "VoucherNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "MType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DiscountAmount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "DiscountAmount";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `LogSheet` SET `VehiclID` = @VehiclID, `DriverID` = @DriverID, `BookingID`" +
                " = @BookingID, `MeterONTime` = @MeterONTime, `MeterOnLocationLAT` = @MeterOnLoca" +
                "tionLAT, `MeterOnLoationLON` = @MeterOnLoationLON, `MeterOFFTime` = @MeterOFFTim" +
                "e, `MeterOFFLocationLAT` = @MeterOFFLocationLAT, `MeterOFFLocationLON` = @MeterO" +
                "FFLocationLON, `RunningKM` = @RunningKM, `Amount` = @Amount, `WaitingTime` = @Wa" +
                "itingTime, `WaitingCost` = @WaitingCost, `PaymentType` = @PaymentType, `PaymentR" +
                "ecive` = @PaymentRecive, `TotalAmount` = @TotalAmount, `VoucherNo` = @VoucherNo," +
                " `MType` = @MType, `DiscountAmount` = @DiscountAmount WHERE ((`AutoNo` = @Origin" +
                "al_AutoNo) AND (`VehiclID` = @Original_VehiclID) AND (`DriverID` = @Original_Dri" +
                "verID) AND (`BookingID` = @Original_BookingID) AND (`MeterONTime` = @Original_Me" +
                "terONTime) AND (`MeterOnLocationLAT` = @Original_MeterOnLocationLAT) AND (`Meter" +
                "OnLoationLON` = @Original_MeterOnLoationLON) AND (`MeterOFFTime` = @Original_Met" +
                "erOFFTime) AND (`MeterOFFLocationLAT` = @Original_MeterOFFLocationLAT) AND (`Met" +
                "erOFFLocationLON` = @Original_MeterOFFLocationLON) AND (`RunningKM` = @Original_" +
                "RunningKM) AND (`Amount` = @Original_Amount) AND (`WaitingTime` = @Original_Wait" +
                "ingTime) AND (`WaitingCost` = @Original_WaitingCost) AND (`PaymentType` = @Origi" +
                "nal_PaymentType) AND (`PaymentRecive` = @Original_PaymentRecive) AND (`TotalAmou" +
                "nt` = @Original_TotalAmount) AND (`VoucherNo` = @Original_VoucherNo) AND (`MType" +
                "` = @Original_MType) AND (`DiscountAmount` = @Original_DiscountAmount))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@VehiclID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "VehiclID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DriverID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "DriverID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterONTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterONTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOnLocationLAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "MeterOnLocationLAT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOnLoationLON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "MeterOnLoationLON";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOFFTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterOFFTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOFFLocationLAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "MeterOFFLocationLAT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOFFLocationLON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "MeterOFFLocationLON";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RunningKM";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "RunningKM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "Amount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingTime";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingCost";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingCost";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PaymentType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "PaymentType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PaymentRecive";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "PaymentRecive";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TotalAmount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "TotalAmount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@VoucherNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "VoucherNo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "MType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DiscountAmount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "DiscountAmount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoNo";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "AutoNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_VehiclID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "VehiclID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_DriverID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "DriverID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_MeterONTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterONTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_MeterOnLocationLAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "MeterOnLocationLAT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_MeterOnLoationLON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "MeterOnLoationLON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_MeterOFFTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterOFFTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_MeterOFFLocationLAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "MeterOFFLocationLAT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_MeterOFFLocationLON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "MeterOFFLocationLON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_RunningKM";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "RunningKM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_Amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "Amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_WaitingTime";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_WaitingCost";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingCost";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PaymentType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "PaymentType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PaymentRecive";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "PaymentRecive";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TotalAmount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "TotalAmount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_VoucherNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "VoucherNo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_MType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "MType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_DiscountAmount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "DiscountAmount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `AutoNo`, `VehiclID`, `DriverID`, `BookingID`, `MeterONTime`, `MeterOnLocationLAT`, `MeterOnLoationLON`, `MeterOFFTime`, `MeterOFFLocationLAT`, `MeterOFFLocationLON`, `RunningKM`, `Amount`, `WaitingTime`, `WaitingCost`, `PaymentType`, `PaymentRecive`, `TotalAmount`, `VoucherNo`, `MType`, `DiscountAmount` FROM `LogSheet`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.LogSheetDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.LogSheetDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.LogSheetDataTable dataTable = new budgetDataSet.LogSheetDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.LogSheetDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "LogSheet");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    long Original_AutoNo, 
                    string Original_VehiclID, 
                    string Original_DriverID, 
                    long Original_BookingID, 
                    System.DateTime Original_MeterONTime, 
                    double Original_MeterOnLocationLAT, 
                    double Original_MeterOnLoationLON, 
                    System.DateTime Original_MeterOFFTime, 
                    double Original_MeterOFFLocationLAT, 
                    double Original_MeterOFFLocationLON, 
                    double Original_RunningKM, 
                    double Original_Amount, 
                    float Original_WaitingTime, 
                    float Original_WaitingCost, 
                    string Original_PaymentType, 
                    string Original_PaymentRecive, 
                    double Original_TotalAmount, 
                    string Original_VoucherNo, 
                    string Original_MType, 
                    double Original_DiscountAmount) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_AutoNo));
            if ((Original_VehiclID == null)) {
                throw new global::System.ArgumentNullException("Original_VehiclID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_VehiclID));
            }
            if ((Original_DriverID == null)) {
                throw new global::System.ArgumentNullException("Original_DriverID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_DriverID));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((long)(Original_BookingID));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_MeterONTime));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_MeterOnLocationLAT));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_MeterOnLoationLON));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_MeterOFFTime));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_MeterOFFLocationLAT));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_MeterOFFLocationLON));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_RunningKM));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_Amount));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((float)(Original_WaitingTime));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((float)(Original_WaitingCost));
            if ((Original_PaymentType == null)) {
                throw new global::System.ArgumentNullException("Original_PaymentType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_PaymentType));
            }
            if ((Original_PaymentRecive == null)) {
                throw new global::System.ArgumentNullException("Original_PaymentRecive");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_PaymentRecive));
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_TotalAmount));
            if ((Original_VoucherNo == null)) {
                throw new global::System.ArgumentNullException("Original_VoucherNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_VoucherNo));
            }
            if ((Original_MType == null)) {
                throw new global::System.ArgumentNullException("Original_MType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_MType));
            }
            this.Adapter.DeleteCommand.Parameters[19].Value = ((double)(Original_DiscountAmount));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string VehiclID, 
                    string DriverID, 
                    long BookingID, 
                    System.DateTime MeterONTime, 
                    double MeterOnLocationLAT, 
                    double MeterOnLoationLON, 
                    System.DateTime MeterOFFTime, 
                    double MeterOFFLocationLAT, 
                    double MeterOFFLocationLON, 
                    double RunningKM, 
                    double Amount, 
                    float WaitingTime, 
                    float WaitingCost, 
                    string PaymentType, 
                    string PaymentRecive, 
                    double TotalAmount, 
                    string VoucherNo, 
                    string MType, 
                    double DiscountAmount) {
            if ((VehiclID == null)) {
                throw new global::System.ArgumentNullException("VehiclID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(VehiclID));
            }
            if ((DriverID == null)) {
                throw new global::System.ArgumentNullException("DriverID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DriverID));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(BookingID));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(MeterONTime));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(MeterOnLocationLAT));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(MeterOnLoationLON));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(MeterOFFTime));
            this.Adapter.InsertCommand.Parameters[7].Value = ((double)(MeterOFFLocationLAT));
            this.Adapter.InsertCommand.Parameters[8].Value = ((double)(MeterOFFLocationLON));
            this.Adapter.InsertCommand.Parameters[9].Value = ((double)(RunningKM));
            this.Adapter.InsertCommand.Parameters[10].Value = ((double)(Amount));
            this.Adapter.InsertCommand.Parameters[11].Value = ((float)(WaitingTime));
            this.Adapter.InsertCommand.Parameters[12].Value = ((float)(WaitingCost));
            if ((PaymentType == null)) {
                throw new global::System.ArgumentNullException("PaymentType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(PaymentType));
            }
            if ((PaymentRecive == null)) {
                throw new global::System.ArgumentNullException("PaymentRecive");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(PaymentRecive));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((double)(TotalAmount));
            if ((VoucherNo == null)) {
                throw new global::System.ArgumentNullException("VoucherNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(VoucherNo));
            }
            if ((MType == null)) {
                throw new global::System.ArgumentNullException("MType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(MType));
            }
            this.Adapter.InsertCommand.Parameters[18].Value = ((double)(DiscountAmount));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string VehiclID, 
                    string DriverID, 
                    long BookingID, 
                    System.DateTime MeterONTime, 
                    double MeterOnLocationLAT, 
                    double MeterOnLoationLON, 
                    System.DateTime MeterOFFTime, 
                    double MeterOFFLocationLAT, 
                    double MeterOFFLocationLON, 
                    double RunningKM, 
                    double Amount, 
                    float WaitingTime, 
                    float WaitingCost, 
                    string PaymentType, 
                    string PaymentRecive, 
                    double TotalAmount, 
                    string VoucherNo, 
                    string MType, 
                    double DiscountAmount, 
                    long Original_AutoNo, 
                    string Original_VehiclID, 
                    string Original_DriverID, 
                    long Original_BookingID, 
                    System.DateTime Original_MeterONTime, 
                    double Original_MeterOnLocationLAT, 
                    double Original_MeterOnLoationLON, 
                    System.DateTime Original_MeterOFFTime, 
                    double Original_MeterOFFLocationLAT, 
                    double Original_MeterOFFLocationLON, 
                    double Original_RunningKM, 
                    double Original_Amount, 
                    float Original_WaitingTime, 
                    float Original_WaitingCost, 
                    string Original_PaymentType, 
                    string Original_PaymentRecive, 
                    double Original_TotalAmount, 
                    string Original_VoucherNo, 
                    string Original_MType, 
                    double Original_DiscountAmount) {
            if ((VehiclID == null)) {
                throw new global::System.ArgumentNullException("VehiclID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(VehiclID));
            }
            if ((DriverID == null)) {
                throw new global::System.ArgumentNullException("DriverID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DriverID));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(BookingID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(MeterONTime));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(MeterOnLocationLAT));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(MeterOnLoationLON));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(MeterOFFTime));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(MeterOFFLocationLAT));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(MeterOFFLocationLON));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(RunningKM));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Amount));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((float)(WaitingTime));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((float)(WaitingCost));
            if ((PaymentType == null)) {
                throw new global::System.ArgumentNullException("PaymentType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(PaymentType));
            }
            if ((PaymentRecive == null)) {
                throw new global::System.ArgumentNullException("PaymentRecive");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(PaymentRecive));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(TotalAmount));
            if ((VoucherNo == null)) {
                throw new global::System.ArgumentNullException("VoucherNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(VoucherNo));
            }
            if ((MType == null)) {
                throw new global::System.ArgumentNullException("MType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(MType));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(DiscountAmount));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((long)(Original_AutoNo));
            if ((Original_VehiclID == null)) {
                throw new global::System.ArgumentNullException("Original_VehiclID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_VehiclID));
            }
            if ((Original_DriverID == null)) {
                throw new global::System.ArgumentNullException("Original_DriverID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_DriverID));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((long)(Original_BookingID));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_MeterONTime));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(Original_MeterOnLocationLAT));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(Original_MeterOnLoationLON));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_MeterOFFTime));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Original_MeterOFFLocationLAT));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(Original_MeterOFFLocationLON));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(Original_RunningKM));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(Original_Amount));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((float)(Original_WaitingTime));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((float)(Original_WaitingCost));
            if ((Original_PaymentType == null)) {
                throw new global::System.ArgumentNullException("Original_PaymentType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_PaymentType));
            }
            if ((Original_PaymentRecive == null)) {
                throw new global::System.ArgumentNullException("Original_PaymentRecive");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_PaymentRecive));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(Original_TotalAmount));
            if ((Original_VoucherNo == null)) {
                throw new global::System.ArgumentNullException("Original_VoucherNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_VoucherNo));
            }
            if ((Original_MType == null)) {
                throw new global::System.ArgumentNullException("Original_MType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_MType));
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(Original_DiscountAmount));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long BookingID, 
                    System.DateTime MeterONTime, 
                    double MeterOnLocationLAT, 
                    double MeterOnLoationLON, 
                    System.DateTime MeterOFFTime, 
                    double MeterOFFLocationLAT, 
                    double MeterOFFLocationLON, 
                    double RunningKM, 
                    double Amount, 
                    float WaitingTime, 
                    float WaitingCost, 
                    string PaymentType, 
                    string PaymentRecive, 
                    double TotalAmount, 
                    string VoucherNo, 
                    string MType, 
                    double DiscountAmount, 
                    long Original_AutoNo, 
                    string Original_VehiclID, 
                    string Original_DriverID, 
                    long Original_BookingID, 
                    System.DateTime Original_MeterONTime, 
                    double Original_MeterOnLocationLAT, 
                    double Original_MeterOnLoationLON, 
                    System.DateTime Original_MeterOFFTime, 
                    double Original_MeterOFFLocationLAT, 
                    double Original_MeterOFFLocationLON, 
                    double Original_RunningKM, 
                    double Original_Amount, 
                    float Original_WaitingTime, 
                    float Original_WaitingCost, 
                    string Original_PaymentType, 
                    string Original_PaymentRecive, 
                    double Original_TotalAmount, 
                    string Original_VoucherNo, 
                    string Original_MType, 
                    double Original_DiscountAmount) {
            return this.Update(Original_VehiclID, Original_DriverID, BookingID, MeterONTime, MeterOnLocationLAT, MeterOnLoationLON, MeterOFFTime, MeterOFFLocationLAT, MeterOFFLocationLON, RunningKM, Amount, WaitingTime, WaitingCost, PaymentType, PaymentRecive, TotalAmount, VoucherNo, MType, DiscountAmount, Original_AutoNo, Original_VehiclID, Original_DriverID, Original_BookingID, Original_MeterONTime, Original_MeterOnLocationLAT, Original_MeterOnLoationLON, Original_MeterOFFTime, Original_MeterOFFLocationLAT, Original_MeterOFFLocationLON, Original_RunningKM, Original_Amount, Original_WaitingTime, Original_WaitingCost, Original_PaymentType, Original_PaymentRecive, Original_TotalAmount, Original_VoucherNo, Original_MType, Original_DiscountAmount);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NonAcceptBookingTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NonAcceptBookingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NonAcceptBooking";
            tableMapping.ColumnMappings.Add("AutoID", "AutoID");
            tableMapping.ColumnMappings.Add("BookingID", "BookingID");
            tableMapping.ColumnMappings.Add("BookingStatus", "BookingStatus");
            tableMapping.ColumnMappings.Add("RefNo", "RefNo");
            tableMapping.ColumnMappings.Add("ImiNo", "ImiNo");
            tableMapping.ColumnMappings.Add("CabNo", "CabNo");
            tableMapping.ColumnMappings.Add("ClientMobile", "ClientMobile");
            tableMapping.ColumnMappings.Add("ClientName", "ClientName");
            tableMapping.ColumnMappings.Add("ClientAddress", "ClientAddress");
            tableMapping.ColumnMappings.Add("LandMark", "LandMark");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("RQTime", "RQTime");
            tableMapping.ColumnMappings.Add("LAT", "LAT");
            tableMapping.ColumnMappings.Add("LON", "LON");
            tableMapping.ColumnMappings.Add("AcceptTime", "AcceptTime");
            tableMapping.ColumnMappings.Add("AtThePlaceTime", "AtThePlaceTime");
            tableMapping.ColumnMappings.Add("MeterOnTime", "MeterOnTime");
            tableMapping.ColumnMappings.Add("MeterOffTime", "MeterOffTime");
            tableMapping.ColumnMappings.Add("MeterOffLAT", "MeterOffLAT");
            tableMapping.ColumnMappings.Add("MeterOffLON", "MeterOffLON");
            tableMapping.ColumnMappings.Add("MeterOffAddress", "MeterOffAddress");
            tableMapping.ColumnMappings.Add("RunningKM", "RunningKM");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("InitialKm", "InitialKm");
            tableMapping.ColumnMappings.Add("PerKMCharge", "PerKMCharge");
            tableMapping.ColumnMappings.Add("Flag", "Flag");
            tableMapping.ColumnMappings.Add("WaitingPerMinute", "WaitingPerMinute");
            tableMapping.ColumnMappings.Add("FixAmount", "FixAmount");
            tableMapping.ColumnMappings.Add("RecordInsertTime", "RecordInsertTime");
            tableMapping.ColumnMappings.Add("GCMFlag", "GCMFlag");
            tableMapping.ColumnMappings.Add("kangarooupdate", "kangarooupdate");
            tableMapping.ColumnMappings.Add("WaitingTime", "WaitingTime");
            tableMapping.ColumnMappings.Add("WaitingCost", "WaitingCost");
            tableMapping.ColumnMappings.Add("Rating", "Rating");
            tableMapping.ColumnMappings.Add("DNo", "DNo");
            tableMapping.ColumnMappings.Add("DRating", "DRating");
            tableMapping.ColumnMappings.Add("CabType", "CabType");
            tableMapping.ColumnMappings.Add("FreeWaiting", "FreeWaiting");
            tableMapping.ColumnMappings.Add("BookingType", "BookingType");
            tableMapping.ColumnMappings.Add("PCode", "PCode");
            tableMapping.ColumnMappings.Add("PaymentType", "PaymentType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `NonAcceptBooking` (`BookingID`, `BookingStatus`, `RefNo`, `ImiNo`, `CabNo`, `ClientMobile`, `ClientName`, `ClientAddress`, `LandMark`, `Remark`, `RQTime`, `LAT`, `LON`, `AcceptTime`, `AtThePlaceTime`, `MeterOnTime`, `MeterOffTime`, `MeterOffLAT`, `MeterOffLON`, `MeterOffAddress`, `RunningKM`, `Amount`, `InitialKm`, `PerKMCharge`, `Flag`, `WaitingPerMinute`, `FixAmount`, `RecordInsertTime`, `GCMFlag`, `kangarooupdate`, `WaitingTime`, `WaitingCost`, `Rating`, `DNo`, `DRating`, `CabType`, `FreeWaiting`, `BookingType`, `PCode`, `PaymentType`) VALUES (@BookingID, @BookingStatus, @RefNo, @ImiNo, @CabNo, @ClientMobile, @ClientName, @ClientAddress, @LandMark, @Remark, @RQTime, @LAT, @LON, @AcceptTime, @AtThePlaceTime, @MeterOnTime, @MeterOffTime, @MeterOffLAT, @MeterOffLON, @MeterOffAddress, @RunningKM, @Amount, @InitialKm, @PerKMCharge, @Flag, @WaitingPerMinute, @FixAmount, @RecordInsertTime, @GCMFlag, @kangarooupdate, @WaitingTime, @WaitingCost, @Rating, @DNo, @DRating, @CabType, @FreeWaiting, @BookingType, @PCode, @PaymentType)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingStatus";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "BookingStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RefNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "RefNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ImiNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ImiNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientMobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientMobile";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientAddress";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LandMark";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "LandMark";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Remark";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Remark";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RQTime";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "RQTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "LAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "LON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@AcceptTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "AcceptTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@AtThePlaceTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "AtThePlaceTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOnTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterOnTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffLAT";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffLAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffLON";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffLON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffAddress";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RunningKM";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "RunningKM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "Amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@InitialKm";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "InitialKm";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PerKMCharge";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "PerKMCharge";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Flag";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Flag";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingPerMinute";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingPerMinute";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FixAmount";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "FixAmount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RecordInsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "RecordInsertTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@GCMFlag";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "GCMFlag";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@kangarooupdate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "kangarooupdate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingTime";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingCost";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingCost";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Rating";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Rating";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "DNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DRating";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "DRating";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "CabType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FreeWaiting";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FreeWaiting";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "BookingType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PaymentType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "PaymentType";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `AutoID`, `BookingID`, `BookingStatus`, `RefNo`, `ImiNo`, `CabNo`, `ClientMobile`, `ClientName`, `ClientAddress`, `LandMark`, `Remark`, `RQTime`, `LAT`, `LON`, `AcceptTime`, `AtThePlaceTime`, `MeterOnTime`, `MeterOffTime`, `MeterOffLAT`, `MeterOffLON`, `MeterOffAddress`, `RunningKM`, `Amount`, `InitialKm`, `PerKMCharge`, `Flag`, `WaitingPerMinute`, `FixAmount`, `RecordInsertTime`, `GCMFlag`, `kangarooupdate`, `WaitingTime`, `WaitingCost`, `Rating`, `DNo`, `DRating`, `CabType`, `FreeWaiting`, `BookingType`, `PCode`, `PaymentType` FROM `NonAcceptBooking`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.NonAcceptBookingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.NonAcceptBookingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.NonAcceptBookingDataTable dataTable = new budgetDataSet.NonAcceptBookingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.NonAcceptBookingDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "NonAcceptBooking");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long BookingID, 
                    string BookingStatus, 
                    string RefNo, 
                    string ImiNo, 
                    string CabNo, 
                    string ClientMobile, 
                    string ClientName, 
                    string ClientAddress, 
                    string LandMark, 
                    string Remark, 
                    string RQTime, 
                    double LAT, 
                    double LON, 
                    System.DateTime AcceptTime, 
                    System.DateTime AtThePlaceTime, 
                    System.DateTime MeterOnTime, 
                    System.DateTime MeterOffTime, 
                    float MeterOffLAT, 
                    float MeterOffLON, 
                    string MeterOffAddress, 
                    double RunningKM, 
                    double Amount, 
                    double InitialKm, 
                    double PerKMCharge, 
                    string Flag, 
                    float WaitingPerMinute, 
                    float FixAmount, 
                    System.DateTime RecordInsertTime, 
                    byte GCMFlag, 
                    int kangarooupdate, 
                    float WaitingTime, 
                    float WaitingCost, 
                    int Rating, 
                    string DNo, 
                    double DRating, 
                    string CabType, 
                    int FreeWaiting, 
                    string BookingType, 
                    string PCode, 
                    string PaymentType) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(BookingID));
            if ((BookingStatus == null)) {
                throw new global::System.ArgumentNullException("BookingStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BookingStatus));
            }
            if ((RefNo == null)) {
                throw new global::System.ArgumentNullException("RefNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(RefNo));
            }
            if ((ImiNo == null)) {
                throw new global::System.ArgumentNullException("ImiNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ImiNo));
            }
            if ((CabNo == null)) {
                throw new global::System.ArgumentNullException("CabNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CabNo));
            }
            if ((ClientMobile == null)) {
                throw new global::System.ArgumentNullException("ClientMobile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ClientMobile));
            }
            if ((ClientName == null)) {
                throw new global::System.ArgumentNullException("ClientName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ClientName));
            }
            if ((ClientAddress == null)) {
                throw new global::System.ArgumentNullException("ClientAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ClientAddress));
            }
            if ((LandMark == null)) {
                throw new global::System.ArgumentNullException("LandMark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(LandMark));
            }
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Remark));
            }
            if ((RQTime == null)) {
                throw new global::System.ArgumentNullException("RQTime");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(RQTime));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((double)(LAT));
            this.Adapter.InsertCommand.Parameters[12].Value = ((double)(LON));
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(AcceptTime));
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(AtThePlaceTime));
            this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(MeterOnTime));
            this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(MeterOffTime));
            this.Adapter.InsertCommand.Parameters[17].Value = ((float)(MeterOffLAT));
            this.Adapter.InsertCommand.Parameters[18].Value = ((float)(MeterOffLON));
            if ((MeterOffAddress == null)) {
                throw new global::System.ArgumentNullException("MeterOffAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(MeterOffAddress));
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((double)(RunningKM));
            this.Adapter.InsertCommand.Parameters[21].Value = ((double)(Amount));
            this.Adapter.InsertCommand.Parameters[22].Value = ((double)(InitialKm));
            this.Adapter.InsertCommand.Parameters[23].Value = ((double)(PerKMCharge));
            if ((Flag == null)) {
                throw new global::System.ArgumentNullException("Flag");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Flag));
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((float)(WaitingPerMinute));
            this.Adapter.InsertCommand.Parameters[26].Value = ((float)(FixAmount));
            this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(RecordInsertTime));
            this.Adapter.InsertCommand.Parameters[28].Value = ((byte)(GCMFlag));
            this.Adapter.InsertCommand.Parameters[29].Value = ((int)(kangarooupdate));
            this.Adapter.InsertCommand.Parameters[30].Value = ((float)(WaitingTime));
            this.Adapter.InsertCommand.Parameters[31].Value = ((float)(WaitingCost));
            this.Adapter.InsertCommand.Parameters[32].Value = ((int)(Rating));
            if ((DNo == null)) {
                throw new global::System.ArgumentNullException("DNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(DNo));
            }
            this.Adapter.InsertCommand.Parameters[34].Value = ((double)(DRating));
            if ((CabType == null)) {
                throw new global::System.ArgumentNullException("CabType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(CabType));
            }
            this.Adapter.InsertCommand.Parameters[36].Value = ((int)(FreeWaiting));
            if ((BookingType == null)) {
                throw new global::System.ArgumentNullException("BookingType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(BookingType));
            }
            if ((PCode == null)) {
                throw new global::System.ArgumentNullException("PCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(PCode));
            }
            if ((PaymentType == null)) {
                throw new global::System.ArgumentNullException("PaymentType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(PaymentType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NonAcceptDespatchBookingTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NonAcceptDespatchBookingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NonAcceptDespatchBooking";
            tableMapping.ColumnMappings.Add("AutoID", "AutoID");
            tableMapping.ColumnMappings.Add("BookingID", "BookingID");
            tableMapping.ColumnMappings.Add("BookingStatus", "BookingStatus");
            tableMapping.ColumnMappings.Add("RefNo", "RefNo");
            tableMapping.ColumnMappings.Add("ImiNo", "ImiNo");
            tableMapping.ColumnMappings.Add("CabNo", "CabNo");
            tableMapping.ColumnMappings.Add("ClientMobile", "ClientMobile");
            tableMapping.ColumnMappings.Add("ClientName", "ClientName");
            tableMapping.ColumnMappings.Add("ClientAddress", "ClientAddress");
            tableMapping.ColumnMappings.Add("LandMark", "LandMark");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("RQTime", "RQTime");
            tableMapping.ColumnMappings.Add("LAT", "LAT");
            tableMapping.ColumnMappings.Add("LON", "LON");
            tableMapping.ColumnMappings.Add("AcceptTime", "AcceptTime");
            tableMapping.ColumnMappings.Add("AtThePlaceTime", "AtThePlaceTime");
            tableMapping.ColumnMappings.Add("MeterOnTime", "MeterOnTime");
            tableMapping.ColumnMappings.Add("MeterOffTime", "MeterOffTime");
            tableMapping.ColumnMappings.Add("MeterOffLAT", "MeterOffLAT");
            tableMapping.ColumnMappings.Add("MeterOffLON", "MeterOffLON");
            tableMapping.ColumnMappings.Add("MeterOffAddress", "MeterOffAddress");
            tableMapping.ColumnMappings.Add("RunningKM", "RunningKM");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("InitialKm", "InitialKm");
            tableMapping.ColumnMappings.Add("PerKMCharge", "PerKMCharge");
            tableMapping.ColumnMappings.Add("Flag", "Flag");
            tableMapping.ColumnMappings.Add("WaitingPerMinute", "WaitingPerMinute");
            tableMapping.ColumnMappings.Add("FixAmount", "FixAmount");
            tableMapping.ColumnMappings.Add("RecordInsertTime", "RecordInsertTime");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `NonAcceptDespatchBooking` (`BookingID`, `BookingStatus`, `RefNo`, `ImiNo`, `CabNo`, `ClientMobile`, `ClientName`, `ClientAddress`, `LandMark`, `Remark`, `RQTime`, `LAT`, `LON`, `AcceptTime`, `AtThePlaceTime`, `MeterOnTime`, `MeterOffTime`, `MeterOffLAT`, `MeterOffLON`, `MeterOffAddress`, `RunningKM`, `Amount`, `InitialKm`, `PerKMCharge`, `Flag`, `WaitingPerMinute`, `FixAmount`, `RecordInsertTime`) VALUES (@BookingID, @BookingStatus, @RefNo, @ImiNo, @CabNo, @ClientMobile, @ClientName, @ClientAddress, @LandMark, @Remark, @RQTime, @LAT, @LON, @AcceptTime, @AtThePlaceTime, @MeterOnTime, @MeterOffTime, @MeterOffLAT, @MeterOffLON, @MeterOffAddress, @RunningKM, @Amount, @InitialKm, @PerKMCharge, @Flag, @WaitingPerMinute, @FixAmount, @RecordInsertTime)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingStatus";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "BookingStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RefNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "RefNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ImiNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ImiNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CabNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientMobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientMobile";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientAddress";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LandMark";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "LandMark";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Remark";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Remark";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RQTime";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "RQTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "LAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "LON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@AcceptTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "AcceptTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@AtThePlaceTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "AtThePlaceTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOnTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterOnTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffLAT";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffLAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffLON";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffLON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@MeterOffAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "MeterOffAddress";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RunningKM";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "RunningKM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Amount";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "Amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@InitialKm";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "InitialKm";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PerKMCharge";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "PerKMCharge";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Flag";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Flag";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingPerMinute";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingPerMinute";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FixAmount";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "FixAmount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RecordInsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "RecordInsertTime";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `AutoID`, `BookingID`, `BookingStatus`, `RefNo`, `ImiNo`, `CabNo`, `ClientMobile`, `ClientName`, `ClientAddress`, `LandMark`, `Remark`, `RQTime`, `LAT`, `LON`, `AcceptTime`, `AtThePlaceTime`, `MeterOnTime`, `MeterOffTime`, `MeterOffLAT`, `MeterOffLON`, `MeterOffAddress`, `RunningKM`, `Amount`, `InitialKm`, `PerKMCharge`, `Flag`, `WaitingPerMinute`, `FixAmount`, `RecordInsertTime` FROM `NonAcceptDespatchBooking`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.NonAcceptDespatchBookingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.NonAcceptDespatchBookingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.NonAcceptDespatchBookingDataTable dataTable = new budgetDataSet.NonAcceptDespatchBookingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.NonAcceptDespatchBookingDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "NonAcceptDespatchBooking");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long BookingID, 
                    string BookingStatus, 
                    string RefNo, 
                    string ImiNo, 
                    string CabNo, 
                    string ClientMobile, 
                    string ClientName, 
                    string ClientAddress, 
                    string LandMark, 
                    string Remark, 
                    string RQTime, 
                    double LAT, 
                    double LON, 
                    System.DateTime AcceptTime, 
                    System.DateTime AtThePlaceTime, 
                    System.DateTime MeterOnTime, 
                    System.DateTime MeterOffTime, 
                    float MeterOffLAT, 
                    float MeterOffLON, 
                    string MeterOffAddress, 
                    double RunningKM, 
                    double Amount, 
                    double InitialKm, 
                    double PerKMCharge, 
                    string Flag, 
                    float WaitingPerMinute, 
                    float FixAmount, 
                    System.DateTime RecordInsertTime) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(BookingID));
            if ((BookingStatus == null)) {
                throw new global::System.ArgumentNullException("BookingStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BookingStatus));
            }
            if ((RefNo == null)) {
                throw new global::System.ArgumentNullException("RefNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(RefNo));
            }
            if ((ImiNo == null)) {
                throw new global::System.ArgumentNullException("ImiNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ImiNo));
            }
            if ((CabNo == null)) {
                throw new global::System.ArgumentNullException("CabNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CabNo));
            }
            if ((ClientMobile == null)) {
                throw new global::System.ArgumentNullException("ClientMobile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ClientMobile));
            }
            if ((ClientName == null)) {
                throw new global::System.ArgumentNullException("ClientName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ClientName));
            }
            if ((ClientAddress == null)) {
                throw new global::System.ArgumentNullException("ClientAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ClientAddress));
            }
            if ((LandMark == null)) {
                throw new global::System.ArgumentNullException("LandMark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(LandMark));
            }
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Remark));
            }
            if ((RQTime == null)) {
                throw new global::System.ArgumentNullException("RQTime");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(RQTime));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((double)(LAT));
            this.Adapter.InsertCommand.Parameters[12].Value = ((double)(LON));
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(AcceptTime));
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(AtThePlaceTime));
            this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(MeterOnTime));
            this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(MeterOffTime));
            this.Adapter.InsertCommand.Parameters[17].Value = ((float)(MeterOffLAT));
            this.Adapter.InsertCommand.Parameters[18].Value = ((float)(MeterOffLON));
            if ((MeterOffAddress == null)) {
                throw new global::System.ArgumentNullException("MeterOffAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(MeterOffAddress));
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((double)(RunningKM));
            this.Adapter.InsertCommand.Parameters[21].Value = ((double)(Amount));
            this.Adapter.InsertCommand.Parameters[22].Value = ((double)(InitialKm));
            this.Adapter.InsertCommand.Parameters[23].Value = ((double)(PerKMCharge));
            if ((Flag == null)) {
                throw new global::System.ArgumentNullException("Flag");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Flag));
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((float)(WaitingPerMinute));
            this.Adapter.InsertCommand.Parameters[26].Value = ((float)(FixAmount));
            this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(RecordInsertTime));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NonDespatchBookingsTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NonDespatchBookingsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NonDespatchBookings";
            tableMapping.ColumnMappings.Add("AutoID", "AutoID");
            tableMapping.ColumnMappings.Add("BookingID", "BookingID");
            tableMapping.ColumnMappings.Add("RefNo", "RefNo");
            tableMapping.ColumnMappings.Add("ClientMobile", "ClientMobile");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("ClientName", "ClientName");
            tableMapping.ColumnMappings.Add("ClientAddress", "ClientAddress");
            tableMapping.ColumnMappings.Add("RQDateTime", "RQDateTime");
            tableMapping.ColumnMappings.Add("RQTime", "RQTime");
            tableMapping.ColumnMappings.Add("LAT", "LAT");
            tableMapping.ColumnMappings.Add("LON", "LON");
            tableMapping.ColumnMappings.Add("Flag", "Flag");
            tableMapping.ColumnMappings.Add("RecordInsertTime", "RecordInsertTime");
            tableMapping.ColumnMappings.Add("VType", "VType");
            tableMapping.ColumnMappings.Add("dropLAT", "dropLAT");
            tableMapping.ColumnMappings.Add("dropLON", "dropLON");
            tableMapping.ColumnMappings.Add("gpsLAT", "gpsLAT");
            tableMapping.ColumnMappings.Add("gpsLON", "gpsLON");
            tableMapping.ColumnMappings.Add("considered", "considered");
            tableMapping.ColumnMappings.Add("LandMark", "LandMark");
            tableMapping.ColumnMappings.Add("CabType", "CabType");
            tableMapping.ColumnMappings.Add("BookingTimeCategory", "BookingTimeCategory");
            tableMapping.ColumnMappings.Add("PCode", "PCode");
            tableMapping.ColumnMappings.Add("PaymentType", "PaymentType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `NonDespatchBookings` (`BookingID`, `RefNo`, `ClientMobile`, `Title`, `ClientName`, `ClientAddress`, `RQDateTime`, `RQTime`, `LAT`, `LON`, `Flag`, `RecordInsertTime`, `VType`, `dropLAT`, `dropLON`, `gpsLAT`, `gpsLON`, `considered`, `LandMark`, `CabType`, `BookingTimeCategory`, `PCode`, `PaymentType`) VALUES (@BookingID, @RefNo, @ClientMobile, @Title, @ClientName, @ClientAddress, @RQDateTime, @RQTime, @LAT, @LON, @Flag, @RecordInsertTime, @VType, @dropLAT, @dropLON, @gpsLAT, @gpsLON, @considered, @LandMark, @CabType, @BookingTimeCategory, @PCode, @PaymentType)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RefNo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "RefNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientMobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientMobile";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Title";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Title";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientAddress";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientAddress";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RQDateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "RQDateTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RQTime";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "RQTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "LAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "LON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Flag";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Flag";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RecordInsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "RecordInsertTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@VType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "VType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dropLAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "dropLAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dropLON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "dropLON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@gpsLAT";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "gpsLAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@gpsLON";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "gpsLON";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@considered";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "considered";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@LandMark";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "LandMark";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "CabType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingTimeCategory";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "BookingTimeCategory";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PaymentType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PaymentType";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `AutoID`, `BookingID`, `RefNo`, `ClientMobile`, `Title`, `ClientName`, `ClientAddress`, `RQDateTime`, `RQTime`, `LAT`, `LON`, `Flag`, `RecordInsertTime`, `VType`, `dropLAT`, `dropLON`, `gpsLAT`, `gpsLON`, `considered`, `LandMark`, `CabType`, `BookingTimeCategory`, `PCode`, `PaymentType` FROM `NonDespatchBookings`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.NonDespatchBookingsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.NonDespatchBookingsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.NonDespatchBookingsDataTable dataTable = new budgetDataSet.NonDespatchBookingsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.NonDespatchBookingsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "NonDespatchBookings");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long BookingID, 
                    string RefNo, 
                    string ClientMobile, 
                    string Title, 
                    string ClientName, 
                    string ClientAddress, 
                    System.DateTime RQDateTime, 
                    string RQTime, 
                    double LAT, 
                    double LON, 
                    string Flag, 
                    System.DateTime RecordInsertTime, 
                    string VType, 
                    double dropLAT, 
                    double dropLON, 
                    double gpsLAT, 
                    double gpsLON, 
                    int considered, 
                    string LandMark, 
                    string CabType, 
                    string BookingTimeCategory, 
                    string PCode, 
                    string PaymentType) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(BookingID));
            if ((RefNo == null)) {
                throw new global::System.ArgumentNullException("RefNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(RefNo));
            }
            if ((ClientMobile == null)) {
                throw new global::System.ArgumentNullException("ClientMobile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ClientMobile));
            }
            if ((Title == null)) {
                throw new global::System.ArgumentNullException("Title");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Title));
            }
            if ((ClientName == null)) {
                throw new global::System.ArgumentNullException("ClientName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ClientName));
            }
            if ((ClientAddress == null)) {
                throw new global::System.ArgumentNullException("ClientAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ClientAddress));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(RQDateTime));
            if ((RQTime == null)) {
                throw new global::System.ArgumentNullException("RQTime");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(RQTime));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((double)(LAT));
            this.Adapter.InsertCommand.Parameters[9].Value = ((double)(LON));
            if ((Flag == null)) {
                throw new global::System.ArgumentNullException("Flag");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Flag));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(RecordInsertTime));
            if ((VType == null)) {
                throw new global::System.ArgumentNullException("VType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(VType));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((double)(dropLAT));
            this.Adapter.InsertCommand.Parameters[14].Value = ((double)(dropLON));
            this.Adapter.InsertCommand.Parameters[15].Value = ((double)(gpsLAT));
            this.Adapter.InsertCommand.Parameters[16].Value = ((double)(gpsLON));
            this.Adapter.InsertCommand.Parameters[17].Value = ((int)(considered));
            if ((LandMark == null)) {
                throw new global::System.ArgumentNullException("LandMark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(LandMark));
            }
            if ((CabType == null)) {
                throw new global::System.ArgumentNullException("CabType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(CabType));
            }
            if ((BookingTimeCategory == null)) {
                throw new global::System.ArgumentNullException("BookingTimeCategory");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(BookingTimeCategory));
            }
            if ((PCode == null)) {
                throw new global::System.ArgumentNullException("PCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(PCode));
            }
            if ((PaymentType == null)) {
                throw new global::System.ArgumentNullException("PaymentType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(PaymentType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class paraTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public paraTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "para";
            tableMapping.ColumnMappings.Add("RPBookingID", "RPBookingID");
            tableMapping.ColumnMappings.Add("preset", "preset");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `para` (`RPBookingID`, `preset`) VALUES (@RPBookingID, @preset)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RPBookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "RPBookingID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@preset";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "preset";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `RPBookingID`, `preset` FROM `para`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.paraDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.paraDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.paraDataTable dataTable = new budgetDataSet.paraDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.paraDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "para");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long RPBookingID, string preset) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(RPBookingID));
            if ((preset == null)) {
                throw new global::System.ArgumentNullException("preset");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(preset));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PCUsedTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PCUsedTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PCUsed";
            tableMapping.ColumnMappings.Add("AutoID", "AutoID");
            tableMapping.ColumnMappings.Add("ClientMobile", "ClientMobile");
            tableMapping.ColumnMappings.Add("BookingID", "BookingID");
            tableMapping.ColumnMappings.Add("PCode", "PCode");
            tableMapping.ColumnMappings.Add("InsertDateTime", "InsertDateTime");
            tableMapping.ColumnMappings.Add("CabType", "CabType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `PCUsed` WHERE ((`AutoID` = @Original_AutoID) AND (`ClientMobile` = @Original_ClientMobile) AND (`BookingID` = @Original_BookingID) AND (`PCode` = @Original_PCode) AND (`InsertDateTime` = @Original_InsertDateTime) AND (`CabType` = @Original_CabType))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "AutoID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ClientMobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientMobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_InsertDateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "InsertDateTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CabType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "CabType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `PCUsed` (`ClientMobile`, `BookingID`, `PCode`, `InsertDateTime`, `Ca" +
                "bType`) VALUES (@ClientMobile, @BookingID, @PCode, @InsertDateTime, @CabType)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientMobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientMobile";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@InsertDateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "InsertDateTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "CabType";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `PCUsed` SET `ClientMobile` = @ClientMobile, `BookingID` = @BookingID, `PCode` = @PCode, `InsertDateTime` = @InsertDateTime, `CabType` = @CabType WHERE ((`AutoID` = @Original_AutoID) AND (`ClientMobile` = @Original_ClientMobile) AND (`BookingID` = @Original_BookingID) AND (`PCode` = @Original_PCode) AND (`InsertDateTime` = @Original_InsertDateTime) AND (`CabType` = @Original_CabType))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ClientMobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientMobile";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@InsertDateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "InsertDateTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CabType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "CabType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "AutoID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ClientMobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ClientMobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_BookingID";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "BookingID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_InsertDateTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "InsertDateTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CabType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "CabType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `AutoID`, `ClientMobile`, `BookingID`, `PCode`, `InsertDateTime`, `CabType" +
                "` FROM `PCUsed`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.PCUsedDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.PCUsedDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.PCUsedDataTable dataTable = new budgetDataSet.PCUsedDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.PCUsedDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PCUsed");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_AutoID, string Original_ClientMobile, long Original_BookingID, string Original_PCode, System.DateTime Original_InsertDateTime, string Original_CabType) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_AutoID));
            if ((Original_ClientMobile == null)) {
                throw new global::System.ArgumentNullException("Original_ClientMobile");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ClientMobile));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_BookingID));
            if ((Original_PCode == null)) {
                throw new global::System.ArgumentNullException("Original_PCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_PCode));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_InsertDateTime));
            if ((Original_CabType == null)) {
                throw new global::System.ArgumentNullException("Original_CabType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_CabType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ClientMobile, long BookingID, string PCode, System.DateTime InsertDateTime, string CabType) {
            if ((ClientMobile == null)) {
                throw new global::System.ArgumentNullException("ClientMobile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ClientMobile));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(BookingID));
            if ((PCode == null)) {
                throw new global::System.ArgumentNullException("PCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PCode));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(InsertDateTime));
            if ((CabType == null)) {
                throw new global::System.ArgumentNullException("CabType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CabType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ClientMobile, long BookingID, string PCode, System.DateTime InsertDateTime, string CabType, long Original_AutoID, string Original_ClientMobile, long Original_BookingID, string Original_PCode, System.DateTime Original_InsertDateTime, string Original_CabType) {
            if ((ClientMobile == null)) {
                throw new global::System.ArgumentNullException("ClientMobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ClientMobile));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(BookingID));
            if ((PCode == null)) {
                throw new global::System.ArgumentNullException("PCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PCode));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(InsertDateTime));
            if ((CabType == null)) {
                throw new global::System.ArgumentNullException("CabType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CabType));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(Original_AutoID));
            if ((Original_ClientMobile == null)) {
                throw new global::System.ArgumentNullException("Original_ClientMobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_ClientMobile));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Original_BookingID));
            if ((Original_PCode == null)) {
                throw new global::System.ArgumentNullException("Original_PCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_PCode));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_InsertDateTime));
            if ((Original_CabType == null)) {
                throw new global::System.ArgumentNullException("Original_CabType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_CabType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RatesTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RatesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Rates";
            tableMapping.ColumnMappings.Add("AutoID", "AutoID");
            tableMapping.ColumnMappings.Add("InitialKm", "InitialKm");
            tableMapping.ColumnMappings.Add("PerKMCharge", "PerKMCharge");
            tableMapping.ColumnMappings.Add("WaitingPerMinute", "WaitingPerMinute");
            tableMapping.ColumnMappings.Add("FixAmount", "FixAmount");
            tableMapping.ColumnMappings.Add("TaxiType", "TaxiType");
            tableMapping.ColumnMappings.Add("NightMode", "NightMode");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `Rates` WHERE ((`AutoID` = @Original_AutoID) AND (`InitialKm` = @Original_InitialKm) AND (`PerKMCharge` = @Original_PerKMCharge) AND (`WaitingPerMinute` = @Original_WaitingPerMinute) AND (`FixAmount` = @Original_FixAmount) AND (`TaxiType` = @Original_TaxiType) AND (`NightMode` = @Original_NightMode))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AutoID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_InitialKm";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "InitialKm";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PerKMCharge";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "PerKMCharge";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_WaitingPerMinute";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingPerMinute";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_FixAmount";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "FixAmount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TaxiType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "TaxiType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_NightMode";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "NightMode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `Rates` (`InitialKm`, `PerKMCharge`, `WaitingPerMinute`, `FixAmount`," +
                " `TaxiType`, `NightMode`) VALUES (@InitialKm, @PerKMCharge, @WaitingPerMinute, @" +
                "FixAmount, @TaxiType, @NightMode)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@InitialKm";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "InitialKm";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PerKMCharge";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "PerKMCharge";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingPerMinute";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingPerMinute";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FixAmount";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "FixAmount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TaxiType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "TaxiType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@NightMode";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "NightMode";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `Rates` SET `InitialKm` = @InitialKm, `PerKMCharge` = @PerKMCharge, `WaitingPerMinute` = @WaitingPerMinute, `FixAmount` = @FixAmount, `TaxiType` = @TaxiType, `NightMode` = @NightMode WHERE ((`AutoID` = @Original_AutoID) AND (`InitialKm` = @Original_InitialKm) AND (`PerKMCharge` = @Original_PerKMCharge) AND (`WaitingPerMinute` = @Original_WaitingPerMinute) AND (`FixAmount` = @Original_FixAmount) AND (`TaxiType` = @Original_TaxiType) AND (`NightMode` = @Original_NightMode))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@InitialKm";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "InitialKm";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PerKMCharge";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "PerKMCharge";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingPerMinute";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingPerMinute";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FixAmount";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "FixAmount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TaxiType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "TaxiType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@NightMode";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "NightMode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AutoID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_InitialKm";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "InitialKm";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PerKMCharge";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "PerKMCharge";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_WaitingPerMinute";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingPerMinute";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_FixAmount";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "FixAmount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TaxiType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "TaxiType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_NightMode";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "NightMode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `AutoID`, `InitialKm`, `PerKMCharge`, `WaitingPerMinute`, `FixAmount`, `Ta" +
                "xiType`, `NightMode` FROM `Rates`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.RatesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.RatesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.RatesDataTable dataTable = new budgetDataSet.RatesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.RatesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Rates");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_AutoID, float Original_InitialKm, float Original_PerKMCharge, float Original_WaitingPerMinute, float Original_FixAmount, string Original_TaxiType, string Original_NightMode) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AutoID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((float)(Original_InitialKm));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((float)(Original_PerKMCharge));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((float)(Original_WaitingPerMinute));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((float)(Original_FixAmount));
            if ((Original_TaxiType == null)) {
                throw new global::System.ArgumentNullException("Original_TaxiType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_TaxiType));
            }
            if ((Original_NightMode == null)) {
                throw new global::System.ArgumentNullException("Original_NightMode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_NightMode));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(float InitialKm, float PerKMCharge, float WaitingPerMinute, float FixAmount, string TaxiType, string NightMode) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((float)(InitialKm));
            this.Adapter.InsertCommand.Parameters[1].Value = ((float)(PerKMCharge));
            this.Adapter.InsertCommand.Parameters[2].Value = ((float)(WaitingPerMinute));
            this.Adapter.InsertCommand.Parameters[3].Value = ((float)(FixAmount));
            if ((TaxiType == null)) {
                throw new global::System.ArgumentNullException("TaxiType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(TaxiType));
            }
            if ((NightMode == null)) {
                throw new global::System.ArgumentNullException("NightMode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(NightMode));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(float InitialKm, float PerKMCharge, float WaitingPerMinute, float FixAmount, string TaxiType, string NightMode, int Original_AutoID, float Original_InitialKm, float Original_PerKMCharge, float Original_WaitingPerMinute, float Original_FixAmount, string Original_TaxiType, string Original_NightMode) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((float)(InitialKm));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((float)(PerKMCharge));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((float)(WaitingPerMinute));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((float)(FixAmount));
            if ((TaxiType == null)) {
                throw new global::System.ArgumentNullException("TaxiType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(TaxiType));
            }
            if ((NightMode == null)) {
                throw new global::System.ArgumentNullException("NightMode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(NightMode));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_AutoID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((float)(Original_InitialKm));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((float)(Original_PerKMCharge));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((float)(Original_WaitingPerMinute));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((float)(Original_FixAmount));
            if ((Original_TaxiType == null)) {
                throw new global::System.ArgumentNullException("Original_TaxiType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_TaxiType));
            }
            if ((Original_NightMode == null)) {
                throw new global::System.ArgumentNullException("Original_NightMode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_NightMode));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RatesNightTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RatesNightTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RatesNight";
            tableMapping.ColumnMappings.Add("AutoID", "AutoID");
            tableMapping.ColumnMappings.Add("InitialKm", "InitialKm");
            tableMapping.ColumnMappings.Add("PerKMCharge", "PerKMCharge");
            tableMapping.ColumnMappings.Add("WaitingPerMinute", "WaitingPerMinute");
            tableMapping.ColumnMappings.Add("FixAmount", "FixAmount");
            tableMapping.ColumnMappings.Add("TaxiType", "TaxiType");
            tableMapping.ColumnMappings.Add("start", "start");
            tableMapping.ColumnMappings.Add("end", "end");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `RatesNight` WHERE ((`AutoID` = @Original_AutoID) AND (`InitialKm` = @Original_InitialKm) AND (`PerKMCharge` = @Original_PerKMCharge) AND (`WaitingPerMinute` = @Original_WaitingPerMinute) AND (`FixAmount` = @Original_FixAmount) AND (`TaxiType` = @Original_TaxiType) AND (`start` = @Original_start) AND (`end` = @Original_end))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AutoID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_InitialKm";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "InitialKm";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PerKMCharge";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "PerKMCharge";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_WaitingPerMinute";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingPerMinute";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_FixAmount";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "FixAmount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TaxiType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "TaxiType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_start";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "start";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_end";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "end";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `RatesNight` (`InitialKm`, `PerKMCharge`, `WaitingPerMinute`, `FixAmo" +
                "unt`, `TaxiType`, `start`, `end`) VALUES (@InitialKm, @PerKMCharge, @WaitingPerM" +
                "inute, @FixAmount, @TaxiType, @start, @end)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@InitialKm";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "InitialKm";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PerKMCharge";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "PerKMCharge";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingPerMinute";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingPerMinute";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FixAmount";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "FixAmount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TaxiType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "TaxiType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@start";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "start";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@end";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "end";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `RatesNight` SET `InitialKm` = @InitialKm, `PerKMCharge` = @PerKMCharge, `WaitingPerMinute` = @WaitingPerMinute, `FixAmount` = @FixAmount, `TaxiType` = @TaxiType, `start` = @start, `end` = @end WHERE ((`AutoID` = @Original_AutoID) AND (`InitialKm` = @Original_InitialKm) AND (`PerKMCharge` = @Original_PerKMCharge) AND (`WaitingPerMinute` = @Original_WaitingPerMinute) AND (`FixAmount` = @Original_FixAmount) AND (`TaxiType` = @Original_TaxiType) AND (`start` = @Original_start) AND (`end` = @Original_end))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@InitialKm";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "InitialKm";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@PerKMCharge";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "PerKMCharge";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@WaitingPerMinute";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingPerMinute";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FixAmount";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "FixAmount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TaxiType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "TaxiType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@start";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "start";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@end";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "end";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AutoID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_InitialKm";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "InitialKm";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_PerKMCharge";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "PerKMCharge";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_WaitingPerMinute";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "WaitingPerMinute";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_FixAmount";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "FixAmount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TaxiType";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.IsNullable = true;
            param.SourceColumn = "TaxiType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_start";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "start";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_end";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "end";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `AutoID`, `InitialKm`, `PerKMCharge`, `WaitingPerMinute`, `FixAmount`, `Ta" +
                "xiType`, `start`, `end` FROM `RatesNight`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.RatesNightDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.RatesNightDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.RatesNightDataTable dataTable = new budgetDataSet.RatesNightDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.RatesNightDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "RatesNight");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_AutoID, float Original_InitialKm, float Original_PerKMCharge, float Original_WaitingPerMinute, float Original_FixAmount, string Original_TaxiType, int Original_start, int Original_end) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AutoID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((float)(Original_InitialKm));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((float)(Original_PerKMCharge));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((float)(Original_WaitingPerMinute));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((float)(Original_FixAmount));
            if ((Original_TaxiType == null)) {
                throw new global::System.ArgumentNullException("Original_TaxiType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_TaxiType));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_start));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_end));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(float InitialKm, float PerKMCharge, float WaitingPerMinute, float FixAmount, string TaxiType, int start, int end) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((float)(InitialKm));
            this.Adapter.InsertCommand.Parameters[1].Value = ((float)(PerKMCharge));
            this.Adapter.InsertCommand.Parameters[2].Value = ((float)(WaitingPerMinute));
            this.Adapter.InsertCommand.Parameters[3].Value = ((float)(FixAmount));
            if ((TaxiType == null)) {
                throw new global::System.ArgumentNullException("TaxiType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(TaxiType));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(start));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(end));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(float InitialKm, float PerKMCharge, float WaitingPerMinute, float FixAmount, string TaxiType, int start, int end, int Original_AutoID, float Original_InitialKm, float Original_PerKMCharge, float Original_WaitingPerMinute, float Original_FixAmount, string Original_TaxiType, int Original_start, int Original_end) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((float)(InitialKm));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((float)(PerKMCharge));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((float)(WaitingPerMinute));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((float)(FixAmount));
            if ((TaxiType == null)) {
                throw new global::System.ArgumentNullException("TaxiType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(TaxiType));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(start));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(end));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_AutoID));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((float)(Original_InitialKm));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((float)(Original_PerKMCharge));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((float)(Original_WaitingPerMinute));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((float)(Original_FixAmount));
            if ((Original_TaxiType == null)) {
                throw new global::System.ArgumentNullException("Original_TaxiType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_TaxiType));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_start));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_end));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SMSTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SMSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SMS";
            tableMapping.ColumnMappings.Add("AutoID", "AutoID");
            tableMapping.ColumnMappings.Add("type", "type");
            tableMapping.ColumnMappings.Add("message", "message");
            tableMapping.ColumnMappings.Add("clientmobile", "clientmobile");
            tableMapping.ColumnMappings.Add("sendflag", "sendflag");
            tableMapping.ColumnMappings.Add("RecordInsertTime", "RecordInsertTime");
            tableMapping.ColumnMappings.Add("sendtime", "sendtime");
            tableMapping.ColumnMappings.Add("respond", "respond");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `SMS` WHERE ((`AutoID` = @Original_AutoID) AND (`type` = @Original_type) AND (`message` = @Original_message) AND (`clientmobile` = @Original_clientmobile) AND (`sendflag` = @Original_sendflag) AND (`RecordInsertTime` = @Original_RecordInsertTime) AND (`sendtime` = @Original_sendtime) AND (`respond` = @Original_respond))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AutoID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_type";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_message";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "message";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_clientmobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "clientmobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sendflag";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sendflag";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_RecordInsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "RecordInsertTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sendtime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "sendtime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_respond";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "respond";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `SMS` (`type`, `message`, `clientmobile`, `sendflag`, `RecordInsertTi" +
                "me`, `sendtime`, `respond`) VALUES (@type, @message, @clientmobile, @sendflag, @" +
                "RecordInsertTime, @sendtime, @respond)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@type";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "type";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@message";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "message";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@clientmobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "clientmobile";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sendflag";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sendflag";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RecordInsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "RecordInsertTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sendtime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "sendtime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@respond";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "respond";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `SMS` SET `type` = @type, `message` = @message, `clientmobile` = @clientmobile, `sendflag` = @sendflag, `RecordInsertTime` = @RecordInsertTime, `sendtime` = @sendtime, `respond` = @respond WHERE ((`AutoID` = @Original_AutoID) AND (`type` = @Original_type) AND (`message` = @Original_message) AND (`clientmobile` = @Original_clientmobile) AND (`sendflag` = @Original_sendflag) AND (`RecordInsertTime` = @Original_RecordInsertTime) AND (`sendtime` = @Original_sendtime) AND (`respond` = @Original_respond))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@type";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "type";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@message";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "message";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@clientmobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "clientmobile";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sendflag";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sendflag";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@RecordInsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "RecordInsertTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@sendtime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "sendtime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@respond";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "respond";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_AutoID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AutoID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_type";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_message";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "message";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_clientmobile";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "clientmobile";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sendflag";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sendflag";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_RecordInsertTime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "RecordInsertTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_sendtime";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "sendtime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_respond";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "respond";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication3.Properties.Settings.Default.budgetConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `AutoID`, `type`, `message`, `clientmobile`, `sendflag`, `RecordInsertTime" +
                "`, `sendtime`, `respond` FROM `SMS`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(budgetDataSet.SMSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual budgetDataSet.SMSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            budgetDataSet.SMSDataTable dataTable = new budgetDataSet.SMSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet.SMSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(budgetDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SMS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_AutoID, string Original_type, string Original_message, string Original_clientmobile, string Original_sendflag, System.DateTime Original_RecordInsertTime, System.DateTime Original_sendtime, string Original_respond) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AutoID));
            if ((Original_type == null)) {
                throw new global::System.ArgumentNullException("Original_type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_type));
            }
            if ((Original_message == null)) {
                throw new global::System.ArgumentNullException("Original_message");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_message));
            }
            if ((Original_clientmobile == null)) {
                throw new global::System.ArgumentNullException("Original_clientmobile");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_clientmobile));
            }
            if ((Original_sendflag == null)) {
                throw new global::System.ArgumentNullException("Original_sendflag");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_sendflag));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_RecordInsertTime));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_sendtime));
            if ((Original_respond == null)) {
                throw new global::System.ArgumentNullException("Original_respond");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_respond));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string type, string message, string clientmobile, string sendflag, System.DateTime RecordInsertTime, System.DateTime sendtime, string respond) {
            if ((type == null)) {
                throw new global::System.ArgumentNullException("type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(type));
            }
            if ((message == null)) {
                throw new global::System.ArgumentNullException("message");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(message));
            }
            if ((clientmobile == null)) {
                throw new global::System.ArgumentNullException("clientmobile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(clientmobile));
            }
            if ((sendflag == null)) {
                throw new global::System.ArgumentNullException("sendflag");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(sendflag));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(RecordInsertTime));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(sendtime));
            if ((respond == null)) {
                throw new global::System.ArgumentNullException("respond");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(respond));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string type, string message, string clientmobile, string sendflag, System.DateTime RecordInsertTime, System.DateTime sendtime, string respond, int Original_AutoID, string Original_type, string Original_message, string Original_clientmobile, string Original_sendflag, System.DateTime Original_RecordInsertTime, System.DateTime Original_sendtime, string Original_respond) {
            if ((type == null)) {
                throw new global::System.ArgumentNullException("type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(type));
            }
            if ((message == null)) {
                throw new global::System.ArgumentNullException("message");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(message));
            }
            if ((clientmobile == null)) {
                throw new global::System.ArgumentNullException("clientmobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(clientmobile));
            }
            if ((sendflag == null)) {
                throw new global::System.ArgumentNullException("sendflag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(sendflag));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(RecordInsertTime));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(sendtime));
            if ((respond == null)) {
                throw new global::System.ArgumentNullException("respond");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(respond));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_AutoID));
            if ((Original_type == null)) {
                throw new global::System.ArgumentNullException("Original_type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_type));
            }
            if ((Original_message == null)) {
                throw new global::System.ArgumentNullException("Original_message");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_message));
            }
            if ((Original_clientmobile == null)) {
                throw new global::System.ArgumentNullException("Original_clientmobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_clientmobile));
            }
            if ((Original_sendflag == null)) {
                throw new global::System.ArgumentNullException("Original_sendflag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_sendflag));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_RecordInsertTime));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_sendtime));
            if ((Original_respond == null)) {
                throw new global::System.ArgumentNullException("Original_respond");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_respond));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private AppBookingCancelationTableAdapter _appBookingCancelationTableAdapter;
        
        private booking_statusTableAdapter _booking_statusTableAdapter;
        
        private BookinStatusLogTableAdapter _bookinStatusLogTableAdapter;
        
        private CancelBookingTableAdapter _cancelBookingTableAdapter;
        
        private CancelBookingNewTableAdapter _cancelBookingNewTableAdapter;
        
        private ClientFavoriteTableAdapter _clientFavoriteTableAdapter;
        
        private ClientMobileRegistrationOldTableAdapter _clientMobileRegistrationOldTableAdapter;
        
        private DespatchBookingTableAdapter _despatchBookingTableAdapter;
        
        private DespatchBookingStatusTableAdapter _despatchBookingStatusTableAdapter;
        
        private DisEngageBookingTableAdapter _disEngageBookingTableAdapter;
        
        private driver_log_onoffTableAdapter _driver_log_onoffTableAdapter;
        
        private driver_mobile_registrationTableAdapter _driver_mobile_registrationTableAdapter;
        
        private driver_status_identifierTableAdapter _driver_status_identifierTableAdapter;
        
        private DriverStatusTableAdapter _driverStatusTableAdapter;
        
        private EMAILTableAdapter _eMAILTableAdapter;
        
        private fleet_monitorTableAdapter _fleet_monitorTableAdapter;
        
        private GpsFailTableAdapter _gpsFailTableAdapter;
        
        private GPSMStatTableAdapter _gPSMStatTableAdapter;
        
        private log_dataTableAdapter _log_dataTableAdapter;
        
        private LogOffTableAdapter _logOffTableAdapter;
        
        private LogSheetTableAdapter _logSheetTableAdapter;
        
        private NonAcceptBookingTableAdapter _nonAcceptBookingTableAdapter;
        
        private NonAcceptDespatchBookingTableAdapter _nonAcceptDespatchBookingTableAdapter;
        
        private NonDespatchBookingsTableAdapter _nonDespatchBookingsTableAdapter;
        
        private paraTableAdapter _paraTableAdapter;
        
        private PCUsedTableAdapter _pCUsedTableAdapter;
        
        private RatesTableAdapter _ratesTableAdapter;
        
        private RatesNightTableAdapter _ratesNightTableAdapter;
        
        private SMSTableAdapter _sMSTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public AppBookingCancelationTableAdapter AppBookingCancelationTableAdapter {
            get {
                return this._appBookingCancelationTableAdapter;
            }
            set {
                this._appBookingCancelationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public booking_statusTableAdapter booking_statusTableAdapter {
            get {
                return this._booking_statusTableAdapter;
            }
            set {
                this._booking_statusTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BookinStatusLogTableAdapter BookinStatusLogTableAdapter {
            get {
                return this._bookinStatusLogTableAdapter;
            }
            set {
                this._bookinStatusLogTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CancelBookingTableAdapter CancelBookingTableAdapter {
            get {
                return this._cancelBookingTableAdapter;
            }
            set {
                this._cancelBookingTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CancelBookingNewTableAdapter CancelBookingNewTableAdapter {
            get {
                return this._cancelBookingNewTableAdapter;
            }
            set {
                this._cancelBookingNewTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ClientFavoriteTableAdapter ClientFavoriteTableAdapter {
            get {
                return this._clientFavoriteTableAdapter;
            }
            set {
                this._clientFavoriteTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ClientMobileRegistrationOldTableAdapter ClientMobileRegistrationOldTableAdapter {
            get {
                return this._clientMobileRegistrationOldTableAdapter;
            }
            set {
                this._clientMobileRegistrationOldTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DespatchBookingTableAdapter DespatchBookingTableAdapter {
            get {
                return this._despatchBookingTableAdapter;
            }
            set {
                this._despatchBookingTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DespatchBookingStatusTableAdapter DespatchBookingStatusTableAdapter {
            get {
                return this._despatchBookingStatusTableAdapter;
            }
            set {
                this._despatchBookingStatusTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DisEngageBookingTableAdapter DisEngageBookingTableAdapter {
            get {
                return this._disEngageBookingTableAdapter;
            }
            set {
                this._disEngageBookingTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public driver_log_onoffTableAdapter driver_log_onoffTableAdapter {
            get {
                return this._driver_log_onoffTableAdapter;
            }
            set {
                this._driver_log_onoffTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public driver_mobile_registrationTableAdapter driver_mobile_registrationTableAdapter {
            get {
                return this._driver_mobile_registrationTableAdapter;
            }
            set {
                this._driver_mobile_registrationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public driver_status_identifierTableAdapter driver_status_identifierTableAdapter {
            get {
                return this._driver_status_identifierTableAdapter;
            }
            set {
                this._driver_status_identifierTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DriverStatusTableAdapter DriverStatusTableAdapter {
            get {
                return this._driverStatusTableAdapter;
            }
            set {
                this._driverStatusTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EMAILTableAdapter EMAILTableAdapter {
            get {
                return this._eMAILTableAdapter;
            }
            set {
                this._eMAILTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public fleet_monitorTableAdapter fleet_monitorTableAdapter {
            get {
                return this._fleet_monitorTableAdapter;
            }
            set {
                this._fleet_monitorTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public GpsFailTableAdapter GpsFailTableAdapter {
            get {
                return this._gpsFailTableAdapter;
            }
            set {
                this._gpsFailTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public GPSMStatTableAdapter GPSMStatTableAdapter {
            get {
                return this._gPSMStatTableAdapter;
            }
            set {
                this._gPSMStatTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public log_dataTableAdapter log_dataTableAdapter {
            get {
                return this._log_dataTableAdapter;
            }
            set {
                this._log_dataTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LogOffTableAdapter LogOffTableAdapter {
            get {
                return this._logOffTableAdapter;
            }
            set {
                this._logOffTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LogSheetTableAdapter LogSheetTableAdapter {
            get {
                return this._logSheetTableAdapter;
            }
            set {
                this._logSheetTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public NonAcceptBookingTableAdapter NonAcceptBookingTableAdapter {
            get {
                return this._nonAcceptBookingTableAdapter;
            }
            set {
                this._nonAcceptBookingTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public NonAcceptDespatchBookingTableAdapter NonAcceptDespatchBookingTableAdapter {
            get {
                return this._nonAcceptDespatchBookingTableAdapter;
            }
            set {
                this._nonAcceptDespatchBookingTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public NonDespatchBookingsTableAdapter NonDespatchBookingsTableAdapter {
            get {
                return this._nonDespatchBookingsTableAdapter;
            }
            set {
                this._nonDespatchBookingsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public paraTableAdapter paraTableAdapter {
            get {
                return this._paraTableAdapter;
            }
            set {
                this._paraTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PCUsedTableAdapter PCUsedTableAdapter {
            get {
                return this._pCUsedTableAdapter;
            }
            set {
                this._pCUsedTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public RatesTableAdapter RatesTableAdapter {
            get {
                return this._ratesTableAdapter;
            }
            set {
                this._ratesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public RatesNightTableAdapter RatesNightTableAdapter {
            get {
                return this._ratesNightTableAdapter;
            }
            set {
                this._ratesNightTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SMSTableAdapter SMSTableAdapter {
            get {
                return this._sMSTableAdapter;
            }
            set {
                this._sMSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._appBookingCancelationTableAdapter != null) 
                            && (this._appBookingCancelationTableAdapter.Connection != null))) {
                    return this._appBookingCancelationTableAdapter.Connection;
                }
                if (((this._booking_statusTableAdapter != null) 
                            && (this._booking_statusTableAdapter.Connection != null))) {
                    return this._booking_statusTableAdapter.Connection;
                }
                if (((this._bookinStatusLogTableAdapter != null) 
                            && (this._bookinStatusLogTableAdapter.Connection != null))) {
                    return this._bookinStatusLogTableAdapter.Connection;
                }
                if (((this._cancelBookingTableAdapter != null) 
                            && (this._cancelBookingTableAdapter.Connection != null))) {
                    return this._cancelBookingTableAdapter.Connection;
                }
                if (((this._cancelBookingNewTableAdapter != null) 
                            && (this._cancelBookingNewTableAdapter.Connection != null))) {
                    return this._cancelBookingNewTableAdapter.Connection;
                }
                if (((this._clientFavoriteTableAdapter != null) 
                            && (this._clientFavoriteTableAdapter.Connection != null))) {
                    return this._clientFavoriteTableAdapter.Connection;
                }
                if (((this._clientMobileRegistrationOldTableAdapter != null) 
                            && (this._clientMobileRegistrationOldTableAdapter.Connection != null))) {
                    return this._clientMobileRegistrationOldTableAdapter.Connection;
                }
                if (((this._despatchBookingTableAdapter != null) 
                            && (this._despatchBookingTableAdapter.Connection != null))) {
                    return this._despatchBookingTableAdapter.Connection;
                }
                if (((this._despatchBookingStatusTableAdapter != null) 
                            && (this._despatchBookingStatusTableAdapter.Connection != null))) {
                    return this._despatchBookingStatusTableAdapter.Connection;
                }
                if (((this._disEngageBookingTableAdapter != null) 
                            && (this._disEngageBookingTableAdapter.Connection != null))) {
                    return this._disEngageBookingTableAdapter.Connection;
                }
                if (((this._driver_log_onoffTableAdapter != null) 
                            && (this._driver_log_onoffTableAdapter.Connection != null))) {
                    return this._driver_log_onoffTableAdapter.Connection;
                }
                if (((this._driver_mobile_registrationTableAdapter != null) 
                            && (this._driver_mobile_registrationTableAdapter.Connection != null))) {
                    return this._driver_mobile_registrationTableAdapter.Connection;
                }
                if (((this._driver_status_identifierTableAdapter != null) 
                            && (this._driver_status_identifierTableAdapter.Connection != null))) {
                    return this._driver_status_identifierTableAdapter.Connection;
                }
                if (((this._driverStatusTableAdapter != null) 
                            && (this._driverStatusTableAdapter.Connection != null))) {
                    return this._driverStatusTableAdapter.Connection;
                }
                if (((this._eMAILTableAdapter != null) 
                            && (this._eMAILTableAdapter.Connection != null))) {
                    return this._eMAILTableAdapter.Connection;
                }
                if (((this._fleet_monitorTableAdapter != null) 
                            && (this._fleet_monitorTableAdapter.Connection != null))) {
                    return this._fleet_monitorTableAdapter.Connection;
                }
                if (((this._gpsFailTableAdapter != null) 
                            && (this._gpsFailTableAdapter.Connection != null))) {
                    return this._gpsFailTableAdapter.Connection;
                }
                if (((this._gPSMStatTableAdapter != null) 
                            && (this._gPSMStatTableAdapter.Connection != null))) {
                    return this._gPSMStatTableAdapter.Connection;
                }
                if (((this._log_dataTableAdapter != null) 
                            && (this._log_dataTableAdapter.Connection != null))) {
                    return this._log_dataTableAdapter.Connection;
                }
                if (((this._logOffTableAdapter != null) 
                            && (this._logOffTableAdapter.Connection != null))) {
                    return this._logOffTableAdapter.Connection;
                }
                if (((this._logSheetTableAdapter != null) 
                            && (this._logSheetTableAdapter.Connection != null))) {
                    return this._logSheetTableAdapter.Connection;
                }
                if (((this._nonAcceptBookingTableAdapter != null) 
                            && (this._nonAcceptBookingTableAdapter.Connection != null))) {
                    return this._nonAcceptBookingTableAdapter.Connection;
                }
                if (((this._nonAcceptDespatchBookingTableAdapter != null) 
                            && (this._nonAcceptDespatchBookingTableAdapter.Connection != null))) {
                    return this._nonAcceptDespatchBookingTableAdapter.Connection;
                }
                if (((this._nonDespatchBookingsTableAdapter != null) 
                            && (this._nonDespatchBookingsTableAdapter.Connection != null))) {
                    return this._nonDespatchBookingsTableAdapter.Connection;
                }
                if (((this._paraTableAdapter != null) 
                            && (this._paraTableAdapter.Connection != null))) {
                    return this._paraTableAdapter.Connection;
                }
                if (((this._pCUsedTableAdapter != null) 
                            && (this._pCUsedTableAdapter.Connection != null))) {
                    return this._pCUsedTableAdapter.Connection;
                }
                if (((this._ratesTableAdapter != null) 
                            && (this._ratesTableAdapter.Connection != null))) {
                    return this._ratesTableAdapter.Connection;
                }
                if (((this._ratesNightTableAdapter != null) 
                            && (this._ratesNightTableAdapter.Connection != null))) {
                    return this._ratesNightTableAdapter.Connection;
                }
                if (((this._sMSTableAdapter != null) 
                            && (this._sMSTableAdapter.Connection != null))) {
                    return this._sMSTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._appBookingCancelationTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._booking_statusTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bookinStatusLogTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cancelBookingTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cancelBookingNewTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._clientFavoriteTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._clientMobileRegistrationOldTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._despatchBookingTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._despatchBookingStatusTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._disEngageBookingTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._driver_log_onoffTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._driver_mobile_registrationTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._driver_status_identifierTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._driverStatusTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eMAILTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fleet_monitorTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._gpsFailTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._gPSMStatTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._log_dataTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._logOffTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._logSheetTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._nonAcceptBookingTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._nonAcceptDespatchBookingTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._nonDespatchBookingsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._paraTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pCUsedTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._ratesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._ratesNightTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sMSTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(budgetDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._logOffTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LogOff.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._logOffTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._logSheetTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LogSheet.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._logSheetTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._nonAcceptBookingTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.NonAcceptBooking.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._nonAcceptBookingTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._log_dataTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.log_data.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._log_dataTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._fleet_monitorTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.fleet_monitor.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fleet_monitorTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._gpsFailTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.GpsFail.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._gpsFailTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._gPSMStatTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.GPSMStat.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._gPSMStatTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._ratesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Rates.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._ratesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._ratesNightTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.RatesNight.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._ratesNightTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sMSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SMS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sMSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pCUsedTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PCUsed.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pCUsedTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._nonAcceptDespatchBookingTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.NonAcceptDespatchBooking.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._nonAcceptDespatchBookingTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._nonDespatchBookingsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.NonDespatchBookings.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._nonDespatchBookingsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._paraTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.para.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._paraTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eMAILTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.EMAIL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eMAILTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cancelBookingNewTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CancelBookingNew.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cancelBookingNewTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._clientFavoriteTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ClientFavorite.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._clientFavoriteTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._clientMobileRegistrationOldTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ClientMobileRegistrationOld.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._clientMobileRegistrationOldTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cancelBookingTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CancelBooking.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cancelBookingTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._appBookingCancelationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.AppBookingCancelation.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._appBookingCancelationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._booking_statusTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.booking_status.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._booking_statusTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bookinStatusLogTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BookinStatusLog.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bookinStatusLogTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._driver_mobile_registrationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.driver_mobile_registration.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._driver_mobile_registrationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._driver_status_identifierTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.driver_status_identifier.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._driver_status_identifierTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._driverStatusTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DriverStatus.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._driverStatusTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._driver_log_onoffTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.driver_log_onoff.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._driver_log_onoffTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._despatchBookingTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DespatchBooking.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._despatchBookingTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._despatchBookingStatusTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DespatchBookingStatus.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._despatchBookingStatusTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._disEngageBookingTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DisEngageBooking.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._disEngageBookingTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(budgetDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._logOffTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LogOff.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._logOffTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._logSheetTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LogSheet.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._logSheetTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._nonAcceptBookingTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.NonAcceptBooking.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._nonAcceptBookingTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._log_dataTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.log_data.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._log_dataTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._fleet_monitorTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.fleet_monitor.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fleet_monitorTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._gpsFailTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.GpsFail.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._gpsFailTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._gPSMStatTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.GPSMStat.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._gPSMStatTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._ratesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Rates.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._ratesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._ratesNightTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.RatesNight.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._ratesNightTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sMSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SMS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sMSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pCUsedTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PCUsed.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pCUsedTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._nonAcceptDespatchBookingTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.NonAcceptDespatchBooking.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._nonAcceptDespatchBookingTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._nonDespatchBookingsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.NonDespatchBookings.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._nonDespatchBookingsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._paraTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.para.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._paraTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eMAILTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.EMAIL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eMAILTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cancelBookingNewTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CancelBookingNew.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cancelBookingNewTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._clientFavoriteTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ClientFavorite.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._clientFavoriteTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._clientMobileRegistrationOldTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ClientMobileRegistrationOld.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._clientMobileRegistrationOldTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cancelBookingTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CancelBooking.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cancelBookingTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._appBookingCancelationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.AppBookingCancelation.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._appBookingCancelationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._booking_statusTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.booking_status.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._booking_statusTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bookinStatusLogTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BookinStatusLog.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bookinStatusLogTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._driver_mobile_registrationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.driver_mobile_registration.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._driver_mobile_registrationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._driver_status_identifierTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.driver_status_identifier.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._driver_status_identifierTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._driverStatusTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DriverStatus.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._driverStatusTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._driver_log_onoffTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.driver_log_onoff.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._driver_log_onoffTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._despatchBookingTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DespatchBooking.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._despatchBookingTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._despatchBookingStatusTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DespatchBookingStatus.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._despatchBookingStatusTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._disEngageBookingTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DisEngageBooking.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._disEngageBookingTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(budgetDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._disEngageBookingTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DisEngageBooking.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._disEngageBookingTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._despatchBookingStatusTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DespatchBookingStatus.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._despatchBookingStatusTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._despatchBookingTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DespatchBooking.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._despatchBookingTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._driver_log_onoffTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.driver_log_onoff.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._driver_log_onoffTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._driverStatusTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DriverStatus.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._driverStatusTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._driver_status_identifierTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.driver_status_identifier.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._driver_status_identifierTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._driver_mobile_registrationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.driver_mobile_registration.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._driver_mobile_registrationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bookinStatusLogTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BookinStatusLog.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bookinStatusLogTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._booking_statusTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.booking_status.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._booking_statusTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._appBookingCancelationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.AppBookingCancelation.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._appBookingCancelationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cancelBookingTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CancelBooking.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cancelBookingTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._clientMobileRegistrationOldTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ClientMobileRegistrationOld.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._clientMobileRegistrationOldTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._clientFavoriteTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ClientFavorite.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._clientFavoriteTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cancelBookingNewTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CancelBookingNew.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cancelBookingNewTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eMAILTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.EMAIL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eMAILTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._paraTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.para.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._paraTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._nonDespatchBookingsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.NonDespatchBookings.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._nonDespatchBookingsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._nonAcceptDespatchBookingTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.NonAcceptDespatchBooking.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._nonAcceptDespatchBookingTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pCUsedTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PCUsed.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pCUsedTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sMSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SMS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sMSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._ratesNightTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.RatesNight.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._ratesNightTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._ratesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Rates.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._ratesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._gPSMStatTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.GPSMStat.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._gPSMStatTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._gpsFailTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.GpsFail.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._gpsFailTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fleet_monitorTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.fleet_monitor.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fleet_monitorTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._log_dataTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.log_data.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._log_dataTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._nonAcceptBookingTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.NonAcceptBooking.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._nonAcceptBookingTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._logSheetTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LogSheet.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._logSheetTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._logOffTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LogOff.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._logOffTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(budgetDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._appBookingCancelationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._appBookingCancelationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._booking_statusTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._booking_statusTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bookinStatusLogTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bookinStatusLogTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cancelBookingTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cancelBookingTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cancelBookingNewTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cancelBookingNewTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._clientFavoriteTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._clientFavoriteTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._clientMobileRegistrationOldTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._clientMobileRegistrationOldTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._despatchBookingTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._despatchBookingTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._despatchBookingStatusTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._despatchBookingStatusTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._disEngageBookingTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._disEngageBookingTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._driver_log_onoffTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._driver_log_onoffTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._driver_mobile_registrationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._driver_mobile_registrationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._driver_status_identifierTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._driver_status_identifierTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._driverStatusTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._driverStatusTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._eMAILTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eMAILTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._fleet_monitorTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fleet_monitorTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._gpsFailTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._gpsFailTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._gPSMStatTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._gPSMStatTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._log_dataTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._log_dataTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._logOffTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._logOffTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._logSheetTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._logSheetTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._nonAcceptBookingTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._nonAcceptBookingTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._nonAcceptDespatchBookingTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._nonAcceptDespatchBookingTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._nonDespatchBookingsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._nonDespatchBookingsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._paraTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._paraTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pCUsedTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pCUsedTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._ratesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._ratesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._ratesNightTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._ratesNightTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sMSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sMSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._appBookingCancelationTableAdapter != null)) {
                    revertConnections.Add(this._appBookingCancelationTableAdapter, this._appBookingCancelationTableAdapter.Connection);
                    this._appBookingCancelationTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._appBookingCancelationTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._appBookingCancelationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._appBookingCancelationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._appBookingCancelationTableAdapter.Adapter);
                    }
                }
                if ((this._booking_statusTableAdapter != null)) {
                    revertConnections.Add(this._booking_statusTableAdapter, this._booking_statusTableAdapter.Connection);
                    this._booking_statusTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._booking_statusTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._booking_statusTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._booking_statusTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._booking_statusTableAdapter.Adapter);
                    }
                }
                if ((this._bookinStatusLogTableAdapter != null)) {
                    revertConnections.Add(this._bookinStatusLogTableAdapter, this._bookinStatusLogTableAdapter.Connection);
                    this._bookinStatusLogTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._bookinStatusLogTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._bookinStatusLogTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bookinStatusLogTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bookinStatusLogTableAdapter.Adapter);
                    }
                }
                if ((this._cancelBookingTableAdapter != null)) {
                    revertConnections.Add(this._cancelBookingTableAdapter, this._cancelBookingTableAdapter.Connection);
                    this._cancelBookingTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._cancelBookingTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._cancelBookingTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cancelBookingTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cancelBookingTableAdapter.Adapter);
                    }
                }
                if ((this._cancelBookingNewTableAdapter != null)) {
                    revertConnections.Add(this._cancelBookingNewTableAdapter, this._cancelBookingNewTableAdapter.Connection);
                    this._cancelBookingNewTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._cancelBookingNewTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._cancelBookingNewTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cancelBookingNewTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cancelBookingNewTableAdapter.Adapter);
                    }
                }
                if ((this._clientFavoriteTableAdapter != null)) {
                    revertConnections.Add(this._clientFavoriteTableAdapter, this._clientFavoriteTableAdapter.Connection);
                    this._clientFavoriteTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._clientFavoriteTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._clientFavoriteTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._clientFavoriteTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._clientFavoriteTableAdapter.Adapter);
                    }
                }
                if ((this._clientMobileRegistrationOldTableAdapter != null)) {
                    revertConnections.Add(this._clientMobileRegistrationOldTableAdapter, this._clientMobileRegistrationOldTableAdapter.Connection);
                    this._clientMobileRegistrationOldTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._clientMobileRegistrationOldTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._clientMobileRegistrationOldTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._clientMobileRegistrationOldTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._clientMobileRegistrationOldTableAdapter.Adapter);
                    }
                }
                if ((this._despatchBookingTableAdapter != null)) {
                    revertConnections.Add(this._despatchBookingTableAdapter, this._despatchBookingTableAdapter.Connection);
                    this._despatchBookingTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._despatchBookingTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._despatchBookingTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._despatchBookingTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._despatchBookingTableAdapter.Adapter);
                    }
                }
                if ((this._despatchBookingStatusTableAdapter != null)) {
                    revertConnections.Add(this._despatchBookingStatusTableAdapter, this._despatchBookingStatusTableAdapter.Connection);
                    this._despatchBookingStatusTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._despatchBookingStatusTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._despatchBookingStatusTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._despatchBookingStatusTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._despatchBookingStatusTableAdapter.Adapter);
                    }
                }
                if ((this._disEngageBookingTableAdapter != null)) {
                    revertConnections.Add(this._disEngageBookingTableAdapter, this._disEngageBookingTableAdapter.Connection);
                    this._disEngageBookingTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._disEngageBookingTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._disEngageBookingTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._disEngageBookingTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._disEngageBookingTableAdapter.Adapter);
                    }
                }
                if ((this._driver_log_onoffTableAdapter != null)) {
                    revertConnections.Add(this._driver_log_onoffTableAdapter, this._driver_log_onoffTableAdapter.Connection);
                    this._driver_log_onoffTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._driver_log_onoffTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._driver_log_onoffTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._driver_log_onoffTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._driver_log_onoffTableAdapter.Adapter);
                    }
                }
                if ((this._driver_mobile_registrationTableAdapter != null)) {
                    revertConnections.Add(this._driver_mobile_registrationTableAdapter, this._driver_mobile_registrationTableAdapter.Connection);
                    this._driver_mobile_registrationTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._driver_mobile_registrationTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._driver_mobile_registrationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._driver_mobile_registrationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._driver_mobile_registrationTableAdapter.Adapter);
                    }
                }
                if ((this._driver_status_identifierTableAdapter != null)) {
                    revertConnections.Add(this._driver_status_identifierTableAdapter, this._driver_status_identifierTableAdapter.Connection);
                    this._driver_status_identifierTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._driver_status_identifierTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._driver_status_identifierTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._driver_status_identifierTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._driver_status_identifierTableAdapter.Adapter);
                    }
                }
                if ((this._driverStatusTableAdapter != null)) {
                    revertConnections.Add(this._driverStatusTableAdapter, this._driverStatusTableAdapter.Connection);
                    this._driverStatusTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._driverStatusTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._driverStatusTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._driverStatusTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._driverStatusTableAdapter.Adapter);
                    }
                }
                if ((this._eMAILTableAdapter != null)) {
                    revertConnections.Add(this._eMAILTableAdapter, this._eMAILTableAdapter.Connection);
                    this._eMAILTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._eMAILTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._eMAILTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eMAILTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eMAILTableAdapter.Adapter);
                    }
                }
                if ((this._fleet_monitorTableAdapter != null)) {
                    revertConnections.Add(this._fleet_monitorTableAdapter, this._fleet_monitorTableAdapter.Connection);
                    this._fleet_monitorTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._fleet_monitorTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._fleet_monitorTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fleet_monitorTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fleet_monitorTableAdapter.Adapter);
                    }
                }
                if ((this._gpsFailTableAdapter != null)) {
                    revertConnections.Add(this._gpsFailTableAdapter, this._gpsFailTableAdapter.Connection);
                    this._gpsFailTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._gpsFailTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._gpsFailTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._gpsFailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._gpsFailTableAdapter.Adapter);
                    }
                }
                if ((this._gPSMStatTableAdapter != null)) {
                    revertConnections.Add(this._gPSMStatTableAdapter, this._gPSMStatTableAdapter.Connection);
                    this._gPSMStatTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._gPSMStatTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._gPSMStatTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._gPSMStatTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._gPSMStatTableAdapter.Adapter);
                    }
                }
                if ((this._log_dataTableAdapter != null)) {
                    revertConnections.Add(this._log_dataTableAdapter, this._log_dataTableAdapter.Connection);
                    this._log_dataTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._log_dataTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._log_dataTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._log_dataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._log_dataTableAdapter.Adapter);
                    }
                }
                if ((this._logOffTableAdapter != null)) {
                    revertConnections.Add(this._logOffTableAdapter, this._logOffTableAdapter.Connection);
                    this._logOffTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._logOffTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._logOffTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._logOffTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._logOffTableAdapter.Adapter);
                    }
                }
                if ((this._logSheetTableAdapter != null)) {
                    revertConnections.Add(this._logSheetTableAdapter, this._logSheetTableAdapter.Connection);
                    this._logSheetTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._logSheetTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._logSheetTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._logSheetTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._logSheetTableAdapter.Adapter);
                    }
                }
                if ((this._nonAcceptBookingTableAdapter != null)) {
                    revertConnections.Add(this._nonAcceptBookingTableAdapter, this._nonAcceptBookingTableAdapter.Connection);
                    this._nonAcceptBookingTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._nonAcceptBookingTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._nonAcceptBookingTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._nonAcceptBookingTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._nonAcceptBookingTableAdapter.Adapter);
                    }
                }
                if ((this._nonAcceptDespatchBookingTableAdapter != null)) {
                    revertConnections.Add(this._nonAcceptDespatchBookingTableAdapter, this._nonAcceptDespatchBookingTableAdapter.Connection);
                    this._nonAcceptDespatchBookingTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._nonAcceptDespatchBookingTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._nonAcceptDespatchBookingTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._nonAcceptDespatchBookingTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._nonAcceptDespatchBookingTableAdapter.Adapter);
                    }
                }
                if ((this._nonDespatchBookingsTableAdapter != null)) {
                    revertConnections.Add(this._nonDespatchBookingsTableAdapter, this._nonDespatchBookingsTableAdapter.Connection);
                    this._nonDespatchBookingsTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._nonDespatchBookingsTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._nonDespatchBookingsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._nonDespatchBookingsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._nonDespatchBookingsTableAdapter.Adapter);
                    }
                }
                if ((this._paraTableAdapter != null)) {
                    revertConnections.Add(this._paraTableAdapter, this._paraTableAdapter.Connection);
                    this._paraTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._paraTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._paraTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._paraTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._paraTableAdapter.Adapter);
                    }
                }
                if ((this._pCUsedTableAdapter != null)) {
                    revertConnections.Add(this._pCUsedTableAdapter, this._pCUsedTableAdapter.Connection);
                    this._pCUsedTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._pCUsedTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._pCUsedTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pCUsedTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pCUsedTableAdapter.Adapter);
                    }
                }
                if ((this._ratesTableAdapter != null)) {
                    revertConnections.Add(this._ratesTableAdapter, this._ratesTableAdapter.Connection);
                    this._ratesTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._ratesTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._ratesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._ratesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._ratesTableAdapter.Adapter);
                    }
                }
                if ((this._ratesNightTableAdapter != null)) {
                    revertConnections.Add(this._ratesNightTableAdapter, this._ratesNightTableAdapter.Connection);
                    this._ratesNightTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._ratesNightTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._ratesNightTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._ratesNightTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._ratesNightTableAdapter.Adapter);
                    }
                }
                if ((this._sMSTableAdapter != null)) {
                    revertConnections.Add(this._sMSTableAdapter, this._sMSTableAdapter.Connection);
                    this._sMSTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._sMSTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._sMSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sMSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sMSTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._appBookingCancelationTableAdapter != null)) {
                    this._appBookingCancelationTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._appBookingCancelationTableAdapter]));
                    this._appBookingCancelationTableAdapter.Transaction = null;
                }
                if ((this._booking_statusTableAdapter != null)) {
                    this._booking_statusTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._booking_statusTableAdapter]));
                    this._booking_statusTableAdapter.Transaction = null;
                }
                if ((this._bookinStatusLogTableAdapter != null)) {
                    this._bookinStatusLogTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._bookinStatusLogTableAdapter]));
                    this._bookinStatusLogTableAdapter.Transaction = null;
                }
                if ((this._cancelBookingTableAdapter != null)) {
                    this._cancelBookingTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._cancelBookingTableAdapter]));
                    this._cancelBookingTableAdapter.Transaction = null;
                }
                if ((this._cancelBookingNewTableAdapter != null)) {
                    this._cancelBookingNewTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._cancelBookingNewTableAdapter]));
                    this._cancelBookingNewTableAdapter.Transaction = null;
                }
                if ((this._clientFavoriteTableAdapter != null)) {
                    this._clientFavoriteTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._clientFavoriteTableAdapter]));
                    this._clientFavoriteTableAdapter.Transaction = null;
                }
                if ((this._clientMobileRegistrationOldTableAdapter != null)) {
                    this._clientMobileRegistrationOldTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._clientMobileRegistrationOldTableAdapter]));
                    this._clientMobileRegistrationOldTableAdapter.Transaction = null;
                }
                if ((this._despatchBookingTableAdapter != null)) {
                    this._despatchBookingTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._despatchBookingTableAdapter]));
                    this._despatchBookingTableAdapter.Transaction = null;
                }
                if ((this._despatchBookingStatusTableAdapter != null)) {
                    this._despatchBookingStatusTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._despatchBookingStatusTableAdapter]));
                    this._despatchBookingStatusTableAdapter.Transaction = null;
                }
                if ((this._disEngageBookingTableAdapter != null)) {
                    this._disEngageBookingTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._disEngageBookingTableAdapter]));
                    this._disEngageBookingTableAdapter.Transaction = null;
                }
                if ((this._driver_log_onoffTableAdapter != null)) {
                    this._driver_log_onoffTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._driver_log_onoffTableAdapter]));
                    this._driver_log_onoffTableAdapter.Transaction = null;
                }
                if ((this._driver_mobile_registrationTableAdapter != null)) {
                    this._driver_mobile_registrationTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._driver_mobile_registrationTableAdapter]));
                    this._driver_mobile_registrationTableAdapter.Transaction = null;
                }
                if ((this._driver_status_identifierTableAdapter != null)) {
                    this._driver_status_identifierTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._driver_status_identifierTableAdapter]));
                    this._driver_status_identifierTableAdapter.Transaction = null;
                }
                if ((this._driverStatusTableAdapter != null)) {
                    this._driverStatusTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._driverStatusTableAdapter]));
                    this._driverStatusTableAdapter.Transaction = null;
                }
                if ((this._eMAILTableAdapter != null)) {
                    this._eMAILTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._eMAILTableAdapter]));
                    this._eMAILTableAdapter.Transaction = null;
                }
                if ((this._fleet_monitorTableAdapter != null)) {
                    this._fleet_monitorTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._fleet_monitorTableAdapter]));
                    this._fleet_monitorTableAdapter.Transaction = null;
                }
                if ((this._gpsFailTableAdapter != null)) {
                    this._gpsFailTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._gpsFailTableAdapter]));
                    this._gpsFailTableAdapter.Transaction = null;
                }
                if ((this._gPSMStatTableAdapter != null)) {
                    this._gPSMStatTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._gPSMStatTableAdapter]));
                    this._gPSMStatTableAdapter.Transaction = null;
                }
                if ((this._log_dataTableAdapter != null)) {
                    this._log_dataTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._log_dataTableAdapter]));
                    this._log_dataTableAdapter.Transaction = null;
                }
                if ((this._logOffTableAdapter != null)) {
                    this._logOffTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._logOffTableAdapter]));
                    this._logOffTableAdapter.Transaction = null;
                }
                if ((this._logSheetTableAdapter != null)) {
                    this._logSheetTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._logSheetTableAdapter]));
                    this._logSheetTableAdapter.Transaction = null;
                }
                if ((this._nonAcceptBookingTableAdapter != null)) {
                    this._nonAcceptBookingTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._nonAcceptBookingTableAdapter]));
                    this._nonAcceptBookingTableAdapter.Transaction = null;
                }
                if ((this._nonAcceptDespatchBookingTableAdapter != null)) {
                    this._nonAcceptDespatchBookingTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._nonAcceptDespatchBookingTableAdapter]));
                    this._nonAcceptDespatchBookingTableAdapter.Transaction = null;
                }
                if ((this._nonDespatchBookingsTableAdapter != null)) {
                    this._nonDespatchBookingsTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._nonDespatchBookingsTableAdapter]));
                    this._nonDespatchBookingsTableAdapter.Transaction = null;
                }
                if ((this._paraTableAdapter != null)) {
                    this._paraTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._paraTableAdapter]));
                    this._paraTableAdapter.Transaction = null;
                }
                if ((this._pCUsedTableAdapter != null)) {
                    this._pCUsedTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._pCUsedTableAdapter]));
                    this._pCUsedTableAdapter.Transaction = null;
                }
                if ((this._ratesTableAdapter != null)) {
                    this._ratesTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._ratesTableAdapter]));
                    this._ratesTableAdapter.Transaction = null;
                }
                if ((this._ratesNightTableAdapter != null)) {
                    this._ratesNightTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._ratesNightTableAdapter]));
                    this._ratesNightTableAdapter.Transaction = null;
                }
                if ((this._sMSTableAdapter != null)) {
                    this._sMSTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._sMSTableAdapter]));
                    this._sMSTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591